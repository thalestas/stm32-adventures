
004Exception.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000198  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000d7c  08000198  08000198  00010198  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000088  08000f14  08000f14  00010f14  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08000f9c  08000f9c  00020064  2**0
                  CONTENTS
  4 .ARM          00000000  08000f9c  08000f9c  00020064  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000f9c  08000f9c  00020064  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000f9c  08000f9c  00010f9c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000fa0  08000fa0  00010fa0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000064  20000000  08000fa4  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000030  20000064  08001008  00020064  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  20000094  08001008  00020094  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00020064  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000a6c  00000000  00000000  00020094  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 0000037e  00000000  00000000  00020b00  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000138  00000000  00000000  00020e80  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000100  00000000  00000000  00020fb8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  000028aa  00000000  00000000  000210b8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00001140  00000000  00000000  00023962  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00009442  00000000  00000000  00024aa2  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  0002dee4  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000aa0  00000000  00000000  0002df34  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000198 <__do_global_dtors_aux>:
 8000198:	b510      	push	{r4, lr}
 800019a:	4c05      	ldr	r4, [pc, #20]	; (80001b0 <__do_global_dtors_aux+0x18>)
 800019c:	7823      	ldrb	r3, [r4, #0]
 800019e:	b933      	cbnz	r3, 80001ae <__do_global_dtors_aux+0x16>
 80001a0:	4b04      	ldr	r3, [pc, #16]	; (80001b4 <__do_global_dtors_aux+0x1c>)
 80001a2:	b113      	cbz	r3, 80001aa <__do_global_dtors_aux+0x12>
 80001a4:	4804      	ldr	r0, [pc, #16]	; (80001b8 <__do_global_dtors_aux+0x20>)
 80001a6:	f3af 8000 	nop.w
 80001aa:	2301      	movs	r3, #1
 80001ac:	7023      	strb	r3, [r4, #0]
 80001ae:	bd10      	pop	{r4, pc}
 80001b0:	20000064 	.word	0x20000064
 80001b4:	00000000 	.word	0x00000000
 80001b8:	08000efc 	.word	0x08000efc

080001bc <frame_dummy>:
 80001bc:	b508      	push	{r3, lr}
 80001be:	4b03      	ldr	r3, [pc, #12]	; (80001cc <frame_dummy+0x10>)
 80001c0:	b11b      	cbz	r3, 80001ca <frame_dummy+0xe>
 80001c2:	4903      	ldr	r1, [pc, #12]	; (80001d0 <frame_dummy+0x14>)
 80001c4:	4803      	ldr	r0, [pc, #12]	; (80001d4 <frame_dummy+0x18>)
 80001c6:	f3af 8000 	nop.w
 80001ca:	bd08      	pop	{r3, pc}
 80001cc:	00000000 	.word	0x00000000
 80001d0:	20000068 	.word	0x20000068
 80001d4:	08000efc 	.word	0x08000efc

080001d8 <enable_exception>:
#define ISER_NUM_BITS 32
#define ISPR_NUM_BITS 32
#define EXTI0_IRQ_NUMBER 6
#define SPI4_IRQ_NUMBER 84

void enable_exception(const uint8_t irq_number) {
 80001d8:	b480      	push	{r7}
 80001da:	b085      	sub	sp, #20
 80001dc:	af00      	add	r7, sp, #0
 80001de:	4603      	mov	r3, r0
 80001e0:	71fb      	strb	r3, [r7, #7]
	//NVIC_ISERx base address
	volatile uint32_t *const pISER_base = (uint32_t*) 0xE000E100;
 80001e2:	4b0d      	ldr	r3, [pc, #52]	; (8000218 <enable_exception+0x40>)
 80001e4:	60fb      	str	r3, [r7, #12]
	//Calculate which ISER to use
	volatile uint32_t *const pISER = (uint32_t*) pISER_base + (irq_number / ISER_NUM_BITS);
 80001e6:	79fb      	ldrb	r3, [r7, #7]
 80001e8:	095b      	lsrs	r3, r3, #5
 80001ea:	b2db      	uxtb	r3, r3
 80001ec:	009b      	lsls	r3, r3, #2
 80001ee:	68fa      	ldr	r2, [r7, #12]
 80001f0:	4413      	add	r3, r2
 80001f2:	60bb      	str	r3, [r7, #8]

	//Set IRQ bit
	*pISER |= (1 << (irq_number%ISER_NUM_BITS));
 80001f4:	68bb      	ldr	r3, [r7, #8]
 80001f6:	681b      	ldr	r3, [r3, #0]
 80001f8:	79fa      	ldrb	r2, [r7, #7]
 80001fa:	f002 021f 	and.w	r2, r2, #31
 80001fe:	2101      	movs	r1, #1
 8000200:	fa01 f202 	lsl.w	r2, r1, r2
 8000204:	431a      	orrs	r2, r3
 8000206:	68bb      	ldr	r3, [r7, #8]
 8000208:	601a      	str	r2, [r3, #0]
}
 800020a:	bf00      	nop
 800020c:	3714      	adds	r7, #20
 800020e:	46bd      	mov	sp, r7
 8000210:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000214:	4770      	bx	lr
 8000216:	bf00      	nop
 8000218:	e000e100 	.word	0xe000e100

0800021c <set_pending>:

void set_pending(const uint8_t irq_number) {
 800021c:	b480      	push	{r7}
 800021e:	b085      	sub	sp, #20
 8000220:	af00      	add	r7, sp, #0
 8000222:	4603      	mov	r3, r0
 8000224:	71fb      	strb	r3, [r7, #7]
	//NVIC ISPRx base address
	volatile uint32_t *const pISPR_base = (uint32_t*) 0xE000E200;
 8000226:	4b0d      	ldr	r3, [pc, #52]	; (800025c <set_pending+0x40>)
 8000228:	60fb      	str	r3, [r7, #12]
	//Calculate which ISPR to use
	volatile uint32_t *const pISPR = (uint32_t*) pISPR_base + (irq_number / ISPR_NUM_BITS);
 800022a:	79fb      	ldrb	r3, [r7, #7]
 800022c:	095b      	lsrs	r3, r3, #5
 800022e:	b2db      	uxtb	r3, r3
 8000230:	009b      	lsls	r3, r3, #2
 8000232:	68fa      	ldr	r2, [r7, #12]
 8000234:	4413      	add	r3, r2
 8000236:	60bb      	str	r3, [r7, #8]

	//Set IRQ bit
	*pISPR |= (1 << (irq_number%ISPR_NUM_BITS));
 8000238:	68bb      	ldr	r3, [r7, #8]
 800023a:	681b      	ldr	r3, [r3, #0]
 800023c:	79fa      	ldrb	r2, [r7, #7]
 800023e:	f002 021f 	and.w	r2, r2, #31
 8000242:	2101      	movs	r1, #1
 8000244:	fa01 f202 	lsl.w	r2, r1, r2
 8000248:	431a      	orrs	r2, r3
 800024a:	68bb      	ldr	r3, [r7, #8]
 800024c:	601a      	str	r2, [r3, #0]
}
 800024e:	bf00      	nop
 8000250:	3714      	adds	r7, #20
 8000252:	46bd      	mov	sp, r7
 8000254:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000258:	4770      	bx	lr
 800025a:	bf00      	nop
 800025c:	e000e200 	.word	0xe000e200

08000260 <main>:

int main(void)
{
 8000260:	b580      	push	{r7, lr}
 8000262:	af00      	add	r7, sp, #0
    /* Loop forever */
	printf("Jaraqui!\n");
 8000264:	4807      	ldr	r0, [pc, #28]	; (8000284 <main+0x24>)
 8000266:	f000 f9b9 	bl	80005dc <puts>

	/* EXT0 IRQ number 6 */
	enable_exception(EXTI0_IRQ_NUMBER);
 800026a:	2006      	movs	r0, #6
 800026c:	f7ff ffb4 	bl	80001d8 <enable_exception>

	/* Set EXTI0 as pending */
	set_pending(EXTI0_IRQ_NUMBER);
 8000270:	2006      	movs	r0, #6
 8000272:	f7ff ffd3 	bl	800021c <set_pending>

	/* EXT0 IRQ number 6 */
	enable_exception(SPI4_IRQ_NUMBER);
 8000276:	2054      	movs	r0, #84	; 0x54
 8000278:	f7ff ffae 	bl	80001d8 <enable_exception>

	/* Set EXTI0 as pending */
	set_pending(SPI4_IRQ_NUMBER);
 800027c:	2054      	movs	r0, #84	; 0x54
 800027e:	f7ff ffcd 	bl	800021c <set_pending>


	for(;;);
 8000282:	e7fe      	b.n	8000282 <main+0x22>
 8000284:	08000f14 	.word	0x08000f14

08000288 <EXTI0_IRQHandler>:
}


void EXTI0_IRQHandler() {
 8000288:	b580      	push	{r7, lr}
 800028a:	af00      	add	r7, sp, #0
	printf("Pacuzinho\n");
 800028c:	4802      	ldr	r0, [pc, #8]	; (8000298 <EXTI0_IRQHandler+0x10>)
 800028e:	f000 f9a5 	bl	80005dc <puts>
}
 8000292:	bf00      	nop
 8000294:	bd80      	pop	{r7, pc}
 8000296:	bf00      	nop
 8000298:	08000f20 	.word	0x08000f20

0800029c <SPI4_IRQHandler>:

void SPI4_IRQHandler() {
 800029c:	b580      	push	{r7, lr}
 800029e:	af00      	add	r7, sp, #0
	printf("Matrinxa\n");
 80002a0:	4802      	ldr	r0, [pc, #8]	; (80002ac <SPI4_IRQHandler+0x10>)
 80002a2:	f000 f99b 	bl	80005dc <puts>
}
 80002a6:	bf00      	nop
 80002a8:	bd80      	pop	{r7, pc}
 80002aa:	bf00      	nop
 80002ac:	08000f2c 	.word	0x08000f2c

080002b0 <ITM_SendChar>:
/* ITM register addresses */
#define ITM_STIMULUS_PORT0      *((volatile uint32_t*) 0xE0000000 )
#define ITM_TRACE_EN            *((volatile uint32_t*) 0xE0000E00 )

void ITM_SendChar(uint8_t ch)
{
 80002b0:	b480      	push	{r7}
 80002b2:	b083      	sub	sp, #12
 80002b4:	af00      	add	r7, sp, #0
 80002b6:	4603      	mov	r3, r0
 80002b8:	71fb      	strb	r3, [r7, #7]

    //Enable TRCENA
    DEMCR |= ( 1 << 24);
 80002ba:	4b0f      	ldr	r3, [pc, #60]	; (80002f8 <ITM_SendChar+0x48>)
 80002bc:	681b      	ldr	r3, [r3, #0]
 80002be:	4a0e      	ldr	r2, [pc, #56]	; (80002f8 <ITM_SendChar+0x48>)
 80002c0:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 80002c4:	6013      	str	r3, [r2, #0]

    //enable stimulus port 0
    ITM_TRACE_EN |= ( 1 << 0);
 80002c6:	4b0d      	ldr	r3, [pc, #52]	; (80002fc <ITM_SendChar+0x4c>)
 80002c8:	681b      	ldr	r3, [r3, #0]
 80002ca:	4a0c      	ldr	r2, [pc, #48]	; (80002fc <ITM_SendChar+0x4c>)
 80002cc:	f043 0301 	orr.w	r3, r3, #1
 80002d0:	6013      	str	r3, [r2, #0]

    // read FIFO status in bit [0]:
    while(!(ITM_STIMULUS_PORT0 & 1));
 80002d2:	bf00      	nop
 80002d4:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 80002d8:	681b      	ldr	r3, [r3, #0]
 80002da:	f003 0301 	and.w	r3, r3, #1
 80002de:	2b00      	cmp	r3, #0
 80002e0:	d0f8      	beq.n	80002d4 <ITM_SendChar+0x24>

    //Write to ITM stimulus port0
    ITM_STIMULUS_PORT0 = ch;
 80002e2:	f04f 4260 	mov.w	r2, #3758096384	; 0xe0000000
 80002e6:	79fb      	ldrb	r3, [r7, #7]
 80002e8:	6013      	str	r3, [r2, #0]
}
 80002ea:	bf00      	nop
 80002ec:	370c      	adds	r7, #12
 80002ee:	46bd      	mov	sp, r7
 80002f0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002f4:	4770      	bx	lr
 80002f6:	bf00      	nop
 80002f8:	e000edfc 	.word	0xe000edfc
 80002fc:	e0000e00 	.word	0xe0000e00

08000300 <_read>:
  _kill(status, -1);
  while (1) {}    /* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8000300:	b580      	push	{r7, lr}
 8000302:	b086      	sub	sp, #24
 8000304:	af00      	add	r7, sp, #0
 8000306:	60f8      	str	r0, [r7, #12]
 8000308:	60b9      	str	r1, [r7, #8]
 800030a:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800030c:	2300      	movs	r3, #0
 800030e:	617b      	str	r3, [r7, #20]
 8000310:	e00a      	b.n	8000328 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 8000312:	f3af 8000 	nop.w
 8000316:	4601      	mov	r1, r0
 8000318:	68bb      	ldr	r3, [r7, #8]
 800031a:	1c5a      	adds	r2, r3, #1
 800031c:	60ba      	str	r2, [r7, #8]
 800031e:	b2ca      	uxtb	r2, r1
 8000320:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000322:	697b      	ldr	r3, [r7, #20]
 8000324:	3301      	adds	r3, #1
 8000326:	617b      	str	r3, [r7, #20]
 8000328:	697a      	ldr	r2, [r7, #20]
 800032a:	687b      	ldr	r3, [r7, #4]
 800032c:	429a      	cmp	r2, r3
 800032e:	dbf0      	blt.n	8000312 <_read+0x12>
  }

  return len;
 8000330:	687b      	ldr	r3, [r7, #4]
}
 8000332:	4618      	mov	r0, r3
 8000334:	3718      	adds	r7, #24
 8000336:	46bd      	mov	sp, r7
 8000338:	bd80      	pop	{r7, pc}

0800033a <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 800033a:	b580      	push	{r7, lr}
 800033c:	b086      	sub	sp, #24
 800033e:	af00      	add	r7, sp, #0
 8000340:	60f8      	str	r0, [r7, #12]
 8000342:	60b9      	str	r1, [r7, #8]
 8000344:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000346:	2300      	movs	r3, #0
 8000348:	617b      	str	r3, [r7, #20]
 800034a:	e009      	b.n	8000360 <_write+0x26>
  {
    //__io_putchar(*ptr++);
    ITM_SendChar(*ptr++);
 800034c:	68bb      	ldr	r3, [r7, #8]
 800034e:	1c5a      	adds	r2, r3, #1
 8000350:	60ba      	str	r2, [r7, #8]
 8000352:	781b      	ldrb	r3, [r3, #0]
 8000354:	4618      	mov	r0, r3
 8000356:	f7ff ffab 	bl	80002b0 <ITM_SendChar>
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800035a:	697b      	ldr	r3, [r7, #20]
 800035c:	3301      	adds	r3, #1
 800035e:	617b      	str	r3, [r7, #20]
 8000360:	697a      	ldr	r2, [r7, #20]
 8000362:	687b      	ldr	r3, [r7, #4]
 8000364:	429a      	cmp	r2, r3
 8000366:	dbf1      	blt.n	800034c <_write+0x12>
  }
  return len;
 8000368:	687b      	ldr	r3, [r7, #4]
}
 800036a:	4618      	mov	r0, r3
 800036c:	3718      	adds	r7, #24
 800036e:	46bd      	mov	sp, r7
 8000370:	bd80      	pop	{r7, pc}

08000372 <_close>:

int _close(int file)
{
 8000372:	b480      	push	{r7}
 8000374:	b083      	sub	sp, #12
 8000376:	af00      	add	r7, sp, #0
 8000378:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 800037a:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
}
 800037e:	4618      	mov	r0, r3
 8000380:	370c      	adds	r7, #12
 8000382:	46bd      	mov	sp, r7
 8000384:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000388:	4770      	bx	lr

0800038a <_fstat>:


int _fstat(int file, struct stat *st)
{
 800038a:	b480      	push	{r7}
 800038c:	b083      	sub	sp, #12
 800038e:	af00      	add	r7, sp, #0
 8000390:	6078      	str	r0, [r7, #4]
 8000392:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 8000394:	683b      	ldr	r3, [r7, #0]
 8000396:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 800039a:	605a      	str	r2, [r3, #4]
  return 0;
 800039c:	2300      	movs	r3, #0
}
 800039e:	4618      	mov	r0, r3
 80003a0:	370c      	adds	r7, #12
 80003a2:	46bd      	mov	sp, r7
 80003a4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80003a8:	4770      	bx	lr

080003aa <_isatty>:

int _isatty(int file)
{
 80003aa:	b480      	push	{r7}
 80003ac:	b083      	sub	sp, #12
 80003ae:	af00      	add	r7, sp, #0
 80003b0:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 80003b2:	2301      	movs	r3, #1
}
 80003b4:	4618      	mov	r0, r3
 80003b6:	370c      	adds	r7, #12
 80003b8:	46bd      	mov	sp, r7
 80003ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 80003be:	4770      	bx	lr

080003c0 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 80003c0:	b480      	push	{r7}
 80003c2:	b085      	sub	sp, #20
 80003c4:	af00      	add	r7, sp, #0
 80003c6:	60f8      	str	r0, [r7, #12]
 80003c8:	60b9      	str	r1, [r7, #8]
 80003ca:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 80003cc:	2300      	movs	r3, #0
}
 80003ce:	4618      	mov	r0, r3
 80003d0:	3714      	adds	r7, #20
 80003d2:	46bd      	mov	sp, r7
 80003d4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80003d8:	4770      	bx	lr
	...

080003dc <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80003dc:	b580      	push	{r7, lr}
 80003de:	b086      	sub	sp, #24
 80003e0:	af00      	add	r7, sp, #0
 80003e2:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80003e4:	4a14      	ldr	r2, [pc, #80]	; (8000438 <_sbrk+0x5c>)
 80003e6:	4b15      	ldr	r3, [pc, #84]	; (800043c <_sbrk+0x60>)
 80003e8:	1ad3      	subs	r3, r2, r3
 80003ea:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80003ec:	697b      	ldr	r3, [r7, #20]
 80003ee:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80003f0:	4b13      	ldr	r3, [pc, #76]	; (8000440 <_sbrk+0x64>)
 80003f2:	681b      	ldr	r3, [r3, #0]
 80003f4:	2b00      	cmp	r3, #0
 80003f6:	d102      	bne.n	80003fe <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 80003f8:	4b11      	ldr	r3, [pc, #68]	; (8000440 <_sbrk+0x64>)
 80003fa:	4a12      	ldr	r2, [pc, #72]	; (8000444 <_sbrk+0x68>)
 80003fc:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80003fe:	4b10      	ldr	r3, [pc, #64]	; (8000440 <_sbrk+0x64>)
 8000400:	681a      	ldr	r2, [r3, #0]
 8000402:	687b      	ldr	r3, [r7, #4]
 8000404:	4413      	add	r3, r2
 8000406:	693a      	ldr	r2, [r7, #16]
 8000408:	429a      	cmp	r2, r3
 800040a:	d207      	bcs.n	800041c <_sbrk+0x40>
  {
    errno = ENOMEM;
 800040c:	f000 f846 	bl	800049c <__errno>
 8000410:	4603      	mov	r3, r0
 8000412:	220c      	movs	r2, #12
 8000414:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8000416:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800041a:	e009      	b.n	8000430 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 800041c:	4b08      	ldr	r3, [pc, #32]	; (8000440 <_sbrk+0x64>)
 800041e:	681b      	ldr	r3, [r3, #0]
 8000420:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8000422:	4b07      	ldr	r3, [pc, #28]	; (8000440 <_sbrk+0x64>)
 8000424:	681a      	ldr	r2, [r3, #0]
 8000426:	687b      	ldr	r3, [r7, #4]
 8000428:	4413      	add	r3, r2
 800042a:	4a05      	ldr	r2, [pc, #20]	; (8000440 <_sbrk+0x64>)
 800042c:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 800042e:	68fb      	ldr	r3, [r7, #12]
}
 8000430:	4618      	mov	r0, r3
 8000432:	3718      	adds	r7, #24
 8000434:	46bd      	mov	sp, r7
 8000436:	bd80      	pop	{r7, pc}
 8000438:	20020000 	.word	0x20020000
 800043c:	00000400 	.word	0x00000400
 8000440:	20000080 	.word	0x20000080
 8000444:	20000098 	.word	0x20000098

08000448 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000448:	480d      	ldr	r0, [pc, #52]	; (8000480 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800044a:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 800044c:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000450:	480c      	ldr	r0, [pc, #48]	; (8000484 <LoopForever+0x6>)
  ldr r1, =_edata
 8000452:	490d      	ldr	r1, [pc, #52]	; (8000488 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000454:	4a0d      	ldr	r2, [pc, #52]	; (800048c <LoopForever+0xe>)
  movs r3, #0
 8000456:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000458:	e002      	b.n	8000460 <LoopCopyDataInit>

0800045a <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800045a:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 800045c:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800045e:	3304      	adds	r3, #4

08000460 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000460:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000462:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000464:	d3f9      	bcc.n	800045a <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000466:	4a0a      	ldr	r2, [pc, #40]	; (8000490 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000468:	4c0a      	ldr	r4, [pc, #40]	; (8000494 <LoopForever+0x16>)
  movs r3, #0
 800046a:	2300      	movs	r3, #0
  b LoopFillZerobss
 800046c:	e001      	b.n	8000472 <LoopFillZerobss>

0800046e <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800046e:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000470:	3204      	adds	r2, #4

08000472 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000472:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000474:	d3fb      	bcc.n	800046e <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000476:	f000 f817 	bl	80004a8 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800047a:	f7ff fef1 	bl	8000260 <main>

0800047e <LoopForever>:

LoopForever:
  b LoopForever
 800047e:	e7fe      	b.n	800047e <LoopForever>
  ldr   r0, =_estack
 8000480:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000484:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000488:	20000064 	.word	0x20000064
  ldr r2, =_sidata
 800048c:	08000fa4 	.word	0x08000fa4
  ldr r2, =_sbss
 8000490:	20000064 	.word	0x20000064
  ldr r4, =_ebss
 8000494:	20000094 	.word	0x20000094

08000498 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000498:	e7fe      	b.n	8000498 <ADC_IRQHandler>
	...

0800049c <__errno>:
 800049c:	4b01      	ldr	r3, [pc, #4]	; (80004a4 <__errno+0x8>)
 800049e:	6818      	ldr	r0, [r3, #0]
 80004a0:	4770      	bx	lr
 80004a2:	bf00      	nop
 80004a4:	20000000 	.word	0x20000000

080004a8 <__libc_init_array>:
 80004a8:	b570      	push	{r4, r5, r6, lr}
 80004aa:	4d0d      	ldr	r5, [pc, #52]	; (80004e0 <__libc_init_array+0x38>)
 80004ac:	4c0d      	ldr	r4, [pc, #52]	; (80004e4 <__libc_init_array+0x3c>)
 80004ae:	1b64      	subs	r4, r4, r5
 80004b0:	10a4      	asrs	r4, r4, #2
 80004b2:	2600      	movs	r6, #0
 80004b4:	42a6      	cmp	r6, r4
 80004b6:	d109      	bne.n	80004cc <__libc_init_array+0x24>
 80004b8:	4d0b      	ldr	r5, [pc, #44]	; (80004e8 <__libc_init_array+0x40>)
 80004ba:	4c0c      	ldr	r4, [pc, #48]	; (80004ec <__libc_init_array+0x44>)
 80004bc:	f000 fd1e 	bl	8000efc <_init>
 80004c0:	1b64      	subs	r4, r4, r5
 80004c2:	10a4      	asrs	r4, r4, #2
 80004c4:	2600      	movs	r6, #0
 80004c6:	42a6      	cmp	r6, r4
 80004c8:	d105      	bne.n	80004d6 <__libc_init_array+0x2e>
 80004ca:	bd70      	pop	{r4, r5, r6, pc}
 80004cc:	f855 3b04 	ldr.w	r3, [r5], #4
 80004d0:	4798      	blx	r3
 80004d2:	3601      	adds	r6, #1
 80004d4:	e7ee      	b.n	80004b4 <__libc_init_array+0xc>
 80004d6:	f855 3b04 	ldr.w	r3, [r5], #4
 80004da:	4798      	blx	r3
 80004dc:	3601      	adds	r6, #1
 80004de:	e7f2      	b.n	80004c6 <__libc_init_array+0x1e>
 80004e0:	08000f9c 	.word	0x08000f9c
 80004e4:	08000f9c 	.word	0x08000f9c
 80004e8:	08000f9c 	.word	0x08000f9c
 80004ec:	08000fa0 	.word	0x08000fa0

080004f0 <memset>:
 80004f0:	4402      	add	r2, r0
 80004f2:	4603      	mov	r3, r0
 80004f4:	4293      	cmp	r3, r2
 80004f6:	d100      	bne.n	80004fa <memset+0xa>
 80004f8:	4770      	bx	lr
 80004fa:	f803 1b01 	strb.w	r1, [r3], #1
 80004fe:	e7f9      	b.n	80004f4 <memset+0x4>

08000500 <_puts_r>:
 8000500:	b570      	push	{r4, r5, r6, lr}
 8000502:	460e      	mov	r6, r1
 8000504:	4605      	mov	r5, r0
 8000506:	b118      	cbz	r0, 8000510 <_puts_r+0x10>
 8000508:	6983      	ldr	r3, [r0, #24]
 800050a:	b90b      	cbnz	r3, 8000510 <_puts_r+0x10>
 800050c:	f000 fa48 	bl	80009a0 <__sinit>
 8000510:	69ab      	ldr	r3, [r5, #24]
 8000512:	68ac      	ldr	r4, [r5, #8]
 8000514:	b913      	cbnz	r3, 800051c <_puts_r+0x1c>
 8000516:	4628      	mov	r0, r5
 8000518:	f000 fa42 	bl	80009a0 <__sinit>
 800051c:	4b2c      	ldr	r3, [pc, #176]	; (80005d0 <_puts_r+0xd0>)
 800051e:	429c      	cmp	r4, r3
 8000520:	d120      	bne.n	8000564 <_puts_r+0x64>
 8000522:	686c      	ldr	r4, [r5, #4]
 8000524:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8000526:	07db      	lsls	r3, r3, #31
 8000528:	d405      	bmi.n	8000536 <_puts_r+0x36>
 800052a:	89a3      	ldrh	r3, [r4, #12]
 800052c:	0598      	lsls	r0, r3, #22
 800052e:	d402      	bmi.n	8000536 <_puts_r+0x36>
 8000530:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8000532:	f000 fad3 	bl	8000adc <__retarget_lock_acquire_recursive>
 8000536:	89a3      	ldrh	r3, [r4, #12]
 8000538:	0719      	lsls	r1, r3, #28
 800053a:	d51d      	bpl.n	8000578 <_puts_r+0x78>
 800053c:	6923      	ldr	r3, [r4, #16]
 800053e:	b1db      	cbz	r3, 8000578 <_puts_r+0x78>
 8000540:	3e01      	subs	r6, #1
 8000542:	68a3      	ldr	r3, [r4, #8]
 8000544:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 8000548:	3b01      	subs	r3, #1
 800054a:	60a3      	str	r3, [r4, #8]
 800054c:	bb39      	cbnz	r1, 800059e <_puts_r+0x9e>
 800054e:	2b00      	cmp	r3, #0
 8000550:	da38      	bge.n	80005c4 <_puts_r+0xc4>
 8000552:	4622      	mov	r2, r4
 8000554:	210a      	movs	r1, #10
 8000556:	4628      	mov	r0, r5
 8000558:	f000 f848 	bl	80005ec <__swbuf_r>
 800055c:	3001      	adds	r0, #1
 800055e:	d011      	beq.n	8000584 <_puts_r+0x84>
 8000560:	250a      	movs	r5, #10
 8000562:	e011      	b.n	8000588 <_puts_r+0x88>
 8000564:	4b1b      	ldr	r3, [pc, #108]	; (80005d4 <_puts_r+0xd4>)
 8000566:	429c      	cmp	r4, r3
 8000568:	d101      	bne.n	800056e <_puts_r+0x6e>
 800056a:	68ac      	ldr	r4, [r5, #8]
 800056c:	e7da      	b.n	8000524 <_puts_r+0x24>
 800056e:	4b1a      	ldr	r3, [pc, #104]	; (80005d8 <_puts_r+0xd8>)
 8000570:	429c      	cmp	r4, r3
 8000572:	bf08      	it	eq
 8000574:	68ec      	ldreq	r4, [r5, #12]
 8000576:	e7d5      	b.n	8000524 <_puts_r+0x24>
 8000578:	4621      	mov	r1, r4
 800057a:	4628      	mov	r0, r5
 800057c:	f000 f888 	bl	8000690 <__swsetup_r>
 8000580:	2800      	cmp	r0, #0
 8000582:	d0dd      	beq.n	8000540 <_puts_r+0x40>
 8000584:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
 8000588:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800058a:	07da      	lsls	r2, r3, #31
 800058c:	d405      	bmi.n	800059a <_puts_r+0x9a>
 800058e:	89a3      	ldrh	r3, [r4, #12]
 8000590:	059b      	lsls	r3, r3, #22
 8000592:	d402      	bmi.n	800059a <_puts_r+0x9a>
 8000594:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8000596:	f000 faa2 	bl	8000ade <__retarget_lock_release_recursive>
 800059a:	4628      	mov	r0, r5
 800059c:	bd70      	pop	{r4, r5, r6, pc}
 800059e:	2b00      	cmp	r3, #0
 80005a0:	da04      	bge.n	80005ac <_puts_r+0xac>
 80005a2:	69a2      	ldr	r2, [r4, #24]
 80005a4:	429a      	cmp	r2, r3
 80005a6:	dc06      	bgt.n	80005b6 <_puts_r+0xb6>
 80005a8:	290a      	cmp	r1, #10
 80005aa:	d004      	beq.n	80005b6 <_puts_r+0xb6>
 80005ac:	6823      	ldr	r3, [r4, #0]
 80005ae:	1c5a      	adds	r2, r3, #1
 80005b0:	6022      	str	r2, [r4, #0]
 80005b2:	7019      	strb	r1, [r3, #0]
 80005b4:	e7c5      	b.n	8000542 <_puts_r+0x42>
 80005b6:	4622      	mov	r2, r4
 80005b8:	4628      	mov	r0, r5
 80005ba:	f000 f817 	bl	80005ec <__swbuf_r>
 80005be:	3001      	adds	r0, #1
 80005c0:	d1bf      	bne.n	8000542 <_puts_r+0x42>
 80005c2:	e7df      	b.n	8000584 <_puts_r+0x84>
 80005c4:	6823      	ldr	r3, [r4, #0]
 80005c6:	250a      	movs	r5, #10
 80005c8:	1c5a      	adds	r2, r3, #1
 80005ca:	6022      	str	r2, [r4, #0]
 80005cc:	701d      	strb	r5, [r3, #0]
 80005ce:	e7db      	b.n	8000588 <_puts_r+0x88>
 80005d0:	08000f5c 	.word	0x08000f5c
 80005d4:	08000f7c 	.word	0x08000f7c
 80005d8:	08000f3c 	.word	0x08000f3c

080005dc <puts>:
 80005dc:	4b02      	ldr	r3, [pc, #8]	; (80005e8 <puts+0xc>)
 80005de:	4601      	mov	r1, r0
 80005e0:	6818      	ldr	r0, [r3, #0]
 80005e2:	f7ff bf8d 	b.w	8000500 <_puts_r>
 80005e6:	bf00      	nop
 80005e8:	20000000 	.word	0x20000000

080005ec <__swbuf_r>:
 80005ec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80005ee:	460e      	mov	r6, r1
 80005f0:	4614      	mov	r4, r2
 80005f2:	4605      	mov	r5, r0
 80005f4:	b118      	cbz	r0, 80005fe <__swbuf_r+0x12>
 80005f6:	6983      	ldr	r3, [r0, #24]
 80005f8:	b90b      	cbnz	r3, 80005fe <__swbuf_r+0x12>
 80005fa:	f000 f9d1 	bl	80009a0 <__sinit>
 80005fe:	4b21      	ldr	r3, [pc, #132]	; (8000684 <__swbuf_r+0x98>)
 8000600:	429c      	cmp	r4, r3
 8000602:	d12b      	bne.n	800065c <__swbuf_r+0x70>
 8000604:	686c      	ldr	r4, [r5, #4]
 8000606:	69a3      	ldr	r3, [r4, #24]
 8000608:	60a3      	str	r3, [r4, #8]
 800060a:	89a3      	ldrh	r3, [r4, #12]
 800060c:	071a      	lsls	r2, r3, #28
 800060e:	d52f      	bpl.n	8000670 <__swbuf_r+0x84>
 8000610:	6923      	ldr	r3, [r4, #16]
 8000612:	b36b      	cbz	r3, 8000670 <__swbuf_r+0x84>
 8000614:	6923      	ldr	r3, [r4, #16]
 8000616:	6820      	ldr	r0, [r4, #0]
 8000618:	1ac0      	subs	r0, r0, r3
 800061a:	6963      	ldr	r3, [r4, #20]
 800061c:	b2f6      	uxtb	r6, r6
 800061e:	4283      	cmp	r3, r0
 8000620:	4637      	mov	r7, r6
 8000622:	dc04      	bgt.n	800062e <__swbuf_r+0x42>
 8000624:	4621      	mov	r1, r4
 8000626:	4628      	mov	r0, r5
 8000628:	f000 f926 	bl	8000878 <_fflush_r>
 800062c:	bb30      	cbnz	r0, 800067c <__swbuf_r+0x90>
 800062e:	68a3      	ldr	r3, [r4, #8]
 8000630:	3b01      	subs	r3, #1
 8000632:	60a3      	str	r3, [r4, #8]
 8000634:	6823      	ldr	r3, [r4, #0]
 8000636:	1c5a      	adds	r2, r3, #1
 8000638:	6022      	str	r2, [r4, #0]
 800063a:	701e      	strb	r6, [r3, #0]
 800063c:	6963      	ldr	r3, [r4, #20]
 800063e:	3001      	adds	r0, #1
 8000640:	4283      	cmp	r3, r0
 8000642:	d004      	beq.n	800064e <__swbuf_r+0x62>
 8000644:	89a3      	ldrh	r3, [r4, #12]
 8000646:	07db      	lsls	r3, r3, #31
 8000648:	d506      	bpl.n	8000658 <__swbuf_r+0x6c>
 800064a:	2e0a      	cmp	r6, #10
 800064c:	d104      	bne.n	8000658 <__swbuf_r+0x6c>
 800064e:	4621      	mov	r1, r4
 8000650:	4628      	mov	r0, r5
 8000652:	f000 f911 	bl	8000878 <_fflush_r>
 8000656:	b988      	cbnz	r0, 800067c <__swbuf_r+0x90>
 8000658:	4638      	mov	r0, r7
 800065a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800065c:	4b0a      	ldr	r3, [pc, #40]	; (8000688 <__swbuf_r+0x9c>)
 800065e:	429c      	cmp	r4, r3
 8000660:	d101      	bne.n	8000666 <__swbuf_r+0x7a>
 8000662:	68ac      	ldr	r4, [r5, #8]
 8000664:	e7cf      	b.n	8000606 <__swbuf_r+0x1a>
 8000666:	4b09      	ldr	r3, [pc, #36]	; (800068c <__swbuf_r+0xa0>)
 8000668:	429c      	cmp	r4, r3
 800066a:	bf08      	it	eq
 800066c:	68ec      	ldreq	r4, [r5, #12]
 800066e:	e7ca      	b.n	8000606 <__swbuf_r+0x1a>
 8000670:	4621      	mov	r1, r4
 8000672:	4628      	mov	r0, r5
 8000674:	f000 f80c 	bl	8000690 <__swsetup_r>
 8000678:	2800      	cmp	r0, #0
 800067a:	d0cb      	beq.n	8000614 <__swbuf_r+0x28>
 800067c:	f04f 37ff 	mov.w	r7, #4294967295	; 0xffffffff
 8000680:	e7ea      	b.n	8000658 <__swbuf_r+0x6c>
 8000682:	bf00      	nop
 8000684:	08000f5c 	.word	0x08000f5c
 8000688:	08000f7c 	.word	0x08000f7c
 800068c:	08000f3c 	.word	0x08000f3c

08000690 <__swsetup_r>:
 8000690:	4b32      	ldr	r3, [pc, #200]	; (800075c <__swsetup_r+0xcc>)
 8000692:	b570      	push	{r4, r5, r6, lr}
 8000694:	681d      	ldr	r5, [r3, #0]
 8000696:	4606      	mov	r6, r0
 8000698:	460c      	mov	r4, r1
 800069a:	b125      	cbz	r5, 80006a6 <__swsetup_r+0x16>
 800069c:	69ab      	ldr	r3, [r5, #24]
 800069e:	b913      	cbnz	r3, 80006a6 <__swsetup_r+0x16>
 80006a0:	4628      	mov	r0, r5
 80006a2:	f000 f97d 	bl	80009a0 <__sinit>
 80006a6:	4b2e      	ldr	r3, [pc, #184]	; (8000760 <__swsetup_r+0xd0>)
 80006a8:	429c      	cmp	r4, r3
 80006aa:	d10f      	bne.n	80006cc <__swsetup_r+0x3c>
 80006ac:	686c      	ldr	r4, [r5, #4]
 80006ae:	89a3      	ldrh	r3, [r4, #12]
 80006b0:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80006b4:	0719      	lsls	r1, r3, #28
 80006b6:	d42c      	bmi.n	8000712 <__swsetup_r+0x82>
 80006b8:	06dd      	lsls	r5, r3, #27
 80006ba:	d411      	bmi.n	80006e0 <__swsetup_r+0x50>
 80006bc:	2309      	movs	r3, #9
 80006be:	6033      	str	r3, [r6, #0]
 80006c0:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 80006c4:	81a3      	strh	r3, [r4, #12]
 80006c6:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80006ca:	e03e      	b.n	800074a <__swsetup_r+0xba>
 80006cc:	4b25      	ldr	r3, [pc, #148]	; (8000764 <__swsetup_r+0xd4>)
 80006ce:	429c      	cmp	r4, r3
 80006d0:	d101      	bne.n	80006d6 <__swsetup_r+0x46>
 80006d2:	68ac      	ldr	r4, [r5, #8]
 80006d4:	e7eb      	b.n	80006ae <__swsetup_r+0x1e>
 80006d6:	4b24      	ldr	r3, [pc, #144]	; (8000768 <__swsetup_r+0xd8>)
 80006d8:	429c      	cmp	r4, r3
 80006da:	bf08      	it	eq
 80006dc:	68ec      	ldreq	r4, [r5, #12]
 80006de:	e7e6      	b.n	80006ae <__swsetup_r+0x1e>
 80006e0:	0758      	lsls	r0, r3, #29
 80006e2:	d512      	bpl.n	800070a <__swsetup_r+0x7a>
 80006e4:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80006e6:	b141      	cbz	r1, 80006fa <__swsetup_r+0x6a>
 80006e8:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80006ec:	4299      	cmp	r1, r3
 80006ee:	d002      	beq.n	80006f6 <__swsetup_r+0x66>
 80006f0:	4630      	mov	r0, r6
 80006f2:	f000 fa5b 	bl	8000bac <_free_r>
 80006f6:	2300      	movs	r3, #0
 80006f8:	6363      	str	r3, [r4, #52]	; 0x34
 80006fa:	89a3      	ldrh	r3, [r4, #12]
 80006fc:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8000700:	81a3      	strh	r3, [r4, #12]
 8000702:	2300      	movs	r3, #0
 8000704:	6063      	str	r3, [r4, #4]
 8000706:	6923      	ldr	r3, [r4, #16]
 8000708:	6023      	str	r3, [r4, #0]
 800070a:	89a3      	ldrh	r3, [r4, #12]
 800070c:	f043 0308 	orr.w	r3, r3, #8
 8000710:	81a3      	strh	r3, [r4, #12]
 8000712:	6923      	ldr	r3, [r4, #16]
 8000714:	b94b      	cbnz	r3, 800072a <__swsetup_r+0x9a>
 8000716:	89a3      	ldrh	r3, [r4, #12]
 8000718:	f403 7320 	and.w	r3, r3, #640	; 0x280
 800071c:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8000720:	d003      	beq.n	800072a <__swsetup_r+0x9a>
 8000722:	4621      	mov	r1, r4
 8000724:	4630      	mov	r0, r6
 8000726:	f000 fa01 	bl	8000b2c <__smakebuf_r>
 800072a:	89a0      	ldrh	r0, [r4, #12]
 800072c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8000730:	f010 0301 	ands.w	r3, r0, #1
 8000734:	d00a      	beq.n	800074c <__swsetup_r+0xbc>
 8000736:	2300      	movs	r3, #0
 8000738:	60a3      	str	r3, [r4, #8]
 800073a:	6963      	ldr	r3, [r4, #20]
 800073c:	425b      	negs	r3, r3
 800073e:	61a3      	str	r3, [r4, #24]
 8000740:	6923      	ldr	r3, [r4, #16]
 8000742:	b943      	cbnz	r3, 8000756 <__swsetup_r+0xc6>
 8000744:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8000748:	d1ba      	bne.n	80006c0 <__swsetup_r+0x30>
 800074a:	bd70      	pop	{r4, r5, r6, pc}
 800074c:	0781      	lsls	r1, r0, #30
 800074e:	bf58      	it	pl
 8000750:	6963      	ldrpl	r3, [r4, #20]
 8000752:	60a3      	str	r3, [r4, #8]
 8000754:	e7f4      	b.n	8000740 <__swsetup_r+0xb0>
 8000756:	2000      	movs	r0, #0
 8000758:	e7f7      	b.n	800074a <__swsetup_r+0xba>
 800075a:	bf00      	nop
 800075c:	20000000 	.word	0x20000000
 8000760:	08000f5c 	.word	0x08000f5c
 8000764:	08000f7c 	.word	0x08000f7c
 8000768:	08000f3c 	.word	0x08000f3c

0800076c <__sflush_r>:
 800076c:	898a      	ldrh	r2, [r1, #12]
 800076e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000772:	4605      	mov	r5, r0
 8000774:	0710      	lsls	r0, r2, #28
 8000776:	460c      	mov	r4, r1
 8000778:	d458      	bmi.n	800082c <__sflush_r+0xc0>
 800077a:	684b      	ldr	r3, [r1, #4]
 800077c:	2b00      	cmp	r3, #0
 800077e:	dc05      	bgt.n	800078c <__sflush_r+0x20>
 8000780:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8000782:	2b00      	cmp	r3, #0
 8000784:	dc02      	bgt.n	800078c <__sflush_r+0x20>
 8000786:	2000      	movs	r0, #0
 8000788:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800078c:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800078e:	2e00      	cmp	r6, #0
 8000790:	d0f9      	beq.n	8000786 <__sflush_r+0x1a>
 8000792:	2300      	movs	r3, #0
 8000794:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8000798:	682f      	ldr	r7, [r5, #0]
 800079a:	602b      	str	r3, [r5, #0]
 800079c:	d032      	beq.n	8000804 <__sflush_r+0x98>
 800079e:	6d60      	ldr	r0, [r4, #84]	; 0x54
 80007a0:	89a3      	ldrh	r3, [r4, #12]
 80007a2:	075a      	lsls	r2, r3, #29
 80007a4:	d505      	bpl.n	80007b2 <__sflush_r+0x46>
 80007a6:	6863      	ldr	r3, [r4, #4]
 80007a8:	1ac0      	subs	r0, r0, r3
 80007aa:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80007ac:	b10b      	cbz	r3, 80007b2 <__sflush_r+0x46>
 80007ae:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80007b0:	1ac0      	subs	r0, r0, r3
 80007b2:	2300      	movs	r3, #0
 80007b4:	4602      	mov	r2, r0
 80007b6:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80007b8:	6a21      	ldr	r1, [r4, #32]
 80007ba:	4628      	mov	r0, r5
 80007bc:	47b0      	blx	r6
 80007be:	1c43      	adds	r3, r0, #1
 80007c0:	89a3      	ldrh	r3, [r4, #12]
 80007c2:	d106      	bne.n	80007d2 <__sflush_r+0x66>
 80007c4:	6829      	ldr	r1, [r5, #0]
 80007c6:	291d      	cmp	r1, #29
 80007c8:	d82c      	bhi.n	8000824 <__sflush_r+0xb8>
 80007ca:	4a2a      	ldr	r2, [pc, #168]	; (8000874 <__sflush_r+0x108>)
 80007cc:	40ca      	lsrs	r2, r1
 80007ce:	07d6      	lsls	r6, r2, #31
 80007d0:	d528      	bpl.n	8000824 <__sflush_r+0xb8>
 80007d2:	2200      	movs	r2, #0
 80007d4:	6062      	str	r2, [r4, #4]
 80007d6:	04d9      	lsls	r1, r3, #19
 80007d8:	6922      	ldr	r2, [r4, #16]
 80007da:	6022      	str	r2, [r4, #0]
 80007dc:	d504      	bpl.n	80007e8 <__sflush_r+0x7c>
 80007de:	1c42      	adds	r2, r0, #1
 80007e0:	d101      	bne.n	80007e6 <__sflush_r+0x7a>
 80007e2:	682b      	ldr	r3, [r5, #0]
 80007e4:	b903      	cbnz	r3, 80007e8 <__sflush_r+0x7c>
 80007e6:	6560      	str	r0, [r4, #84]	; 0x54
 80007e8:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80007ea:	602f      	str	r7, [r5, #0]
 80007ec:	2900      	cmp	r1, #0
 80007ee:	d0ca      	beq.n	8000786 <__sflush_r+0x1a>
 80007f0:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80007f4:	4299      	cmp	r1, r3
 80007f6:	d002      	beq.n	80007fe <__sflush_r+0x92>
 80007f8:	4628      	mov	r0, r5
 80007fa:	f000 f9d7 	bl	8000bac <_free_r>
 80007fe:	2000      	movs	r0, #0
 8000800:	6360      	str	r0, [r4, #52]	; 0x34
 8000802:	e7c1      	b.n	8000788 <__sflush_r+0x1c>
 8000804:	6a21      	ldr	r1, [r4, #32]
 8000806:	2301      	movs	r3, #1
 8000808:	4628      	mov	r0, r5
 800080a:	47b0      	blx	r6
 800080c:	1c41      	adds	r1, r0, #1
 800080e:	d1c7      	bne.n	80007a0 <__sflush_r+0x34>
 8000810:	682b      	ldr	r3, [r5, #0]
 8000812:	2b00      	cmp	r3, #0
 8000814:	d0c4      	beq.n	80007a0 <__sflush_r+0x34>
 8000816:	2b1d      	cmp	r3, #29
 8000818:	d001      	beq.n	800081e <__sflush_r+0xb2>
 800081a:	2b16      	cmp	r3, #22
 800081c:	d101      	bne.n	8000822 <__sflush_r+0xb6>
 800081e:	602f      	str	r7, [r5, #0]
 8000820:	e7b1      	b.n	8000786 <__sflush_r+0x1a>
 8000822:	89a3      	ldrh	r3, [r4, #12]
 8000824:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000828:	81a3      	strh	r3, [r4, #12]
 800082a:	e7ad      	b.n	8000788 <__sflush_r+0x1c>
 800082c:	690f      	ldr	r7, [r1, #16]
 800082e:	2f00      	cmp	r7, #0
 8000830:	d0a9      	beq.n	8000786 <__sflush_r+0x1a>
 8000832:	0793      	lsls	r3, r2, #30
 8000834:	680e      	ldr	r6, [r1, #0]
 8000836:	bf08      	it	eq
 8000838:	694b      	ldreq	r3, [r1, #20]
 800083a:	600f      	str	r7, [r1, #0]
 800083c:	bf18      	it	ne
 800083e:	2300      	movne	r3, #0
 8000840:	eba6 0807 	sub.w	r8, r6, r7
 8000844:	608b      	str	r3, [r1, #8]
 8000846:	f1b8 0f00 	cmp.w	r8, #0
 800084a:	dd9c      	ble.n	8000786 <__sflush_r+0x1a>
 800084c:	6a21      	ldr	r1, [r4, #32]
 800084e:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8000850:	4643      	mov	r3, r8
 8000852:	463a      	mov	r2, r7
 8000854:	4628      	mov	r0, r5
 8000856:	47b0      	blx	r6
 8000858:	2800      	cmp	r0, #0
 800085a:	dc06      	bgt.n	800086a <__sflush_r+0xfe>
 800085c:	89a3      	ldrh	r3, [r4, #12]
 800085e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000862:	81a3      	strh	r3, [r4, #12]
 8000864:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8000868:	e78e      	b.n	8000788 <__sflush_r+0x1c>
 800086a:	4407      	add	r7, r0
 800086c:	eba8 0800 	sub.w	r8, r8, r0
 8000870:	e7e9      	b.n	8000846 <__sflush_r+0xda>
 8000872:	bf00      	nop
 8000874:	20400001 	.word	0x20400001

08000878 <_fflush_r>:
 8000878:	b538      	push	{r3, r4, r5, lr}
 800087a:	690b      	ldr	r3, [r1, #16]
 800087c:	4605      	mov	r5, r0
 800087e:	460c      	mov	r4, r1
 8000880:	b913      	cbnz	r3, 8000888 <_fflush_r+0x10>
 8000882:	2500      	movs	r5, #0
 8000884:	4628      	mov	r0, r5
 8000886:	bd38      	pop	{r3, r4, r5, pc}
 8000888:	b118      	cbz	r0, 8000892 <_fflush_r+0x1a>
 800088a:	6983      	ldr	r3, [r0, #24]
 800088c:	b90b      	cbnz	r3, 8000892 <_fflush_r+0x1a>
 800088e:	f000 f887 	bl	80009a0 <__sinit>
 8000892:	4b14      	ldr	r3, [pc, #80]	; (80008e4 <_fflush_r+0x6c>)
 8000894:	429c      	cmp	r4, r3
 8000896:	d11b      	bne.n	80008d0 <_fflush_r+0x58>
 8000898:	686c      	ldr	r4, [r5, #4]
 800089a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800089e:	2b00      	cmp	r3, #0
 80008a0:	d0ef      	beq.n	8000882 <_fflush_r+0xa>
 80008a2:	6e62      	ldr	r2, [r4, #100]	; 0x64
 80008a4:	07d0      	lsls	r0, r2, #31
 80008a6:	d404      	bmi.n	80008b2 <_fflush_r+0x3a>
 80008a8:	0599      	lsls	r1, r3, #22
 80008aa:	d402      	bmi.n	80008b2 <_fflush_r+0x3a>
 80008ac:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80008ae:	f000 f915 	bl	8000adc <__retarget_lock_acquire_recursive>
 80008b2:	4628      	mov	r0, r5
 80008b4:	4621      	mov	r1, r4
 80008b6:	f7ff ff59 	bl	800076c <__sflush_r>
 80008ba:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80008bc:	07da      	lsls	r2, r3, #31
 80008be:	4605      	mov	r5, r0
 80008c0:	d4e0      	bmi.n	8000884 <_fflush_r+0xc>
 80008c2:	89a3      	ldrh	r3, [r4, #12]
 80008c4:	059b      	lsls	r3, r3, #22
 80008c6:	d4dd      	bmi.n	8000884 <_fflush_r+0xc>
 80008c8:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80008ca:	f000 f908 	bl	8000ade <__retarget_lock_release_recursive>
 80008ce:	e7d9      	b.n	8000884 <_fflush_r+0xc>
 80008d0:	4b05      	ldr	r3, [pc, #20]	; (80008e8 <_fflush_r+0x70>)
 80008d2:	429c      	cmp	r4, r3
 80008d4:	d101      	bne.n	80008da <_fflush_r+0x62>
 80008d6:	68ac      	ldr	r4, [r5, #8]
 80008d8:	e7df      	b.n	800089a <_fflush_r+0x22>
 80008da:	4b04      	ldr	r3, [pc, #16]	; (80008ec <_fflush_r+0x74>)
 80008dc:	429c      	cmp	r4, r3
 80008de:	bf08      	it	eq
 80008e0:	68ec      	ldreq	r4, [r5, #12]
 80008e2:	e7da      	b.n	800089a <_fflush_r+0x22>
 80008e4:	08000f5c 	.word	0x08000f5c
 80008e8:	08000f7c 	.word	0x08000f7c
 80008ec:	08000f3c 	.word	0x08000f3c

080008f0 <std>:
 80008f0:	2300      	movs	r3, #0
 80008f2:	b510      	push	{r4, lr}
 80008f4:	4604      	mov	r4, r0
 80008f6:	e9c0 3300 	strd	r3, r3, [r0]
 80008fa:	e9c0 3304 	strd	r3, r3, [r0, #16]
 80008fe:	6083      	str	r3, [r0, #8]
 8000900:	8181      	strh	r1, [r0, #12]
 8000902:	6643      	str	r3, [r0, #100]	; 0x64
 8000904:	81c2      	strh	r2, [r0, #14]
 8000906:	6183      	str	r3, [r0, #24]
 8000908:	4619      	mov	r1, r3
 800090a:	2208      	movs	r2, #8
 800090c:	305c      	adds	r0, #92	; 0x5c
 800090e:	f7ff fdef 	bl	80004f0 <memset>
 8000912:	4b05      	ldr	r3, [pc, #20]	; (8000928 <std+0x38>)
 8000914:	6263      	str	r3, [r4, #36]	; 0x24
 8000916:	4b05      	ldr	r3, [pc, #20]	; (800092c <std+0x3c>)
 8000918:	62a3      	str	r3, [r4, #40]	; 0x28
 800091a:	4b05      	ldr	r3, [pc, #20]	; (8000930 <std+0x40>)
 800091c:	62e3      	str	r3, [r4, #44]	; 0x2c
 800091e:	4b05      	ldr	r3, [pc, #20]	; (8000934 <std+0x44>)
 8000920:	6224      	str	r4, [r4, #32]
 8000922:	6323      	str	r3, [r4, #48]	; 0x30
 8000924:	bd10      	pop	{r4, pc}
 8000926:	bf00      	nop
 8000928:	08000d8d 	.word	0x08000d8d
 800092c:	08000daf 	.word	0x08000daf
 8000930:	08000de7 	.word	0x08000de7
 8000934:	08000e0b 	.word	0x08000e0b

08000938 <_cleanup_r>:
 8000938:	4901      	ldr	r1, [pc, #4]	; (8000940 <_cleanup_r+0x8>)
 800093a:	f000 b8af 	b.w	8000a9c <_fwalk_reent>
 800093e:	bf00      	nop
 8000940:	08000879 	.word	0x08000879

08000944 <__sfmoreglue>:
 8000944:	b570      	push	{r4, r5, r6, lr}
 8000946:	2268      	movs	r2, #104	; 0x68
 8000948:	1e4d      	subs	r5, r1, #1
 800094a:	4355      	muls	r5, r2
 800094c:	460e      	mov	r6, r1
 800094e:	f105 0174 	add.w	r1, r5, #116	; 0x74
 8000952:	f000 f997 	bl	8000c84 <_malloc_r>
 8000956:	4604      	mov	r4, r0
 8000958:	b140      	cbz	r0, 800096c <__sfmoreglue+0x28>
 800095a:	2100      	movs	r1, #0
 800095c:	e9c0 1600 	strd	r1, r6, [r0]
 8000960:	300c      	adds	r0, #12
 8000962:	60a0      	str	r0, [r4, #8]
 8000964:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8000968:	f7ff fdc2 	bl	80004f0 <memset>
 800096c:	4620      	mov	r0, r4
 800096e:	bd70      	pop	{r4, r5, r6, pc}

08000970 <__sfp_lock_acquire>:
 8000970:	4801      	ldr	r0, [pc, #4]	; (8000978 <__sfp_lock_acquire+0x8>)
 8000972:	f000 b8b3 	b.w	8000adc <__retarget_lock_acquire_recursive>
 8000976:	bf00      	nop
 8000978:	20000085 	.word	0x20000085

0800097c <__sfp_lock_release>:
 800097c:	4801      	ldr	r0, [pc, #4]	; (8000984 <__sfp_lock_release+0x8>)
 800097e:	f000 b8ae 	b.w	8000ade <__retarget_lock_release_recursive>
 8000982:	bf00      	nop
 8000984:	20000085 	.word	0x20000085

08000988 <__sinit_lock_acquire>:
 8000988:	4801      	ldr	r0, [pc, #4]	; (8000990 <__sinit_lock_acquire+0x8>)
 800098a:	f000 b8a7 	b.w	8000adc <__retarget_lock_acquire_recursive>
 800098e:	bf00      	nop
 8000990:	20000086 	.word	0x20000086

08000994 <__sinit_lock_release>:
 8000994:	4801      	ldr	r0, [pc, #4]	; (800099c <__sinit_lock_release+0x8>)
 8000996:	f000 b8a2 	b.w	8000ade <__retarget_lock_release_recursive>
 800099a:	bf00      	nop
 800099c:	20000086 	.word	0x20000086

080009a0 <__sinit>:
 80009a0:	b510      	push	{r4, lr}
 80009a2:	4604      	mov	r4, r0
 80009a4:	f7ff fff0 	bl	8000988 <__sinit_lock_acquire>
 80009a8:	69a3      	ldr	r3, [r4, #24]
 80009aa:	b11b      	cbz	r3, 80009b4 <__sinit+0x14>
 80009ac:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80009b0:	f7ff bff0 	b.w	8000994 <__sinit_lock_release>
 80009b4:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 80009b8:	6523      	str	r3, [r4, #80]	; 0x50
 80009ba:	4b13      	ldr	r3, [pc, #76]	; (8000a08 <__sinit+0x68>)
 80009bc:	4a13      	ldr	r2, [pc, #76]	; (8000a0c <__sinit+0x6c>)
 80009be:	681b      	ldr	r3, [r3, #0]
 80009c0:	62a2      	str	r2, [r4, #40]	; 0x28
 80009c2:	42a3      	cmp	r3, r4
 80009c4:	bf04      	itt	eq
 80009c6:	2301      	moveq	r3, #1
 80009c8:	61a3      	streq	r3, [r4, #24]
 80009ca:	4620      	mov	r0, r4
 80009cc:	f000 f820 	bl	8000a10 <__sfp>
 80009d0:	6060      	str	r0, [r4, #4]
 80009d2:	4620      	mov	r0, r4
 80009d4:	f000 f81c 	bl	8000a10 <__sfp>
 80009d8:	60a0      	str	r0, [r4, #8]
 80009da:	4620      	mov	r0, r4
 80009dc:	f000 f818 	bl	8000a10 <__sfp>
 80009e0:	2200      	movs	r2, #0
 80009e2:	60e0      	str	r0, [r4, #12]
 80009e4:	2104      	movs	r1, #4
 80009e6:	6860      	ldr	r0, [r4, #4]
 80009e8:	f7ff ff82 	bl	80008f0 <std>
 80009ec:	68a0      	ldr	r0, [r4, #8]
 80009ee:	2201      	movs	r2, #1
 80009f0:	2109      	movs	r1, #9
 80009f2:	f7ff ff7d 	bl	80008f0 <std>
 80009f6:	68e0      	ldr	r0, [r4, #12]
 80009f8:	2202      	movs	r2, #2
 80009fa:	2112      	movs	r1, #18
 80009fc:	f7ff ff78 	bl	80008f0 <std>
 8000a00:	2301      	movs	r3, #1
 8000a02:	61a3      	str	r3, [r4, #24]
 8000a04:	e7d2      	b.n	80009ac <__sinit+0xc>
 8000a06:	bf00      	nop
 8000a08:	08000f38 	.word	0x08000f38
 8000a0c:	08000939 	.word	0x08000939

08000a10 <__sfp>:
 8000a10:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000a12:	4607      	mov	r7, r0
 8000a14:	f7ff ffac 	bl	8000970 <__sfp_lock_acquire>
 8000a18:	4b1e      	ldr	r3, [pc, #120]	; (8000a94 <__sfp+0x84>)
 8000a1a:	681e      	ldr	r6, [r3, #0]
 8000a1c:	69b3      	ldr	r3, [r6, #24]
 8000a1e:	b913      	cbnz	r3, 8000a26 <__sfp+0x16>
 8000a20:	4630      	mov	r0, r6
 8000a22:	f7ff ffbd 	bl	80009a0 <__sinit>
 8000a26:	3648      	adds	r6, #72	; 0x48
 8000a28:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8000a2c:	3b01      	subs	r3, #1
 8000a2e:	d503      	bpl.n	8000a38 <__sfp+0x28>
 8000a30:	6833      	ldr	r3, [r6, #0]
 8000a32:	b30b      	cbz	r3, 8000a78 <__sfp+0x68>
 8000a34:	6836      	ldr	r6, [r6, #0]
 8000a36:	e7f7      	b.n	8000a28 <__sfp+0x18>
 8000a38:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8000a3c:	b9d5      	cbnz	r5, 8000a74 <__sfp+0x64>
 8000a3e:	4b16      	ldr	r3, [pc, #88]	; (8000a98 <__sfp+0x88>)
 8000a40:	60e3      	str	r3, [r4, #12]
 8000a42:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8000a46:	6665      	str	r5, [r4, #100]	; 0x64
 8000a48:	f000 f847 	bl	8000ada <__retarget_lock_init_recursive>
 8000a4c:	f7ff ff96 	bl	800097c <__sfp_lock_release>
 8000a50:	e9c4 5501 	strd	r5, r5, [r4, #4]
 8000a54:	e9c4 5504 	strd	r5, r5, [r4, #16]
 8000a58:	6025      	str	r5, [r4, #0]
 8000a5a:	61a5      	str	r5, [r4, #24]
 8000a5c:	2208      	movs	r2, #8
 8000a5e:	4629      	mov	r1, r5
 8000a60:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8000a64:	f7ff fd44 	bl	80004f0 <memset>
 8000a68:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8000a6c:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8000a70:	4620      	mov	r0, r4
 8000a72:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000a74:	3468      	adds	r4, #104	; 0x68
 8000a76:	e7d9      	b.n	8000a2c <__sfp+0x1c>
 8000a78:	2104      	movs	r1, #4
 8000a7a:	4638      	mov	r0, r7
 8000a7c:	f7ff ff62 	bl	8000944 <__sfmoreglue>
 8000a80:	4604      	mov	r4, r0
 8000a82:	6030      	str	r0, [r6, #0]
 8000a84:	2800      	cmp	r0, #0
 8000a86:	d1d5      	bne.n	8000a34 <__sfp+0x24>
 8000a88:	f7ff ff78 	bl	800097c <__sfp_lock_release>
 8000a8c:	230c      	movs	r3, #12
 8000a8e:	603b      	str	r3, [r7, #0]
 8000a90:	e7ee      	b.n	8000a70 <__sfp+0x60>
 8000a92:	bf00      	nop
 8000a94:	08000f38 	.word	0x08000f38
 8000a98:	ffff0001 	.word	0xffff0001

08000a9c <_fwalk_reent>:
 8000a9c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000aa0:	4606      	mov	r6, r0
 8000aa2:	4688      	mov	r8, r1
 8000aa4:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8000aa8:	2700      	movs	r7, #0
 8000aaa:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8000aae:	f1b9 0901 	subs.w	r9, r9, #1
 8000ab2:	d505      	bpl.n	8000ac0 <_fwalk_reent+0x24>
 8000ab4:	6824      	ldr	r4, [r4, #0]
 8000ab6:	2c00      	cmp	r4, #0
 8000ab8:	d1f7      	bne.n	8000aaa <_fwalk_reent+0xe>
 8000aba:	4638      	mov	r0, r7
 8000abc:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000ac0:	89ab      	ldrh	r3, [r5, #12]
 8000ac2:	2b01      	cmp	r3, #1
 8000ac4:	d907      	bls.n	8000ad6 <_fwalk_reent+0x3a>
 8000ac6:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8000aca:	3301      	adds	r3, #1
 8000acc:	d003      	beq.n	8000ad6 <_fwalk_reent+0x3a>
 8000ace:	4629      	mov	r1, r5
 8000ad0:	4630      	mov	r0, r6
 8000ad2:	47c0      	blx	r8
 8000ad4:	4307      	orrs	r7, r0
 8000ad6:	3568      	adds	r5, #104	; 0x68
 8000ad8:	e7e9      	b.n	8000aae <_fwalk_reent+0x12>

08000ada <__retarget_lock_init_recursive>:
 8000ada:	4770      	bx	lr

08000adc <__retarget_lock_acquire_recursive>:
 8000adc:	4770      	bx	lr

08000ade <__retarget_lock_release_recursive>:
 8000ade:	4770      	bx	lr

08000ae0 <__swhatbuf_r>:
 8000ae0:	b570      	push	{r4, r5, r6, lr}
 8000ae2:	460e      	mov	r6, r1
 8000ae4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000ae8:	2900      	cmp	r1, #0
 8000aea:	b096      	sub	sp, #88	; 0x58
 8000aec:	4614      	mov	r4, r2
 8000aee:	461d      	mov	r5, r3
 8000af0:	da08      	bge.n	8000b04 <__swhatbuf_r+0x24>
 8000af2:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 8000af6:	2200      	movs	r2, #0
 8000af8:	602a      	str	r2, [r5, #0]
 8000afa:	061a      	lsls	r2, r3, #24
 8000afc:	d410      	bmi.n	8000b20 <__swhatbuf_r+0x40>
 8000afe:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8000b02:	e00e      	b.n	8000b22 <__swhatbuf_r+0x42>
 8000b04:	466a      	mov	r2, sp
 8000b06:	f000 f9a7 	bl	8000e58 <_fstat_r>
 8000b0a:	2800      	cmp	r0, #0
 8000b0c:	dbf1      	blt.n	8000af2 <__swhatbuf_r+0x12>
 8000b0e:	9a01      	ldr	r2, [sp, #4]
 8000b10:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8000b14:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8000b18:	425a      	negs	r2, r3
 8000b1a:	415a      	adcs	r2, r3
 8000b1c:	602a      	str	r2, [r5, #0]
 8000b1e:	e7ee      	b.n	8000afe <__swhatbuf_r+0x1e>
 8000b20:	2340      	movs	r3, #64	; 0x40
 8000b22:	2000      	movs	r0, #0
 8000b24:	6023      	str	r3, [r4, #0]
 8000b26:	b016      	add	sp, #88	; 0x58
 8000b28:	bd70      	pop	{r4, r5, r6, pc}
	...

08000b2c <__smakebuf_r>:
 8000b2c:	898b      	ldrh	r3, [r1, #12]
 8000b2e:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8000b30:	079d      	lsls	r5, r3, #30
 8000b32:	4606      	mov	r6, r0
 8000b34:	460c      	mov	r4, r1
 8000b36:	d507      	bpl.n	8000b48 <__smakebuf_r+0x1c>
 8000b38:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8000b3c:	6023      	str	r3, [r4, #0]
 8000b3e:	6123      	str	r3, [r4, #16]
 8000b40:	2301      	movs	r3, #1
 8000b42:	6163      	str	r3, [r4, #20]
 8000b44:	b002      	add	sp, #8
 8000b46:	bd70      	pop	{r4, r5, r6, pc}
 8000b48:	ab01      	add	r3, sp, #4
 8000b4a:	466a      	mov	r2, sp
 8000b4c:	f7ff ffc8 	bl	8000ae0 <__swhatbuf_r>
 8000b50:	9900      	ldr	r1, [sp, #0]
 8000b52:	4605      	mov	r5, r0
 8000b54:	4630      	mov	r0, r6
 8000b56:	f000 f895 	bl	8000c84 <_malloc_r>
 8000b5a:	b948      	cbnz	r0, 8000b70 <__smakebuf_r+0x44>
 8000b5c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000b60:	059a      	lsls	r2, r3, #22
 8000b62:	d4ef      	bmi.n	8000b44 <__smakebuf_r+0x18>
 8000b64:	f023 0303 	bic.w	r3, r3, #3
 8000b68:	f043 0302 	orr.w	r3, r3, #2
 8000b6c:	81a3      	strh	r3, [r4, #12]
 8000b6e:	e7e3      	b.n	8000b38 <__smakebuf_r+0xc>
 8000b70:	4b0d      	ldr	r3, [pc, #52]	; (8000ba8 <__smakebuf_r+0x7c>)
 8000b72:	62b3      	str	r3, [r6, #40]	; 0x28
 8000b74:	89a3      	ldrh	r3, [r4, #12]
 8000b76:	6020      	str	r0, [r4, #0]
 8000b78:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000b7c:	81a3      	strh	r3, [r4, #12]
 8000b7e:	9b00      	ldr	r3, [sp, #0]
 8000b80:	6163      	str	r3, [r4, #20]
 8000b82:	9b01      	ldr	r3, [sp, #4]
 8000b84:	6120      	str	r0, [r4, #16]
 8000b86:	b15b      	cbz	r3, 8000ba0 <__smakebuf_r+0x74>
 8000b88:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000b8c:	4630      	mov	r0, r6
 8000b8e:	f000 f975 	bl	8000e7c <_isatty_r>
 8000b92:	b128      	cbz	r0, 8000ba0 <__smakebuf_r+0x74>
 8000b94:	89a3      	ldrh	r3, [r4, #12]
 8000b96:	f023 0303 	bic.w	r3, r3, #3
 8000b9a:	f043 0301 	orr.w	r3, r3, #1
 8000b9e:	81a3      	strh	r3, [r4, #12]
 8000ba0:	89a0      	ldrh	r0, [r4, #12]
 8000ba2:	4305      	orrs	r5, r0
 8000ba4:	81a5      	strh	r5, [r4, #12]
 8000ba6:	e7cd      	b.n	8000b44 <__smakebuf_r+0x18>
 8000ba8:	08000939 	.word	0x08000939

08000bac <_free_r>:
 8000bac:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8000bae:	2900      	cmp	r1, #0
 8000bb0:	d044      	beq.n	8000c3c <_free_r+0x90>
 8000bb2:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8000bb6:	9001      	str	r0, [sp, #4]
 8000bb8:	2b00      	cmp	r3, #0
 8000bba:	f1a1 0404 	sub.w	r4, r1, #4
 8000bbe:	bfb8      	it	lt
 8000bc0:	18e4      	addlt	r4, r4, r3
 8000bc2:	f000 f97d 	bl	8000ec0 <__malloc_lock>
 8000bc6:	4a1e      	ldr	r2, [pc, #120]	; (8000c40 <_free_r+0x94>)
 8000bc8:	9801      	ldr	r0, [sp, #4]
 8000bca:	6813      	ldr	r3, [r2, #0]
 8000bcc:	b933      	cbnz	r3, 8000bdc <_free_r+0x30>
 8000bce:	6063      	str	r3, [r4, #4]
 8000bd0:	6014      	str	r4, [r2, #0]
 8000bd2:	b003      	add	sp, #12
 8000bd4:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8000bd8:	f000 b978 	b.w	8000ecc <__malloc_unlock>
 8000bdc:	42a3      	cmp	r3, r4
 8000bde:	d908      	bls.n	8000bf2 <_free_r+0x46>
 8000be0:	6825      	ldr	r5, [r4, #0]
 8000be2:	1961      	adds	r1, r4, r5
 8000be4:	428b      	cmp	r3, r1
 8000be6:	bf01      	itttt	eq
 8000be8:	6819      	ldreq	r1, [r3, #0]
 8000bea:	685b      	ldreq	r3, [r3, #4]
 8000bec:	1949      	addeq	r1, r1, r5
 8000bee:	6021      	streq	r1, [r4, #0]
 8000bf0:	e7ed      	b.n	8000bce <_free_r+0x22>
 8000bf2:	461a      	mov	r2, r3
 8000bf4:	685b      	ldr	r3, [r3, #4]
 8000bf6:	b10b      	cbz	r3, 8000bfc <_free_r+0x50>
 8000bf8:	42a3      	cmp	r3, r4
 8000bfa:	d9fa      	bls.n	8000bf2 <_free_r+0x46>
 8000bfc:	6811      	ldr	r1, [r2, #0]
 8000bfe:	1855      	adds	r5, r2, r1
 8000c00:	42a5      	cmp	r5, r4
 8000c02:	d10b      	bne.n	8000c1c <_free_r+0x70>
 8000c04:	6824      	ldr	r4, [r4, #0]
 8000c06:	4421      	add	r1, r4
 8000c08:	1854      	adds	r4, r2, r1
 8000c0a:	42a3      	cmp	r3, r4
 8000c0c:	6011      	str	r1, [r2, #0]
 8000c0e:	d1e0      	bne.n	8000bd2 <_free_r+0x26>
 8000c10:	681c      	ldr	r4, [r3, #0]
 8000c12:	685b      	ldr	r3, [r3, #4]
 8000c14:	6053      	str	r3, [r2, #4]
 8000c16:	4421      	add	r1, r4
 8000c18:	6011      	str	r1, [r2, #0]
 8000c1a:	e7da      	b.n	8000bd2 <_free_r+0x26>
 8000c1c:	d902      	bls.n	8000c24 <_free_r+0x78>
 8000c1e:	230c      	movs	r3, #12
 8000c20:	6003      	str	r3, [r0, #0]
 8000c22:	e7d6      	b.n	8000bd2 <_free_r+0x26>
 8000c24:	6825      	ldr	r5, [r4, #0]
 8000c26:	1961      	adds	r1, r4, r5
 8000c28:	428b      	cmp	r3, r1
 8000c2a:	bf04      	itt	eq
 8000c2c:	6819      	ldreq	r1, [r3, #0]
 8000c2e:	685b      	ldreq	r3, [r3, #4]
 8000c30:	6063      	str	r3, [r4, #4]
 8000c32:	bf04      	itt	eq
 8000c34:	1949      	addeq	r1, r1, r5
 8000c36:	6021      	streq	r1, [r4, #0]
 8000c38:	6054      	str	r4, [r2, #4]
 8000c3a:	e7ca      	b.n	8000bd2 <_free_r+0x26>
 8000c3c:	b003      	add	sp, #12
 8000c3e:	bd30      	pop	{r4, r5, pc}
 8000c40:	20000088 	.word	0x20000088

08000c44 <sbrk_aligned>:
 8000c44:	b570      	push	{r4, r5, r6, lr}
 8000c46:	4e0e      	ldr	r6, [pc, #56]	; (8000c80 <sbrk_aligned+0x3c>)
 8000c48:	460c      	mov	r4, r1
 8000c4a:	6831      	ldr	r1, [r6, #0]
 8000c4c:	4605      	mov	r5, r0
 8000c4e:	b911      	cbnz	r1, 8000c56 <sbrk_aligned+0x12>
 8000c50:	f000 f88c 	bl	8000d6c <_sbrk_r>
 8000c54:	6030      	str	r0, [r6, #0]
 8000c56:	4621      	mov	r1, r4
 8000c58:	4628      	mov	r0, r5
 8000c5a:	f000 f887 	bl	8000d6c <_sbrk_r>
 8000c5e:	1c43      	adds	r3, r0, #1
 8000c60:	d00a      	beq.n	8000c78 <sbrk_aligned+0x34>
 8000c62:	1cc4      	adds	r4, r0, #3
 8000c64:	f024 0403 	bic.w	r4, r4, #3
 8000c68:	42a0      	cmp	r0, r4
 8000c6a:	d007      	beq.n	8000c7c <sbrk_aligned+0x38>
 8000c6c:	1a21      	subs	r1, r4, r0
 8000c6e:	4628      	mov	r0, r5
 8000c70:	f000 f87c 	bl	8000d6c <_sbrk_r>
 8000c74:	3001      	adds	r0, #1
 8000c76:	d101      	bne.n	8000c7c <sbrk_aligned+0x38>
 8000c78:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
 8000c7c:	4620      	mov	r0, r4
 8000c7e:	bd70      	pop	{r4, r5, r6, pc}
 8000c80:	2000008c 	.word	0x2000008c

08000c84 <_malloc_r>:
 8000c84:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000c88:	1ccd      	adds	r5, r1, #3
 8000c8a:	f025 0503 	bic.w	r5, r5, #3
 8000c8e:	3508      	adds	r5, #8
 8000c90:	2d0c      	cmp	r5, #12
 8000c92:	bf38      	it	cc
 8000c94:	250c      	movcc	r5, #12
 8000c96:	2d00      	cmp	r5, #0
 8000c98:	4607      	mov	r7, r0
 8000c9a:	db01      	blt.n	8000ca0 <_malloc_r+0x1c>
 8000c9c:	42a9      	cmp	r1, r5
 8000c9e:	d905      	bls.n	8000cac <_malloc_r+0x28>
 8000ca0:	230c      	movs	r3, #12
 8000ca2:	603b      	str	r3, [r7, #0]
 8000ca4:	2600      	movs	r6, #0
 8000ca6:	4630      	mov	r0, r6
 8000ca8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000cac:	4e2e      	ldr	r6, [pc, #184]	; (8000d68 <_malloc_r+0xe4>)
 8000cae:	f000 f907 	bl	8000ec0 <__malloc_lock>
 8000cb2:	6833      	ldr	r3, [r6, #0]
 8000cb4:	461c      	mov	r4, r3
 8000cb6:	bb34      	cbnz	r4, 8000d06 <_malloc_r+0x82>
 8000cb8:	4629      	mov	r1, r5
 8000cba:	4638      	mov	r0, r7
 8000cbc:	f7ff ffc2 	bl	8000c44 <sbrk_aligned>
 8000cc0:	1c43      	adds	r3, r0, #1
 8000cc2:	4604      	mov	r4, r0
 8000cc4:	d14d      	bne.n	8000d62 <_malloc_r+0xde>
 8000cc6:	6834      	ldr	r4, [r6, #0]
 8000cc8:	4626      	mov	r6, r4
 8000cca:	2e00      	cmp	r6, #0
 8000ccc:	d140      	bne.n	8000d50 <_malloc_r+0xcc>
 8000cce:	6823      	ldr	r3, [r4, #0]
 8000cd0:	4631      	mov	r1, r6
 8000cd2:	4638      	mov	r0, r7
 8000cd4:	eb04 0803 	add.w	r8, r4, r3
 8000cd8:	f000 f848 	bl	8000d6c <_sbrk_r>
 8000cdc:	4580      	cmp	r8, r0
 8000cde:	d13a      	bne.n	8000d56 <_malloc_r+0xd2>
 8000ce0:	6821      	ldr	r1, [r4, #0]
 8000ce2:	3503      	adds	r5, #3
 8000ce4:	1a6d      	subs	r5, r5, r1
 8000ce6:	f025 0503 	bic.w	r5, r5, #3
 8000cea:	3508      	adds	r5, #8
 8000cec:	2d0c      	cmp	r5, #12
 8000cee:	bf38      	it	cc
 8000cf0:	250c      	movcc	r5, #12
 8000cf2:	4629      	mov	r1, r5
 8000cf4:	4638      	mov	r0, r7
 8000cf6:	f7ff ffa5 	bl	8000c44 <sbrk_aligned>
 8000cfa:	3001      	adds	r0, #1
 8000cfc:	d02b      	beq.n	8000d56 <_malloc_r+0xd2>
 8000cfe:	6823      	ldr	r3, [r4, #0]
 8000d00:	442b      	add	r3, r5
 8000d02:	6023      	str	r3, [r4, #0]
 8000d04:	e00e      	b.n	8000d24 <_malloc_r+0xa0>
 8000d06:	6822      	ldr	r2, [r4, #0]
 8000d08:	1b52      	subs	r2, r2, r5
 8000d0a:	d41e      	bmi.n	8000d4a <_malloc_r+0xc6>
 8000d0c:	2a0b      	cmp	r2, #11
 8000d0e:	d916      	bls.n	8000d3e <_malloc_r+0xba>
 8000d10:	1961      	adds	r1, r4, r5
 8000d12:	42a3      	cmp	r3, r4
 8000d14:	6025      	str	r5, [r4, #0]
 8000d16:	bf18      	it	ne
 8000d18:	6059      	strne	r1, [r3, #4]
 8000d1a:	6863      	ldr	r3, [r4, #4]
 8000d1c:	bf08      	it	eq
 8000d1e:	6031      	streq	r1, [r6, #0]
 8000d20:	5162      	str	r2, [r4, r5]
 8000d22:	604b      	str	r3, [r1, #4]
 8000d24:	4638      	mov	r0, r7
 8000d26:	f104 060b 	add.w	r6, r4, #11
 8000d2a:	f000 f8cf 	bl	8000ecc <__malloc_unlock>
 8000d2e:	f026 0607 	bic.w	r6, r6, #7
 8000d32:	1d23      	adds	r3, r4, #4
 8000d34:	1af2      	subs	r2, r6, r3
 8000d36:	d0b6      	beq.n	8000ca6 <_malloc_r+0x22>
 8000d38:	1b9b      	subs	r3, r3, r6
 8000d3a:	50a3      	str	r3, [r4, r2]
 8000d3c:	e7b3      	b.n	8000ca6 <_malloc_r+0x22>
 8000d3e:	6862      	ldr	r2, [r4, #4]
 8000d40:	42a3      	cmp	r3, r4
 8000d42:	bf0c      	ite	eq
 8000d44:	6032      	streq	r2, [r6, #0]
 8000d46:	605a      	strne	r2, [r3, #4]
 8000d48:	e7ec      	b.n	8000d24 <_malloc_r+0xa0>
 8000d4a:	4623      	mov	r3, r4
 8000d4c:	6864      	ldr	r4, [r4, #4]
 8000d4e:	e7b2      	b.n	8000cb6 <_malloc_r+0x32>
 8000d50:	4634      	mov	r4, r6
 8000d52:	6876      	ldr	r6, [r6, #4]
 8000d54:	e7b9      	b.n	8000cca <_malloc_r+0x46>
 8000d56:	230c      	movs	r3, #12
 8000d58:	603b      	str	r3, [r7, #0]
 8000d5a:	4638      	mov	r0, r7
 8000d5c:	f000 f8b6 	bl	8000ecc <__malloc_unlock>
 8000d60:	e7a1      	b.n	8000ca6 <_malloc_r+0x22>
 8000d62:	6025      	str	r5, [r4, #0]
 8000d64:	e7de      	b.n	8000d24 <_malloc_r+0xa0>
 8000d66:	bf00      	nop
 8000d68:	20000088 	.word	0x20000088

08000d6c <_sbrk_r>:
 8000d6c:	b538      	push	{r3, r4, r5, lr}
 8000d6e:	4d06      	ldr	r5, [pc, #24]	; (8000d88 <_sbrk_r+0x1c>)
 8000d70:	2300      	movs	r3, #0
 8000d72:	4604      	mov	r4, r0
 8000d74:	4608      	mov	r0, r1
 8000d76:	602b      	str	r3, [r5, #0]
 8000d78:	f7ff fb30 	bl	80003dc <_sbrk>
 8000d7c:	1c43      	adds	r3, r0, #1
 8000d7e:	d102      	bne.n	8000d86 <_sbrk_r+0x1a>
 8000d80:	682b      	ldr	r3, [r5, #0]
 8000d82:	b103      	cbz	r3, 8000d86 <_sbrk_r+0x1a>
 8000d84:	6023      	str	r3, [r4, #0]
 8000d86:	bd38      	pop	{r3, r4, r5, pc}
 8000d88:	20000090 	.word	0x20000090

08000d8c <__sread>:
 8000d8c:	b510      	push	{r4, lr}
 8000d8e:	460c      	mov	r4, r1
 8000d90:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000d94:	f000 f8a0 	bl	8000ed8 <_read_r>
 8000d98:	2800      	cmp	r0, #0
 8000d9a:	bfab      	itete	ge
 8000d9c:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8000d9e:	89a3      	ldrhlt	r3, [r4, #12]
 8000da0:	181b      	addge	r3, r3, r0
 8000da2:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8000da6:	bfac      	ite	ge
 8000da8:	6563      	strge	r3, [r4, #84]	; 0x54
 8000daa:	81a3      	strhlt	r3, [r4, #12]
 8000dac:	bd10      	pop	{r4, pc}

08000dae <__swrite>:
 8000dae:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000db2:	461f      	mov	r7, r3
 8000db4:	898b      	ldrh	r3, [r1, #12]
 8000db6:	05db      	lsls	r3, r3, #23
 8000db8:	4605      	mov	r5, r0
 8000dba:	460c      	mov	r4, r1
 8000dbc:	4616      	mov	r6, r2
 8000dbe:	d505      	bpl.n	8000dcc <__swrite+0x1e>
 8000dc0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000dc4:	2302      	movs	r3, #2
 8000dc6:	2200      	movs	r2, #0
 8000dc8:	f000 f868 	bl	8000e9c <_lseek_r>
 8000dcc:	89a3      	ldrh	r3, [r4, #12]
 8000dce:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000dd2:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8000dd6:	81a3      	strh	r3, [r4, #12]
 8000dd8:	4632      	mov	r2, r6
 8000dda:	463b      	mov	r3, r7
 8000ddc:	4628      	mov	r0, r5
 8000dde:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8000de2:	f000 b817 	b.w	8000e14 <_write_r>

08000de6 <__sseek>:
 8000de6:	b510      	push	{r4, lr}
 8000de8:	460c      	mov	r4, r1
 8000dea:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000dee:	f000 f855 	bl	8000e9c <_lseek_r>
 8000df2:	1c43      	adds	r3, r0, #1
 8000df4:	89a3      	ldrh	r3, [r4, #12]
 8000df6:	bf15      	itete	ne
 8000df8:	6560      	strne	r0, [r4, #84]	; 0x54
 8000dfa:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8000dfe:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8000e02:	81a3      	strheq	r3, [r4, #12]
 8000e04:	bf18      	it	ne
 8000e06:	81a3      	strhne	r3, [r4, #12]
 8000e08:	bd10      	pop	{r4, pc}

08000e0a <__sclose>:
 8000e0a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000e0e:	f000 b813 	b.w	8000e38 <_close_r>
	...

08000e14 <_write_r>:
 8000e14:	b538      	push	{r3, r4, r5, lr}
 8000e16:	4d07      	ldr	r5, [pc, #28]	; (8000e34 <_write_r+0x20>)
 8000e18:	4604      	mov	r4, r0
 8000e1a:	4608      	mov	r0, r1
 8000e1c:	4611      	mov	r1, r2
 8000e1e:	2200      	movs	r2, #0
 8000e20:	602a      	str	r2, [r5, #0]
 8000e22:	461a      	mov	r2, r3
 8000e24:	f7ff fa89 	bl	800033a <_write>
 8000e28:	1c43      	adds	r3, r0, #1
 8000e2a:	d102      	bne.n	8000e32 <_write_r+0x1e>
 8000e2c:	682b      	ldr	r3, [r5, #0]
 8000e2e:	b103      	cbz	r3, 8000e32 <_write_r+0x1e>
 8000e30:	6023      	str	r3, [r4, #0]
 8000e32:	bd38      	pop	{r3, r4, r5, pc}
 8000e34:	20000090 	.word	0x20000090

08000e38 <_close_r>:
 8000e38:	b538      	push	{r3, r4, r5, lr}
 8000e3a:	4d06      	ldr	r5, [pc, #24]	; (8000e54 <_close_r+0x1c>)
 8000e3c:	2300      	movs	r3, #0
 8000e3e:	4604      	mov	r4, r0
 8000e40:	4608      	mov	r0, r1
 8000e42:	602b      	str	r3, [r5, #0]
 8000e44:	f7ff fa95 	bl	8000372 <_close>
 8000e48:	1c43      	adds	r3, r0, #1
 8000e4a:	d102      	bne.n	8000e52 <_close_r+0x1a>
 8000e4c:	682b      	ldr	r3, [r5, #0]
 8000e4e:	b103      	cbz	r3, 8000e52 <_close_r+0x1a>
 8000e50:	6023      	str	r3, [r4, #0]
 8000e52:	bd38      	pop	{r3, r4, r5, pc}
 8000e54:	20000090 	.word	0x20000090

08000e58 <_fstat_r>:
 8000e58:	b538      	push	{r3, r4, r5, lr}
 8000e5a:	4d07      	ldr	r5, [pc, #28]	; (8000e78 <_fstat_r+0x20>)
 8000e5c:	2300      	movs	r3, #0
 8000e5e:	4604      	mov	r4, r0
 8000e60:	4608      	mov	r0, r1
 8000e62:	4611      	mov	r1, r2
 8000e64:	602b      	str	r3, [r5, #0]
 8000e66:	f7ff fa90 	bl	800038a <_fstat>
 8000e6a:	1c43      	adds	r3, r0, #1
 8000e6c:	d102      	bne.n	8000e74 <_fstat_r+0x1c>
 8000e6e:	682b      	ldr	r3, [r5, #0]
 8000e70:	b103      	cbz	r3, 8000e74 <_fstat_r+0x1c>
 8000e72:	6023      	str	r3, [r4, #0]
 8000e74:	bd38      	pop	{r3, r4, r5, pc}
 8000e76:	bf00      	nop
 8000e78:	20000090 	.word	0x20000090

08000e7c <_isatty_r>:
 8000e7c:	b538      	push	{r3, r4, r5, lr}
 8000e7e:	4d06      	ldr	r5, [pc, #24]	; (8000e98 <_isatty_r+0x1c>)
 8000e80:	2300      	movs	r3, #0
 8000e82:	4604      	mov	r4, r0
 8000e84:	4608      	mov	r0, r1
 8000e86:	602b      	str	r3, [r5, #0]
 8000e88:	f7ff fa8f 	bl	80003aa <_isatty>
 8000e8c:	1c43      	adds	r3, r0, #1
 8000e8e:	d102      	bne.n	8000e96 <_isatty_r+0x1a>
 8000e90:	682b      	ldr	r3, [r5, #0]
 8000e92:	b103      	cbz	r3, 8000e96 <_isatty_r+0x1a>
 8000e94:	6023      	str	r3, [r4, #0]
 8000e96:	bd38      	pop	{r3, r4, r5, pc}
 8000e98:	20000090 	.word	0x20000090

08000e9c <_lseek_r>:
 8000e9c:	b538      	push	{r3, r4, r5, lr}
 8000e9e:	4d07      	ldr	r5, [pc, #28]	; (8000ebc <_lseek_r+0x20>)
 8000ea0:	4604      	mov	r4, r0
 8000ea2:	4608      	mov	r0, r1
 8000ea4:	4611      	mov	r1, r2
 8000ea6:	2200      	movs	r2, #0
 8000ea8:	602a      	str	r2, [r5, #0]
 8000eaa:	461a      	mov	r2, r3
 8000eac:	f7ff fa88 	bl	80003c0 <_lseek>
 8000eb0:	1c43      	adds	r3, r0, #1
 8000eb2:	d102      	bne.n	8000eba <_lseek_r+0x1e>
 8000eb4:	682b      	ldr	r3, [r5, #0]
 8000eb6:	b103      	cbz	r3, 8000eba <_lseek_r+0x1e>
 8000eb8:	6023      	str	r3, [r4, #0]
 8000eba:	bd38      	pop	{r3, r4, r5, pc}
 8000ebc:	20000090 	.word	0x20000090

08000ec0 <__malloc_lock>:
 8000ec0:	4801      	ldr	r0, [pc, #4]	; (8000ec8 <__malloc_lock+0x8>)
 8000ec2:	f7ff be0b 	b.w	8000adc <__retarget_lock_acquire_recursive>
 8000ec6:	bf00      	nop
 8000ec8:	20000084 	.word	0x20000084

08000ecc <__malloc_unlock>:
 8000ecc:	4801      	ldr	r0, [pc, #4]	; (8000ed4 <__malloc_unlock+0x8>)
 8000ece:	f7ff be06 	b.w	8000ade <__retarget_lock_release_recursive>
 8000ed2:	bf00      	nop
 8000ed4:	20000084 	.word	0x20000084

08000ed8 <_read_r>:
 8000ed8:	b538      	push	{r3, r4, r5, lr}
 8000eda:	4d07      	ldr	r5, [pc, #28]	; (8000ef8 <_read_r+0x20>)
 8000edc:	4604      	mov	r4, r0
 8000ede:	4608      	mov	r0, r1
 8000ee0:	4611      	mov	r1, r2
 8000ee2:	2200      	movs	r2, #0
 8000ee4:	602a      	str	r2, [r5, #0]
 8000ee6:	461a      	mov	r2, r3
 8000ee8:	f7ff fa0a 	bl	8000300 <_read>
 8000eec:	1c43      	adds	r3, r0, #1
 8000eee:	d102      	bne.n	8000ef6 <_read_r+0x1e>
 8000ef0:	682b      	ldr	r3, [r5, #0]
 8000ef2:	b103      	cbz	r3, 8000ef6 <_read_r+0x1e>
 8000ef4:	6023      	str	r3, [r4, #0]
 8000ef6:	bd38      	pop	{r3, r4, r5, pc}
 8000ef8:	20000090 	.word	0x20000090

08000efc <_init>:
 8000efc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000efe:	bf00      	nop
 8000f00:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000f02:	bc08      	pop	{r3}
 8000f04:	469e      	mov	lr, r3
 8000f06:	4770      	bx	lr

08000f08 <_fini>:
 8000f08:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000f0a:	bf00      	nop
 8000f0c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000f0e:	bc08      	pop	{r3}
 8000f10:	469e      	mov	lr, r3
 8000f12:	4770      	bx	lr
