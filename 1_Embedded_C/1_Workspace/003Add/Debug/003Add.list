
003Add.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000198  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000128c  080001a0  080001a0  000101a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000000a8  0800142c  0800142c  0001142c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080014d4  080014d4  00020064  2**0
                  CONTENTS
  4 .ARM          00000000  080014d4  080014d4  00020064  2**0
                  CONTENTS
  5 .preinit_array 00000000  080014d4  080014d4  00020064  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080014d4  080014d4  000114d4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080014d8  080014d8  000114d8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000064  20000000  080014dc  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000030  20000064  08001540  00020064  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  20000094  08001540  00020094  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00020064  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000986  00000000  00000000  00020094  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000309  00000000  00000000  00020a1a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000118  00000000  00000000  00020d28  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 000000e0  00000000  00000000  00020e40  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00002bf2  00000000  00000000  00020f20  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00001291  00000000  00000000  00023b12  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00009394  00000000  00000000  00024da3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  0002e137  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000b60  00000000  00000000  0002e188  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a0 <__do_global_dtors_aux>:
 80001a0:	b510      	push	{r4, lr}
 80001a2:	4c05      	ldr	r4, [pc, #20]	; (80001b8 <__do_global_dtors_aux+0x18>)
 80001a4:	7823      	ldrb	r3, [r4, #0]
 80001a6:	b933      	cbnz	r3, 80001b6 <__do_global_dtors_aux+0x16>
 80001a8:	4b04      	ldr	r3, [pc, #16]	; (80001bc <__do_global_dtors_aux+0x1c>)
 80001aa:	b113      	cbz	r3, 80001b2 <__do_global_dtors_aux+0x12>
 80001ac:	4804      	ldr	r0, [pc, #16]	; (80001c0 <__do_global_dtors_aux+0x20>)
 80001ae:	f3af 8000 	nop.w
 80001b2:	2301      	movs	r3, #1
 80001b4:	7023      	strb	r3, [r4, #0]
 80001b6:	bd10      	pop	{r4, pc}
 80001b8:	20000064 	.word	0x20000064
 80001bc:	00000000 	.word	0x00000000
 80001c0:	08001414 	.word	0x08001414

080001c4 <frame_dummy>:
 80001c4:	b508      	push	{r3, lr}
 80001c6:	4b03      	ldr	r3, [pc, #12]	; (80001d4 <frame_dummy+0x10>)
 80001c8:	b11b      	cbz	r3, 80001d2 <frame_dummy+0xe>
 80001ca:	4903      	ldr	r1, [pc, #12]	; (80001d8 <frame_dummy+0x14>)
 80001cc:	4803      	ldr	r0, [pc, #12]	; (80001dc <frame_dummy+0x18>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	bd08      	pop	{r3, pc}
 80001d4:	00000000 	.word	0x00000000
 80001d8:	20000068 	.word	0x20000068
 80001dc:	08001414 	.word	0x08001414

080001e0 <memchr>:
 80001e0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001e4:	2a10      	cmp	r2, #16
 80001e6:	db2b      	blt.n	8000240 <memchr+0x60>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	d008      	beq.n	8000200 <memchr+0x20>
 80001ee:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001f2:	3a01      	subs	r2, #1
 80001f4:	428b      	cmp	r3, r1
 80001f6:	d02d      	beq.n	8000254 <memchr+0x74>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	b342      	cbz	r2, 8000250 <memchr+0x70>
 80001fe:	d1f6      	bne.n	80001ee <memchr+0xe>
 8000200:	b4f0      	push	{r4, r5, r6, r7}
 8000202:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000206:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800020a:	f022 0407 	bic.w	r4, r2, #7
 800020e:	f07f 0700 	mvns.w	r7, #0
 8000212:	2300      	movs	r3, #0
 8000214:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000218:	3c08      	subs	r4, #8
 800021a:	ea85 0501 	eor.w	r5, r5, r1
 800021e:	ea86 0601 	eor.w	r6, r6, r1
 8000222:	fa85 f547 	uadd8	r5, r5, r7
 8000226:	faa3 f587 	sel	r5, r3, r7
 800022a:	fa86 f647 	uadd8	r6, r6, r7
 800022e:	faa5 f687 	sel	r6, r5, r7
 8000232:	b98e      	cbnz	r6, 8000258 <memchr+0x78>
 8000234:	d1ee      	bne.n	8000214 <memchr+0x34>
 8000236:	bcf0      	pop	{r4, r5, r6, r7}
 8000238:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800023c:	f002 0207 	and.w	r2, r2, #7
 8000240:	b132      	cbz	r2, 8000250 <memchr+0x70>
 8000242:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000246:	3a01      	subs	r2, #1
 8000248:	ea83 0301 	eor.w	r3, r3, r1
 800024c:	b113      	cbz	r3, 8000254 <memchr+0x74>
 800024e:	d1f8      	bne.n	8000242 <memchr+0x62>
 8000250:	2000      	movs	r0, #0
 8000252:	4770      	bx	lr
 8000254:	3801      	subs	r0, #1
 8000256:	4770      	bx	lr
 8000258:	2d00      	cmp	r5, #0
 800025a:	bf06      	itte	eq
 800025c:	4635      	moveq	r5, r6
 800025e:	3803      	subeq	r0, #3
 8000260:	3807      	subne	r0, #7
 8000262:	f015 0f01 	tst.w	r5, #1
 8000266:	d107      	bne.n	8000278 <memchr+0x98>
 8000268:	3001      	adds	r0, #1
 800026a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800026e:	bf02      	ittt	eq
 8000270:	3001      	addeq	r0, #1
 8000272:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000276:	3001      	addeq	r0, #1
 8000278:	bcf0      	pop	{r4, r5, r6, r7}
 800027a:	3801      	subs	r0, #1
 800027c:	4770      	bx	lr
 800027e:	bf00      	nop

08000280 <main>:
#if !defined(__SOFT_FP__) && defined(__ARM_FP)
  #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif

int main(void)
{
 8000280:	b580      	push	{r7, lr}
 8000282:	b084      	sub	sp, #16
 8000284:	af00      	add	r7, sp, #0
    /* Loop forever */
	unsigned int num1 = 200;
 8000286:	23c8      	movs	r3, #200	; 0xc8
 8000288:	60fb      	str	r3, [r7, #12]
	unsigned int num2 = 80;
 800028a:	2350      	movs	r3, #80	; 0x50
 800028c:	60bb      	str	r3, [r7, #8]
	unsigned int result = 0;
 800028e:	2300      	movs	r3, #0
 8000290:	607b      	str	r3, [r7, #4]

	result = num1 + num2;
 8000292:	68fa      	ldr	r2, [r7, #12]
 8000294:	68bb      	ldr	r3, [r7, #8]
 8000296:	4413      	add	r3, r2
 8000298:	607b      	str	r3, [r7, #4]

	printf("Result = %u\n", result);
 800029a:	6879      	ldr	r1, [r7, #4]
 800029c:	4801      	ldr	r0, [pc, #4]	; (80002a4 <main+0x24>)
 800029e:	f000 f92b 	bl	80004f8 <iprintf>

	for(;;);
 80002a2:	e7fe      	b.n	80002a2 <main+0x22>
 80002a4:	0800142c 	.word	0x0800142c

080002a8 <ITM_SendChar>:
/* ITM register addresses */
#define ITM_STIMULUS_PORT0   	*((volatile uint32_t*) 0xE0000000 )
#define ITM_TRACE_EN          	*((volatile uint32_t*) 0xE0000E00 )

void ITM_SendChar(uint8_t ch)
{
 80002a8:	b480      	push	{r7}
 80002aa:	b083      	sub	sp, #12
 80002ac:	af00      	add	r7, sp, #0
 80002ae:	4603      	mov	r3, r0
 80002b0:	71fb      	strb	r3, [r7, #7]

	//Enable TRCENA
	DEMCR |= ( 1 << 24);
 80002b2:	4b0f      	ldr	r3, [pc, #60]	; (80002f0 <ITM_SendChar+0x48>)
 80002b4:	681b      	ldr	r3, [r3, #0]
 80002b6:	4a0e      	ldr	r2, [pc, #56]	; (80002f0 <ITM_SendChar+0x48>)
 80002b8:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 80002bc:	6013      	str	r3, [r2, #0]

	//enable stimulus port 0
	ITM_TRACE_EN |= ( 1 << 0);
 80002be:	4b0d      	ldr	r3, [pc, #52]	; (80002f4 <ITM_SendChar+0x4c>)
 80002c0:	681b      	ldr	r3, [r3, #0]
 80002c2:	4a0c      	ldr	r2, [pc, #48]	; (80002f4 <ITM_SendChar+0x4c>)
 80002c4:	f043 0301 	orr.w	r3, r3, #1
 80002c8:	6013      	str	r3, [r2, #0]

	// read FIFO status in bit [0]:
	while(!(ITM_STIMULUS_PORT0 & 1));
 80002ca:	bf00      	nop
 80002cc:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 80002d0:	681b      	ldr	r3, [r3, #0]
 80002d2:	f003 0301 	and.w	r3, r3, #1
 80002d6:	2b00      	cmp	r3, #0
 80002d8:	d0f8      	beq.n	80002cc <ITM_SendChar+0x24>

	//Write to ITM stimulus port0
	ITM_STIMULUS_PORT0 = ch;
 80002da:	f04f 4260 	mov.w	r2, #3758096384	; 0xe0000000
 80002de:	79fb      	ldrb	r3, [r7, #7]
 80002e0:	6013      	str	r3, [r2, #0]
}
 80002e2:	bf00      	nop
 80002e4:	370c      	adds	r7, #12
 80002e6:	46bd      	mov	sp, r7
 80002e8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002ec:	4770      	bx	lr
 80002ee:	bf00      	nop
 80002f0:	e000edfc 	.word	0xe000edfc
 80002f4:	e0000e00 	.word	0xe0000e00

080002f8 <_read>:
  _kill(status, -1);
  while (1) {}    /* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80002f8:	b580      	push	{r7, lr}
 80002fa:	b086      	sub	sp, #24
 80002fc:	af00      	add	r7, sp, #0
 80002fe:	60f8      	str	r0, [r7, #12]
 8000300:	60b9      	str	r1, [r7, #8]
 8000302:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000304:	2300      	movs	r3, #0
 8000306:	617b      	str	r3, [r7, #20]
 8000308:	e00a      	b.n	8000320 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 800030a:	f3af 8000 	nop.w
 800030e:	4601      	mov	r1, r0
 8000310:	68bb      	ldr	r3, [r7, #8]
 8000312:	1c5a      	adds	r2, r3, #1
 8000314:	60ba      	str	r2, [r7, #8]
 8000316:	b2ca      	uxtb	r2, r1
 8000318:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800031a:	697b      	ldr	r3, [r7, #20]
 800031c:	3301      	adds	r3, #1
 800031e:	617b      	str	r3, [r7, #20]
 8000320:	697a      	ldr	r2, [r7, #20]
 8000322:	687b      	ldr	r3, [r7, #4]
 8000324:	429a      	cmp	r2, r3
 8000326:	dbf0      	blt.n	800030a <_read+0x12>
  }

  return len;
 8000328:	687b      	ldr	r3, [r7, #4]
}
 800032a:	4618      	mov	r0, r3
 800032c:	3718      	adds	r7, #24
 800032e:	46bd      	mov	sp, r7
 8000330:	bd80      	pop	{r7, pc}

08000332 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8000332:	b580      	push	{r7, lr}
 8000334:	b086      	sub	sp, #24
 8000336:	af00      	add	r7, sp, #0
 8000338:	60f8      	str	r0, [r7, #12]
 800033a:	60b9      	str	r1, [r7, #8]
 800033c:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800033e:	2300      	movs	r3, #0
 8000340:	617b      	str	r3, [r7, #20]
 8000342:	e009      	b.n	8000358 <_write+0x26>
  {
    //__io_putchar(*ptr++);
	ITM_SendChar(*ptr++);
 8000344:	68bb      	ldr	r3, [r7, #8]
 8000346:	1c5a      	adds	r2, r3, #1
 8000348:	60ba      	str	r2, [r7, #8]
 800034a:	781b      	ldrb	r3, [r3, #0]
 800034c:	4618      	mov	r0, r3
 800034e:	f7ff ffab 	bl	80002a8 <ITM_SendChar>
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000352:	697b      	ldr	r3, [r7, #20]
 8000354:	3301      	adds	r3, #1
 8000356:	617b      	str	r3, [r7, #20]
 8000358:	697a      	ldr	r2, [r7, #20]
 800035a:	687b      	ldr	r3, [r7, #4]
 800035c:	429a      	cmp	r2, r3
 800035e:	dbf1      	blt.n	8000344 <_write+0x12>
  }
  return len;
 8000360:	687b      	ldr	r3, [r7, #4]
}
 8000362:	4618      	mov	r0, r3
 8000364:	3718      	adds	r7, #24
 8000366:	46bd      	mov	sp, r7
 8000368:	bd80      	pop	{r7, pc}

0800036a <_close>:

int _close(int file)
{
 800036a:	b480      	push	{r7}
 800036c:	b083      	sub	sp, #12
 800036e:	af00      	add	r7, sp, #0
 8000370:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 8000372:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
}
 8000376:	4618      	mov	r0, r3
 8000378:	370c      	adds	r7, #12
 800037a:	46bd      	mov	sp, r7
 800037c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000380:	4770      	bx	lr

08000382 <_fstat>:


int _fstat(int file, struct stat *st)
{
 8000382:	b480      	push	{r7}
 8000384:	b083      	sub	sp, #12
 8000386:	af00      	add	r7, sp, #0
 8000388:	6078      	str	r0, [r7, #4]
 800038a:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 800038c:	683b      	ldr	r3, [r7, #0]
 800038e:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8000392:	605a      	str	r2, [r3, #4]
  return 0;
 8000394:	2300      	movs	r3, #0
}
 8000396:	4618      	mov	r0, r3
 8000398:	370c      	adds	r7, #12
 800039a:	46bd      	mov	sp, r7
 800039c:	f85d 7b04 	ldr.w	r7, [sp], #4
 80003a0:	4770      	bx	lr

080003a2 <_isatty>:

int _isatty(int file)
{
 80003a2:	b480      	push	{r7}
 80003a4:	b083      	sub	sp, #12
 80003a6:	af00      	add	r7, sp, #0
 80003a8:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 80003aa:	2301      	movs	r3, #1
}
 80003ac:	4618      	mov	r0, r3
 80003ae:	370c      	adds	r7, #12
 80003b0:	46bd      	mov	sp, r7
 80003b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80003b6:	4770      	bx	lr

080003b8 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 80003b8:	b480      	push	{r7}
 80003ba:	b085      	sub	sp, #20
 80003bc:	af00      	add	r7, sp, #0
 80003be:	60f8      	str	r0, [r7, #12]
 80003c0:	60b9      	str	r1, [r7, #8]
 80003c2:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 80003c4:	2300      	movs	r3, #0
}
 80003c6:	4618      	mov	r0, r3
 80003c8:	3714      	adds	r7, #20
 80003ca:	46bd      	mov	sp, r7
 80003cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80003d0:	4770      	bx	lr
	...

080003d4 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80003d4:	b580      	push	{r7, lr}
 80003d6:	b086      	sub	sp, #24
 80003d8:	af00      	add	r7, sp, #0
 80003da:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80003dc:	4a14      	ldr	r2, [pc, #80]	; (8000430 <_sbrk+0x5c>)
 80003de:	4b15      	ldr	r3, [pc, #84]	; (8000434 <_sbrk+0x60>)
 80003e0:	1ad3      	subs	r3, r2, r3
 80003e2:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80003e4:	697b      	ldr	r3, [r7, #20]
 80003e6:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80003e8:	4b13      	ldr	r3, [pc, #76]	; (8000438 <_sbrk+0x64>)
 80003ea:	681b      	ldr	r3, [r3, #0]
 80003ec:	2b00      	cmp	r3, #0
 80003ee:	d102      	bne.n	80003f6 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 80003f0:	4b11      	ldr	r3, [pc, #68]	; (8000438 <_sbrk+0x64>)
 80003f2:	4a12      	ldr	r2, [pc, #72]	; (800043c <_sbrk+0x68>)
 80003f4:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80003f6:	4b10      	ldr	r3, [pc, #64]	; (8000438 <_sbrk+0x64>)
 80003f8:	681a      	ldr	r2, [r3, #0]
 80003fa:	687b      	ldr	r3, [r7, #4]
 80003fc:	4413      	add	r3, r2
 80003fe:	693a      	ldr	r2, [r7, #16]
 8000400:	429a      	cmp	r2, r3
 8000402:	d207      	bcs.n	8000414 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8000404:	f000 f846 	bl	8000494 <__errno>
 8000408:	4603      	mov	r3, r0
 800040a:	220c      	movs	r2, #12
 800040c:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 800040e:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8000412:	e009      	b.n	8000428 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8000414:	4b08      	ldr	r3, [pc, #32]	; (8000438 <_sbrk+0x64>)
 8000416:	681b      	ldr	r3, [r3, #0]
 8000418:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 800041a:	4b07      	ldr	r3, [pc, #28]	; (8000438 <_sbrk+0x64>)
 800041c:	681a      	ldr	r2, [r3, #0]
 800041e:	687b      	ldr	r3, [r7, #4]
 8000420:	4413      	add	r3, r2
 8000422:	4a05      	ldr	r2, [pc, #20]	; (8000438 <_sbrk+0x64>)
 8000424:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8000426:	68fb      	ldr	r3, [r7, #12]
}
 8000428:	4618      	mov	r0, r3
 800042a:	3718      	adds	r7, #24
 800042c:	46bd      	mov	sp, r7
 800042e:	bd80      	pop	{r7, pc}
 8000430:	20020000 	.word	0x20020000
 8000434:	00000400 	.word	0x00000400
 8000438:	20000080 	.word	0x20000080
 800043c:	20000098 	.word	0x20000098

08000440 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000440:	480d      	ldr	r0, [pc, #52]	; (8000478 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000442:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000444:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000448:	480c      	ldr	r0, [pc, #48]	; (800047c <LoopForever+0x6>)
  ldr r1, =_edata
 800044a:	490d      	ldr	r1, [pc, #52]	; (8000480 <LoopForever+0xa>)
  ldr r2, =_sidata
 800044c:	4a0d      	ldr	r2, [pc, #52]	; (8000484 <LoopForever+0xe>)
  movs r3, #0
 800044e:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000450:	e002      	b.n	8000458 <LoopCopyDataInit>

08000452 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000452:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000454:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000456:	3304      	adds	r3, #4

08000458 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000458:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800045a:	428c      	cmp	r4, r1
  bcc CopyDataInit
 800045c:	d3f9      	bcc.n	8000452 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800045e:	4a0a      	ldr	r2, [pc, #40]	; (8000488 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000460:	4c0a      	ldr	r4, [pc, #40]	; (800048c <LoopForever+0x16>)
  movs r3, #0
 8000462:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000464:	e001      	b.n	800046a <LoopFillZerobss>

08000466 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000466:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000468:	3204      	adds	r2, #4

0800046a <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800046a:	42a2      	cmp	r2, r4
  bcc FillZerobss
 800046c:	d3fb      	bcc.n	8000466 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800046e:	f000 f817 	bl	80004a0 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000472:	f7ff ff05 	bl	8000280 <main>

08000476 <LoopForever>:

LoopForever:
  b LoopForever
 8000476:	e7fe      	b.n	8000476 <LoopForever>
  ldr   r0, =_estack
 8000478:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 800047c:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000480:	20000064 	.word	0x20000064
  ldr r2, =_sidata
 8000484:	080014dc 	.word	0x080014dc
  ldr r2, =_sbss
 8000488:	20000064 	.word	0x20000064
  ldr r4, =_ebss
 800048c:	20000094 	.word	0x20000094

08000490 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000490:	e7fe      	b.n	8000490 <ADC_IRQHandler>
	...

08000494 <__errno>:
 8000494:	4b01      	ldr	r3, [pc, #4]	; (800049c <__errno+0x8>)
 8000496:	6818      	ldr	r0, [r3, #0]
 8000498:	4770      	bx	lr
 800049a:	bf00      	nop
 800049c:	20000000 	.word	0x20000000

080004a0 <__libc_init_array>:
 80004a0:	b570      	push	{r4, r5, r6, lr}
 80004a2:	4d0d      	ldr	r5, [pc, #52]	; (80004d8 <__libc_init_array+0x38>)
 80004a4:	4c0d      	ldr	r4, [pc, #52]	; (80004dc <__libc_init_array+0x3c>)
 80004a6:	1b64      	subs	r4, r4, r5
 80004a8:	10a4      	asrs	r4, r4, #2
 80004aa:	2600      	movs	r6, #0
 80004ac:	42a6      	cmp	r6, r4
 80004ae:	d109      	bne.n	80004c4 <__libc_init_array+0x24>
 80004b0:	4d0b      	ldr	r5, [pc, #44]	; (80004e0 <__libc_init_array+0x40>)
 80004b2:	4c0c      	ldr	r4, [pc, #48]	; (80004e4 <__libc_init_array+0x44>)
 80004b4:	f000 ffae 	bl	8001414 <_init>
 80004b8:	1b64      	subs	r4, r4, r5
 80004ba:	10a4      	asrs	r4, r4, #2
 80004bc:	2600      	movs	r6, #0
 80004be:	42a6      	cmp	r6, r4
 80004c0:	d105      	bne.n	80004ce <__libc_init_array+0x2e>
 80004c2:	bd70      	pop	{r4, r5, r6, pc}
 80004c4:	f855 3b04 	ldr.w	r3, [r5], #4
 80004c8:	4798      	blx	r3
 80004ca:	3601      	adds	r6, #1
 80004cc:	e7ee      	b.n	80004ac <__libc_init_array+0xc>
 80004ce:	f855 3b04 	ldr.w	r3, [r5], #4
 80004d2:	4798      	blx	r3
 80004d4:	3601      	adds	r6, #1
 80004d6:	e7f2      	b.n	80004be <__libc_init_array+0x1e>
 80004d8:	080014d4 	.word	0x080014d4
 80004dc:	080014d4 	.word	0x080014d4
 80004e0:	080014d4 	.word	0x080014d4
 80004e4:	080014d8 	.word	0x080014d8

080004e8 <memset>:
 80004e8:	4402      	add	r2, r0
 80004ea:	4603      	mov	r3, r0
 80004ec:	4293      	cmp	r3, r2
 80004ee:	d100      	bne.n	80004f2 <memset+0xa>
 80004f0:	4770      	bx	lr
 80004f2:	f803 1b01 	strb.w	r1, [r3], #1
 80004f6:	e7f9      	b.n	80004ec <memset+0x4>

080004f8 <iprintf>:
 80004f8:	b40f      	push	{r0, r1, r2, r3}
 80004fa:	4b0a      	ldr	r3, [pc, #40]	; (8000524 <iprintf+0x2c>)
 80004fc:	b513      	push	{r0, r1, r4, lr}
 80004fe:	681c      	ldr	r4, [r3, #0]
 8000500:	b124      	cbz	r4, 800050c <iprintf+0x14>
 8000502:	69a3      	ldr	r3, [r4, #24]
 8000504:	b913      	cbnz	r3, 800050c <iprintf+0x14>
 8000506:	4620      	mov	r0, r4
 8000508:	f000 f866 	bl	80005d8 <__sinit>
 800050c:	ab05      	add	r3, sp, #20
 800050e:	9a04      	ldr	r2, [sp, #16]
 8000510:	68a1      	ldr	r1, [r4, #8]
 8000512:	9301      	str	r3, [sp, #4]
 8000514:	4620      	mov	r0, r4
 8000516:	f000 f9bd 	bl	8000894 <_vfiprintf_r>
 800051a:	b002      	add	sp, #8
 800051c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000520:	b004      	add	sp, #16
 8000522:	4770      	bx	lr
 8000524:	20000000 	.word	0x20000000

08000528 <std>:
 8000528:	2300      	movs	r3, #0
 800052a:	b510      	push	{r4, lr}
 800052c:	4604      	mov	r4, r0
 800052e:	e9c0 3300 	strd	r3, r3, [r0]
 8000532:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8000536:	6083      	str	r3, [r0, #8]
 8000538:	8181      	strh	r1, [r0, #12]
 800053a:	6643      	str	r3, [r0, #100]	; 0x64
 800053c:	81c2      	strh	r2, [r0, #14]
 800053e:	6183      	str	r3, [r0, #24]
 8000540:	4619      	mov	r1, r3
 8000542:	2208      	movs	r2, #8
 8000544:	305c      	adds	r0, #92	; 0x5c
 8000546:	f7ff ffcf 	bl	80004e8 <memset>
 800054a:	4b05      	ldr	r3, [pc, #20]	; (8000560 <std+0x38>)
 800054c:	6263      	str	r3, [r4, #36]	; 0x24
 800054e:	4b05      	ldr	r3, [pc, #20]	; (8000564 <std+0x3c>)
 8000550:	62a3      	str	r3, [r4, #40]	; 0x28
 8000552:	4b05      	ldr	r3, [pc, #20]	; (8000568 <std+0x40>)
 8000554:	62e3      	str	r3, [r4, #44]	; 0x2c
 8000556:	4b05      	ldr	r3, [pc, #20]	; (800056c <std+0x44>)
 8000558:	6224      	str	r4, [r4, #32]
 800055a:	6323      	str	r3, [r4, #48]	; 0x30
 800055c:	bd10      	pop	{r4, pc}
 800055e:	bf00      	nop
 8000560:	08000e3d 	.word	0x08000e3d
 8000564:	08000e5f 	.word	0x08000e5f
 8000568:	08000e97 	.word	0x08000e97
 800056c:	08000ebb 	.word	0x08000ebb

08000570 <_cleanup_r>:
 8000570:	4901      	ldr	r1, [pc, #4]	; (8000578 <_cleanup_r+0x8>)
 8000572:	f000 b8af 	b.w	80006d4 <_fwalk_reent>
 8000576:	bf00      	nop
 8000578:	08001195 	.word	0x08001195

0800057c <__sfmoreglue>:
 800057c:	b570      	push	{r4, r5, r6, lr}
 800057e:	2268      	movs	r2, #104	; 0x68
 8000580:	1e4d      	subs	r5, r1, #1
 8000582:	4355      	muls	r5, r2
 8000584:	460e      	mov	r6, r1
 8000586:	f105 0174 	add.w	r1, r5, #116	; 0x74
 800058a:	f000 f8e5 	bl	8000758 <_malloc_r>
 800058e:	4604      	mov	r4, r0
 8000590:	b140      	cbz	r0, 80005a4 <__sfmoreglue+0x28>
 8000592:	2100      	movs	r1, #0
 8000594:	e9c0 1600 	strd	r1, r6, [r0]
 8000598:	300c      	adds	r0, #12
 800059a:	60a0      	str	r0, [r4, #8]
 800059c:	f105 0268 	add.w	r2, r5, #104	; 0x68
 80005a0:	f7ff ffa2 	bl	80004e8 <memset>
 80005a4:	4620      	mov	r0, r4
 80005a6:	bd70      	pop	{r4, r5, r6, pc}

080005a8 <__sfp_lock_acquire>:
 80005a8:	4801      	ldr	r0, [pc, #4]	; (80005b0 <__sfp_lock_acquire+0x8>)
 80005aa:	f000 b8b3 	b.w	8000714 <__retarget_lock_acquire_recursive>
 80005ae:	bf00      	nop
 80005b0:	20000085 	.word	0x20000085

080005b4 <__sfp_lock_release>:
 80005b4:	4801      	ldr	r0, [pc, #4]	; (80005bc <__sfp_lock_release+0x8>)
 80005b6:	f000 b8ae 	b.w	8000716 <__retarget_lock_release_recursive>
 80005ba:	bf00      	nop
 80005bc:	20000085 	.word	0x20000085

080005c0 <__sinit_lock_acquire>:
 80005c0:	4801      	ldr	r0, [pc, #4]	; (80005c8 <__sinit_lock_acquire+0x8>)
 80005c2:	f000 b8a7 	b.w	8000714 <__retarget_lock_acquire_recursive>
 80005c6:	bf00      	nop
 80005c8:	20000086 	.word	0x20000086

080005cc <__sinit_lock_release>:
 80005cc:	4801      	ldr	r0, [pc, #4]	; (80005d4 <__sinit_lock_release+0x8>)
 80005ce:	f000 b8a2 	b.w	8000716 <__retarget_lock_release_recursive>
 80005d2:	bf00      	nop
 80005d4:	20000086 	.word	0x20000086

080005d8 <__sinit>:
 80005d8:	b510      	push	{r4, lr}
 80005da:	4604      	mov	r4, r0
 80005dc:	f7ff fff0 	bl	80005c0 <__sinit_lock_acquire>
 80005e0:	69a3      	ldr	r3, [r4, #24]
 80005e2:	b11b      	cbz	r3, 80005ec <__sinit+0x14>
 80005e4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80005e8:	f7ff bff0 	b.w	80005cc <__sinit_lock_release>
 80005ec:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 80005f0:	6523      	str	r3, [r4, #80]	; 0x50
 80005f2:	4b13      	ldr	r3, [pc, #76]	; (8000640 <__sinit+0x68>)
 80005f4:	4a13      	ldr	r2, [pc, #76]	; (8000644 <__sinit+0x6c>)
 80005f6:	681b      	ldr	r3, [r3, #0]
 80005f8:	62a2      	str	r2, [r4, #40]	; 0x28
 80005fa:	42a3      	cmp	r3, r4
 80005fc:	bf04      	itt	eq
 80005fe:	2301      	moveq	r3, #1
 8000600:	61a3      	streq	r3, [r4, #24]
 8000602:	4620      	mov	r0, r4
 8000604:	f000 f820 	bl	8000648 <__sfp>
 8000608:	6060      	str	r0, [r4, #4]
 800060a:	4620      	mov	r0, r4
 800060c:	f000 f81c 	bl	8000648 <__sfp>
 8000610:	60a0      	str	r0, [r4, #8]
 8000612:	4620      	mov	r0, r4
 8000614:	f000 f818 	bl	8000648 <__sfp>
 8000618:	2200      	movs	r2, #0
 800061a:	60e0      	str	r0, [r4, #12]
 800061c:	2104      	movs	r1, #4
 800061e:	6860      	ldr	r0, [r4, #4]
 8000620:	f7ff ff82 	bl	8000528 <std>
 8000624:	68a0      	ldr	r0, [r4, #8]
 8000626:	2201      	movs	r2, #1
 8000628:	2109      	movs	r1, #9
 800062a:	f7ff ff7d 	bl	8000528 <std>
 800062e:	68e0      	ldr	r0, [r4, #12]
 8000630:	2202      	movs	r2, #2
 8000632:	2112      	movs	r1, #18
 8000634:	f7ff ff78 	bl	8000528 <std>
 8000638:	2301      	movs	r3, #1
 800063a:	61a3      	str	r3, [r4, #24]
 800063c:	e7d2      	b.n	80005e4 <__sinit+0xc>
 800063e:	bf00      	nop
 8000640:	0800143c 	.word	0x0800143c
 8000644:	08000571 	.word	0x08000571

08000648 <__sfp>:
 8000648:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800064a:	4607      	mov	r7, r0
 800064c:	f7ff ffac 	bl	80005a8 <__sfp_lock_acquire>
 8000650:	4b1e      	ldr	r3, [pc, #120]	; (80006cc <__sfp+0x84>)
 8000652:	681e      	ldr	r6, [r3, #0]
 8000654:	69b3      	ldr	r3, [r6, #24]
 8000656:	b913      	cbnz	r3, 800065e <__sfp+0x16>
 8000658:	4630      	mov	r0, r6
 800065a:	f7ff ffbd 	bl	80005d8 <__sinit>
 800065e:	3648      	adds	r6, #72	; 0x48
 8000660:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8000664:	3b01      	subs	r3, #1
 8000666:	d503      	bpl.n	8000670 <__sfp+0x28>
 8000668:	6833      	ldr	r3, [r6, #0]
 800066a:	b30b      	cbz	r3, 80006b0 <__sfp+0x68>
 800066c:	6836      	ldr	r6, [r6, #0]
 800066e:	e7f7      	b.n	8000660 <__sfp+0x18>
 8000670:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8000674:	b9d5      	cbnz	r5, 80006ac <__sfp+0x64>
 8000676:	4b16      	ldr	r3, [pc, #88]	; (80006d0 <__sfp+0x88>)
 8000678:	60e3      	str	r3, [r4, #12]
 800067a:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800067e:	6665      	str	r5, [r4, #100]	; 0x64
 8000680:	f000 f847 	bl	8000712 <__retarget_lock_init_recursive>
 8000684:	f7ff ff96 	bl	80005b4 <__sfp_lock_release>
 8000688:	e9c4 5501 	strd	r5, r5, [r4, #4]
 800068c:	e9c4 5504 	strd	r5, r5, [r4, #16]
 8000690:	6025      	str	r5, [r4, #0]
 8000692:	61a5      	str	r5, [r4, #24]
 8000694:	2208      	movs	r2, #8
 8000696:	4629      	mov	r1, r5
 8000698:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 800069c:	f7ff ff24 	bl	80004e8 <memset>
 80006a0:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 80006a4:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 80006a8:	4620      	mov	r0, r4
 80006aa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80006ac:	3468      	adds	r4, #104	; 0x68
 80006ae:	e7d9      	b.n	8000664 <__sfp+0x1c>
 80006b0:	2104      	movs	r1, #4
 80006b2:	4638      	mov	r0, r7
 80006b4:	f7ff ff62 	bl	800057c <__sfmoreglue>
 80006b8:	4604      	mov	r4, r0
 80006ba:	6030      	str	r0, [r6, #0]
 80006bc:	2800      	cmp	r0, #0
 80006be:	d1d5      	bne.n	800066c <__sfp+0x24>
 80006c0:	f7ff ff78 	bl	80005b4 <__sfp_lock_release>
 80006c4:	230c      	movs	r3, #12
 80006c6:	603b      	str	r3, [r7, #0]
 80006c8:	e7ee      	b.n	80006a8 <__sfp+0x60>
 80006ca:	bf00      	nop
 80006cc:	0800143c 	.word	0x0800143c
 80006d0:	ffff0001 	.word	0xffff0001

080006d4 <_fwalk_reent>:
 80006d4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80006d8:	4606      	mov	r6, r0
 80006da:	4688      	mov	r8, r1
 80006dc:	f100 0448 	add.w	r4, r0, #72	; 0x48
 80006e0:	2700      	movs	r7, #0
 80006e2:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 80006e6:	f1b9 0901 	subs.w	r9, r9, #1
 80006ea:	d505      	bpl.n	80006f8 <_fwalk_reent+0x24>
 80006ec:	6824      	ldr	r4, [r4, #0]
 80006ee:	2c00      	cmp	r4, #0
 80006f0:	d1f7      	bne.n	80006e2 <_fwalk_reent+0xe>
 80006f2:	4638      	mov	r0, r7
 80006f4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80006f8:	89ab      	ldrh	r3, [r5, #12]
 80006fa:	2b01      	cmp	r3, #1
 80006fc:	d907      	bls.n	800070e <_fwalk_reent+0x3a>
 80006fe:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8000702:	3301      	adds	r3, #1
 8000704:	d003      	beq.n	800070e <_fwalk_reent+0x3a>
 8000706:	4629      	mov	r1, r5
 8000708:	4630      	mov	r0, r6
 800070a:	47c0      	blx	r8
 800070c:	4307      	orrs	r7, r0
 800070e:	3568      	adds	r5, #104	; 0x68
 8000710:	e7e9      	b.n	80006e6 <_fwalk_reent+0x12>

08000712 <__retarget_lock_init_recursive>:
 8000712:	4770      	bx	lr

08000714 <__retarget_lock_acquire_recursive>:
 8000714:	4770      	bx	lr

08000716 <__retarget_lock_release_recursive>:
 8000716:	4770      	bx	lr

08000718 <sbrk_aligned>:
 8000718:	b570      	push	{r4, r5, r6, lr}
 800071a:	4e0e      	ldr	r6, [pc, #56]	; (8000754 <sbrk_aligned+0x3c>)
 800071c:	460c      	mov	r4, r1
 800071e:	6831      	ldr	r1, [r6, #0]
 8000720:	4605      	mov	r5, r0
 8000722:	b911      	cbnz	r1, 800072a <sbrk_aligned+0x12>
 8000724:	f000 fb7a 	bl	8000e1c <_sbrk_r>
 8000728:	6030      	str	r0, [r6, #0]
 800072a:	4621      	mov	r1, r4
 800072c:	4628      	mov	r0, r5
 800072e:	f000 fb75 	bl	8000e1c <_sbrk_r>
 8000732:	1c43      	adds	r3, r0, #1
 8000734:	d00a      	beq.n	800074c <sbrk_aligned+0x34>
 8000736:	1cc4      	adds	r4, r0, #3
 8000738:	f024 0403 	bic.w	r4, r4, #3
 800073c:	42a0      	cmp	r0, r4
 800073e:	d007      	beq.n	8000750 <sbrk_aligned+0x38>
 8000740:	1a21      	subs	r1, r4, r0
 8000742:	4628      	mov	r0, r5
 8000744:	f000 fb6a 	bl	8000e1c <_sbrk_r>
 8000748:	3001      	adds	r0, #1
 800074a:	d101      	bne.n	8000750 <sbrk_aligned+0x38>
 800074c:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
 8000750:	4620      	mov	r0, r4
 8000752:	bd70      	pop	{r4, r5, r6, pc}
 8000754:	2000008c 	.word	0x2000008c

08000758 <_malloc_r>:
 8000758:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800075c:	1ccd      	adds	r5, r1, #3
 800075e:	f025 0503 	bic.w	r5, r5, #3
 8000762:	3508      	adds	r5, #8
 8000764:	2d0c      	cmp	r5, #12
 8000766:	bf38      	it	cc
 8000768:	250c      	movcc	r5, #12
 800076a:	2d00      	cmp	r5, #0
 800076c:	4607      	mov	r7, r0
 800076e:	db01      	blt.n	8000774 <_malloc_r+0x1c>
 8000770:	42a9      	cmp	r1, r5
 8000772:	d905      	bls.n	8000780 <_malloc_r+0x28>
 8000774:	230c      	movs	r3, #12
 8000776:	603b      	str	r3, [r7, #0]
 8000778:	2600      	movs	r6, #0
 800077a:	4630      	mov	r0, r6
 800077c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000780:	4e2e      	ldr	r6, [pc, #184]	; (800083c <_malloc_r+0xe4>)
 8000782:	f000 fdbb 	bl	80012fc <__malloc_lock>
 8000786:	6833      	ldr	r3, [r6, #0]
 8000788:	461c      	mov	r4, r3
 800078a:	bb34      	cbnz	r4, 80007da <_malloc_r+0x82>
 800078c:	4629      	mov	r1, r5
 800078e:	4638      	mov	r0, r7
 8000790:	f7ff ffc2 	bl	8000718 <sbrk_aligned>
 8000794:	1c43      	adds	r3, r0, #1
 8000796:	4604      	mov	r4, r0
 8000798:	d14d      	bne.n	8000836 <_malloc_r+0xde>
 800079a:	6834      	ldr	r4, [r6, #0]
 800079c:	4626      	mov	r6, r4
 800079e:	2e00      	cmp	r6, #0
 80007a0:	d140      	bne.n	8000824 <_malloc_r+0xcc>
 80007a2:	6823      	ldr	r3, [r4, #0]
 80007a4:	4631      	mov	r1, r6
 80007a6:	4638      	mov	r0, r7
 80007a8:	eb04 0803 	add.w	r8, r4, r3
 80007ac:	f000 fb36 	bl	8000e1c <_sbrk_r>
 80007b0:	4580      	cmp	r8, r0
 80007b2:	d13a      	bne.n	800082a <_malloc_r+0xd2>
 80007b4:	6821      	ldr	r1, [r4, #0]
 80007b6:	3503      	adds	r5, #3
 80007b8:	1a6d      	subs	r5, r5, r1
 80007ba:	f025 0503 	bic.w	r5, r5, #3
 80007be:	3508      	adds	r5, #8
 80007c0:	2d0c      	cmp	r5, #12
 80007c2:	bf38      	it	cc
 80007c4:	250c      	movcc	r5, #12
 80007c6:	4629      	mov	r1, r5
 80007c8:	4638      	mov	r0, r7
 80007ca:	f7ff ffa5 	bl	8000718 <sbrk_aligned>
 80007ce:	3001      	adds	r0, #1
 80007d0:	d02b      	beq.n	800082a <_malloc_r+0xd2>
 80007d2:	6823      	ldr	r3, [r4, #0]
 80007d4:	442b      	add	r3, r5
 80007d6:	6023      	str	r3, [r4, #0]
 80007d8:	e00e      	b.n	80007f8 <_malloc_r+0xa0>
 80007da:	6822      	ldr	r2, [r4, #0]
 80007dc:	1b52      	subs	r2, r2, r5
 80007de:	d41e      	bmi.n	800081e <_malloc_r+0xc6>
 80007e0:	2a0b      	cmp	r2, #11
 80007e2:	d916      	bls.n	8000812 <_malloc_r+0xba>
 80007e4:	1961      	adds	r1, r4, r5
 80007e6:	42a3      	cmp	r3, r4
 80007e8:	6025      	str	r5, [r4, #0]
 80007ea:	bf18      	it	ne
 80007ec:	6059      	strne	r1, [r3, #4]
 80007ee:	6863      	ldr	r3, [r4, #4]
 80007f0:	bf08      	it	eq
 80007f2:	6031      	streq	r1, [r6, #0]
 80007f4:	5162      	str	r2, [r4, r5]
 80007f6:	604b      	str	r3, [r1, #4]
 80007f8:	4638      	mov	r0, r7
 80007fa:	f104 060b 	add.w	r6, r4, #11
 80007fe:	f000 fd83 	bl	8001308 <__malloc_unlock>
 8000802:	f026 0607 	bic.w	r6, r6, #7
 8000806:	1d23      	adds	r3, r4, #4
 8000808:	1af2      	subs	r2, r6, r3
 800080a:	d0b6      	beq.n	800077a <_malloc_r+0x22>
 800080c:	1b9b      	subs	r3, r3, r6
 800080e:	50a3      	str	r3, [r4, r2]
 8000810:	e7b3      	b.n	800077a <_malloc_r+0x22>
 8000812:	6862      	ldr	r2, [r4, #4]
 8000814:	42a3      	cmp	r3, r4
 8000816:	bf0c      	ite	eq
 8000818:	6032      	streq	r2, [r6, #0]
 800081a:	605a      	strne	r2, [r3, #4]
 800081c:	e7ec      	b.n	80007f8 <_malloc_r+0xa0>
 800081e:	4623      	mov	r3, r4
 8000820:	6864      	ldr	r4, [r4, #4]
 8000822:	e7b2      	b.n	800078a <_malloc_r+0x32>
 8000824:	4634      	mov	r4, r6
 8000826:	6876      	ldr	r6, [r6, #4]
 8000828:	e7b9      	b.n	800079e <_malloc_r+0x46>
 800082a:	230c      	movs	r3, #12
 800082c:	603b      	str	r3, [r7, #0]
 800082e:	4638      	mov	r0, r7
 8000830:	f000 fd6a 	bl	8001308 <__malloc_unlock>
 8000834:	e7a1      	b.n	800077a <_malloc_r+0x22>
 8000836:	6025      	str	r5, [r4, #0]
 8000838:	e7de      	b.n	80007f8 <_malloc_r+0xa0>
 800083a:	bf00      	nop
 800083c:	20000088 	.word	0x20000088

08000840 <__sfputc_r>:
 8000840:	6893      	ldr	r3, [r2, #8]
 8000842:	3b01      	subs	r3, #1
 8000844:	2b00      	cmp	r3, #0
 8000846:	b410      	push	{r4}
 8000848:	6093      	str	r3, [r2, #8]
 800084a:	da08      	bge.n	800085e <__sfputc_r+0x1e>
 800084c:	6994      	ldr	r4, [r2, #24]
 800084e:	42a3      	cmp	r3, r4
 8000850:	db01      	blt.n	8000856 <__sfputc_r+0x16>
 8000852:	290a      	cmp	r1, #10
 8000854:	d103      	bne.n	800085e <__sfputc_r+0x1e>
 8000856:	f85d 4b04 	ldr.w	r4, [sp], #4
 800085a:	f000 bb33 	b.w	8000ec4 <__swbuf_r>
 800085e:	6813      	ldr	r3, [r2, #0]
 8000860:	1c58      	adds	r0, r3, #1
 8000862:	6010      	str	r0, [r2, #0]
 8000864:	7019      	strb	r1, [r3, #0]
 8000866:	4608      	mov	r0, r1
 8000868:	f85d 4b04 	ldr.w	r4, [sp], #4
 800086c:	4770      	bx	lr

0800086e <__sfputs_r>:
 800086e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000870:	4606      	mov	r6, r0
 8000872:	460f      	mov	r7, r1
 8000874:	4614      	mov	r4, r2
 8000876:	18d5      	adds	r5, r2, r3
 8000878:	42ac      	cmp	r4, r5
 800087a:	d101      	bne.n	8000880 <__sfputs_r+0x12>
 800087c:	2000      	movs	r0, #0
 800087e:	e007      	b.n	8000890 <__sfputs_r+0x22>
 8000880:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000884:	463a      	mov	r2, r7
 8000886:	4630      	mov	r0, r6
 8000888:	f7ff ffda 	bl	8000840 <__sfputc_r>
 800088c:	1c43      	adds	r3, r0, #1
 800088e:	d1f3      	bne.n	8000878 <__sfputs_r+0xa>
 8000890:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08000894 <_vfiprintf_r>:
 8000894:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000898:	460d      	mov	r5, r1
 800089a:	b09d      	sub	sp, #116	; 0x74
 800089c:	4614      	mov	r4, r2
 800089e:	4698      	mov	r8, r3
 80008a0:	4606      	mov	r6, r0
 80008a2:	b118      	cbz	r0, 80008ac <_vfiprintf_r+0x18>
 80008a4:	6983      	ldr	r3, [r0, #24]
 80008a6:	b90b      	cbnz	r3, 80008ac <_vfiprintf_r+0x18>
 80008a8:	f7ff fe96 	bl	80005d8 <__sinit>
 80008ac:	4b89      	ldr	r3, [pc, #548]	; (8000ad4 <_vfiprintf_r+0x240>)
 80008ae:	429d      	cmp	r5, r3
 80008b0:	d11b      	bne.n	80008ea <_vfiprintf_r+0x56>
 80008b2:	6875      	ldr	r5, [r6, #4]
 80008b4:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 80008b6:	07d9      	lsls	r1, r3, #31
 80008b8:	d405      	bmi.n	80008c6 <_vfiprintf_r+0x32>
 80008ba:	89ab      	ldrh	r3, [r5, #12]
 80008bc:	059a      	lsls	r2, r3, #22
 80008be:	d402      	bmi.n	80008c6 <_vfiprintf_r+0x32>
 80008c0:	6da8      	ldr	r0, [r5, #88]	; 0x58
 80008c2:	f7ff ff27 	bl	8000714 <__retarget_lock_acquire_recursive>
 80008c6:	89ab      	ldrh	r3, [r5, #12]
 80008c8:	071b      	lsls	r3, r3, #28
 80008ca:	d501      	bpl.n	80008d0 <_vfiprintf_r+0x3c>
 80008cc:	692b      	ldr	r3, [r5, #16]
 80008ce:	b9eb      	cbnz	r3, 800090c <_vfiprintf_r+0x78>
 80008d0:	4629      	mov	r1, r5
 80008d2:	4630      	mov	r0, r6
 80008d4:	f000 fb5a 	bl	8000f8c <__swsetup_r>
 80008d8:	b1c0      	cbz	r0, 800090c <_vfiprintf_r+0x78>
 80008da:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 80008dc:	07dc      	lsls	r4, r3, #31
 80008de:	d50e      	bpl.n	80008fe <_vfiprintf_r+0x6a>
 80008e0:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80008e4:	b01d      	add	sp, #116	; 0x74
 80008e6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80008ea:	4b7b      	ldr	r3, [pc, #492]	; (8000ad8 <_vfiprintf_r+0x244>)
 80008ec:	429d      	cmp	r5, r3
 80008ee:	d101      	bne.n	80008f4 <_vfiprintf_r+0x60>
 80008f0:	68b5      	ldr	r5, [r6, #8]
 80008f2:	e7df      	b.n	80008b4 <_vfiprintf_r+0x20>
 80008f4:	4b79      	ldr	r3, [pc, #484]	; (8000adc <_vfiprintf_r+0x248>)
 80008f6:	429d      	cmp	r5, r3
 80008f8:	bf08      	it	eq
 80008fa:	68f5      	ldreq	r5, [r6, #12]
 80008fc:	e7da      	b.n	80008b4 <_vfiprintf_r+0x20>
 80008fe:	89ab      	ldrh	r3, [r5, #12]
 8000900:	0598      	lsls	r0, r3, #22
 8000902:	d4ed      	bmi.n	80008e0 <_vfiprintf_r+0x4c>
 8000904:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000906:	f7ff ff06 	bl	8000716 <__retarget_lock_release_recursive>
 800090a:	e7e9      	b.n	80008e0 <_vfiprintf_r+0x4c>
 800090c:	2300      	movs	r3, #0
 800090e:	9309      	str	r3, [sp, #36]	; 0x24
 8000910:	2320      	movs	r3, #32
 8000912:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8000916:	f8cd 800c 	str.w	r8, [sp, #12]
 800091a:	2330      	movs	r3, #48	; 0x30
 800091c:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 8000ae0 <_vfiprintf_r+0x24c>
 8000920:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8000924:	f04f 0901 	mov.w	r9, #1
 8000928:	4623      	mov	r3, r4
 800092a:	469a      	mov	sl, r3
 800092c:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000930:	b10a      	cbz	r2, 8000936 <_vfiprintf_r+0xa2>
 8000932:	2a25      	cmp	r2, #37	; 0x25
 8000934:	d1f9      	bne.n	800092a <_vfiprintf_r+0x96>
 8000936:	ebba 0b04 	subs.w	fp, sl, r4
 800093a:	d00b      	beq.n	8000954 <_vfiprintf_r+0xc0>
 800093c:	465b      	mov	r3, fp
 800093e:	4622      	mov	r2, r4
 8000940:	4629      	mov	r1, r5
 8000942:	4630      	mov	r0, r6
 8000944:	f7ff ff93 	bl	800086e <__sfputs_r>
 8000948:	3001      	adds	r0, #1
 800094a:	f000 80aa 	beq.w	8000aa2 <_vfiprintf_r+0x20e>
 800094e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8000950:	445a      	add	r2, fp
 8000952:	9209      	str	r2, [sp, #36]	; 0x24
 8000954:	f89a 3000 	ldrb.w	r3, [sl]
 8000958:	2b00      	cmp	r3, #0
 800095a:	f000 80a2 	beq.w	8000aa2 <_vfiprintf_r+0x20e>
 800095e:	2300      	movs	r3, #0
 8000960:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8000964:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8000968:	f10a 0a01 	add.w	sl, sl, #1
 800096c:	9304      	str	r3, [sp, #16]
 800096e:	9307      	str	r3, [sp, #28]
 8000970:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8000974:	931a      	str	r3, [sp, #104]	; 0x68
 8000976:	4654      	mov	r4, sl
 8000978:	2205      	movs	r2, #5
 800097a:	f814 1b01 	ldrb.w	r1, [r4], #1
 800097e:	4858      	ldr	r0, [pc, #352]	; (8000ae0 <_vfiprintf_r+0x24c>)
 8000980:	f7ff fc2e 	bl	80001e0 <memchr>
 8000984:	9a04      	ldr	r2, [sp, #16]
 8000986:	b9d8      	cbnz	r0, 80009c0 <_vfiprintf_r+0x12c>
 8000988:	06d1      	lsls	r1, r2, #27
 800098a:	bf44      	itt	mi
 800098c:	2320      	movmi	r3, #32
 800098e:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000992:	0713      	lsls	r3, r2, #28
 8000994:	bf44      	itt	mi
 8000996:	232b      	movmi	r3, #43	; 0x2b
 8000998:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800099c:	f89a 3000 	ldrb.w	r3, [sl]
 80009a0:	2b2a      	cmp	r3, #42	; 0x2a
 80009a2:	d015      	beq.n	80009d0 <_vfiprintf_r+0x13c>
 80009a4:	9a07      	ldr	r2, [sp, #28]
 80009a6:	4654      	mov	r4, sl
 80009a8:	2000      	movs	r0, #0
 80009aa:	f04f 0c0a 	mov.w	ip, #10
 80009ae:	4621      	mov	r1, r4
 80009b0:	f811 3b01 	ldrb.w	r3, [r1], #1
 80009b4:	3b30      	subs	r3, #48	; 0x30
 80009b6:	2b09      	cmp	r3, #9
 80009b8:	d94e      	bls.n	8000a58 <_vfiprintf_r+0x1c4>
 80009ba:	b1b0      	cbz	r0, 80009ea <_vfiprintf_r+0x156>
 80009bc:	9207      	str	r2, [sp, #28]
 80009be:	e014      	b.n	80009ea <_vfiprintf_r+0x156>
 80009c0:	eba0 0308 	sub.w	r3, r0, r8
 80009c4:	fa09 f303 	lsl.w	r3, r9, r3
 80009c8:	4313      	orrs	r3, r2
 80009ca:	9304      	str	r3, [sp, #16]
 80009cc:	46a2      	mov	sl, r4
 80009ce:	e7d2      	b.n	8000976 <_vfiprintf_r+0xe2>
 80009d0:	9b03      	ldr	r3, [sp, #12]
 80009d2:	1d19      	adds	r1, r3, #4
 80009d4:	681b      	ldr	r3, [r3, #0]
 80009d6:	9103      	str	r1, [sp, #12]
 80009d8:	2b00      	cmp	r3, #0
 80009da:	bfbb      	ittet	lt
 80009dc:	425b      	neglt	r3, r3
 80009de:	f042 0202 	orrlt.w	r2, r2, #2
 80009e2:	9307      	strge	r3, [sp, #28]
 80009e4:	9307      	strlt	r3, [sp, #28]
 80009e6:	bfb8      	it	lt
 80009e8:	9204      	strlt	r2, [sp, #16]
 80009ea:	7823      	ldrb	r3, [r4, #0]
 80009ec:	2b2e      	cmp	r3, #46	; 0x2e
 80009ee:	d10c      	bne.n	8000a0a <_vfiprintf_r+0x176>
 80009f0:	7863      	ldrb	r3, [r4, #1]
 80009f2:	2b2a      	cmp	r3, #42	; 0x2a
 80009f4:	d135      	bne.n	8000a62 <_vfiprintf_r+0x1ce>
 80009f6:	9b03      	ldr	r3, [sp, #12]
 80009f8:	1d1a      	adds	r2, r3, #4
 80009fa:	681b      	ldr	r3, [r3, #0]
 80009fc:	9203      	str	r2, [sp, #12]
 80009fe:	2b00      	cmp	r3, #0
 8000a00:	bfb8      	it	lt
 8000a02:	f04f 33ff 	movlt.w	r3, #4294967295	; 0xffffffff
 8000a06:	3402      	adds	r4, #2
 8000a08:	9305      	str	r3, [sp, #20]
 8000a0a:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 8000af0 <_vfiprintf_r+0x25c>
 8000a0e:	7821      	ldrb	r1, [r4, #0]
 8000a10:	2203      	movs	r2, #3
 8000a12:	4650      	mov	r0, sl
 8000a14:	f7ff fbe4 	bl	80001e0 <memchr>
 8000a18:	b140      	cbz	r0, 8000a2c <_vfiprintf_r+0x198>
 8000a1a:	2340      	movs	r3, #64	; 0x40
 8000a1c:	eba0 000a 	sub.w	r0, r0, sl
 8000a20:	fa03 f000 	lsl.w	r0, r3, r0
 8000a24:	9b04      	ldr	r3, [sp, #16]
 8000a26:	4303      	orrs	r3, r0
 8000a28:	3401      	adds	r4, #1
 8000a2a:	9304      	str	r3, [sp, #16]
 8000a2c:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000a30:	482c      	ldr	r0, [pc, #176]	; (8000ae4 <_vfiprintf_r+0x250>)
 8000a32:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8000a36:	2206      	movs	r2, #6
 8000a38:	f7ff fbd2 	bl	80001e0 <memchr>
 8000a3c:	2800      	cmp	r0, #0
 8000a3e:	d03f      	beq.n	8000ac0 <_vfiprintf_r+0x22c>
 8000a40:	4b29      	ldr	r3, [pc, #164]	; (8000ae8 <_vfiprintf_r+0x254>)
 8000a42:	bb1b      	cbnz	r3, 8000a8c <_vfiprintf_r+0x1f8>
 8000a44:	9b03      	ldr	r3, [sp, #12]
 8000a46:	3307      	adds	r3, #7
 8000a48:	f023 0307 	bic.w	r3, r3, #7
 8000a4c:	3308      	adds	r3, #8
 8000a4e:	9303      	str	r3, [sp, #12]
 8000a50:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8000a52:	443b      	add	r3, r7
 8000a54:	9309      	str	r3, [sp, #36]	; 0x24
 8000a56:	e767      	b.n	8000928 <_vfiprintf_r+0x94>
 8000a58:	fb0c 3202 	mla	r2, ip, r2, r3
 8000a5c:	460c      	mov	r4, r1
 8000a5e:	2001      	movs	r0, #1
 8000a60:	e7a5      	b.n	80009ae <_vfiprintf_r+0x11a>
 8000a62:	2300      	movs	r3, #0
 8000a64:	3401      	adds	r4, #1
 8000a66:	9305      	str	r3, [sp, #20]
 8000a68:	4619      	mov	r1, r3
 8000a6a:	f04f 0c0a 	mov.w	ip, #10
 8000a6e:	4620      	mov	r0, r4
 8000a70:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000a74:	3a30      	subs	r2, #48	; 0x30
 8000a76:	2a09      	cmp	r2, #9
 8000a78:	d903      	bls.n	8000a82 <_vfiprintf_r+0x1ee>
 8000a7a:	2b00      	cmp	r3, #0
 8000a7c:	d0c5      	beq.n	8000a0a <_vfiprintf_r+0x176>
 8000a7e:	9105      	str	r1, [sp, #20]
 8000a80:	e7c3      	b.n	8000a0a <_vfiprintf_r+0x176>
 8000a82:	fb0c 2101 	mla	r1, ip, r1, r2
 8000a86:	4604      	mov	r4, r0
 8000a88:	2301      	movs	r3, #1
 8000a8a:	e7f0      	b.n	8000a6e <_vfiprintf_r+0x1da>
 8000a8c:	ab03      	add	r3, sp, #12
 8000a8e:	9300      	str	r3, [sp, #0]
 8000a90:	462a      	mov	r2, r5
 8000a92:	4b16      	ldr	r3, [pc, #88]	; (8000aec <_vfiprintf_r+0x258>)
 8000a94:	a904      	add	r1, sp, #16
 8000a96:	4630      	mov	r0, r6
 8000a98:	f3af 8000 	nop.w
 8000a9c:	4607      	mov	r7, r0
 8000a9e:	1c78      	adds	r0, r7, #1
 8000aa0:	d1d6      	bne.n	8000a50 <_vfiprintf_r+0x1bc>
 8000aa2:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000aa4:	07d9      	lsls	r1, r3, #31
 8000aa6:	d405      	bmi.n	8000ab4 <_vfiprintf_r+0x220>
 8000aa8:	89ab      	ldrh	r3, [r5, #12]
 8000aaa:	059a      	lsls	r2, r3, #22
 8000aac:	d402      	bmi.n	8000ab4 <_vfiprintf_r+0x220>
 8000aae:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000ab0:	f7ff fe31 	bl	8000716 <__retarget_lock_release_recursive>
 8000ab4:	89ab      	ldrh	r3, [r5, #12]
 8000ab6:	065b      	lsls	r3, r3, #25
 8000ab8:	f53f af12 	bmi.w	80008e0 <_vfiprintf_r+0x4c>
 8000abc:	9809      	ldr	r0, [sp, #36]	; 0x24
 8000abe:	e711      	b.n	80008e4 <_vfiprintf_r+0x50>
 8000ac0:	ab03      	add	r3, sp, #12
 8000ac2:	9300      	str	r3, [sp, #0]
 8000ac4:	462a      	mov	r2, r5
 8000ac6:	4b09      	ldr	r3, [pc, #36]	; (8000aec <_vfiprintf_r+0x258>)
 8000ac8:	a904      	add	r1, sp, #16
 8000aca:	4630      	mov	r0, r6
 8000acc:	f000 f880 	bl	8000bd0 <_printf_i>
 8000ad0:	e7e4      	b.n	8000a9c <_vfiprintf_r+0x208>
 8000ad2:	bf00      	nop
 8000ad4:	08001460 	.word	0x08001460
 8000ad8:	08001480 	.word	0x08001480
 8000adc:	08001440 	.word	0x08001440
 8000ae0:	080014a0 	.word	0x080014a0
 8000ae4:	080014aa 	.word	0x080014aa
 8000ae8:	00000000 	.word	0x00000000
 8000aec:	0800086f 	.word	0x0800086f
 8000af0:	080014a6 	.word	0x080014a6

08000af4 <_printf_common>:
 8000af4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000af8:	4616      	mov	r6, r2
 8000afa:	4699      	mov	r9, r3
 8000afc:	688a      	ldr	r2, [r1, #8]
 8000afe:	690b      	ldr	r3, [r1, #16]
 8000b00:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8000b04:	4293      	cmp	r3, r2
 8000b06:	bfb8      	it	lt
 8000b08:	4613      	movlt	r3, r2
 8000b0a:	6033      	str	r3, [r6, #0]
 8000b0c:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8000b10:	4607      	mov	r7, r0
 8000b12:	460c      	mov	r4, r1
 8000b14:	b10a      	cbz	r2, 8000b1a <_printf_common+0x26>
 8000b16:	3301      	adds	r3, #1
 8000b18:	6033      	str	r3, [r6, #0]
 8000b1a:	6823      	ldr	r3, [r4, #0]
 8000b1c:	0699      	lsls	r1, r3, #26
 8000b1e:	bf42      	ittt	mi
 8000b20:	6833      	ldrmi	r3, [r6, #0]
 8000b22:	3302      	addmi	r3, #2
 8000b24:	6033      	strmi	r3, [r6, #0]
 8000b26:	6825      	ldr	r5, [r4, #0]
 8000b28:	f015 0506 	ands.w	r5, r5, #6
 8000b2c:	d106      	bne.n	8000b3c <_printf_common+0x48>
 8000b2e:	f104 0a19 	add.w	sl, r4, #25
 8000b32:	68e3      	ldr	r3, [r4, #12]
 8000b34:	6832      	ldr	r2, [r6, #0]
 8000b36:	1a9b      	subs	r3, r3, r2
 8000b38:	42ab      	cmp	r3, r5
 8000b3a:	dc26      	bgt.n	8000b8a <_printf_common+0x96>
 8000b3c:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8000b40:	1e13      	subs	r3, r2, #0
 8000b42:	6822      	ldr	r2, [r4, #0]
 8000b44:	bf18      	it	ne
 8000b46:	2301      	movne	r3, #1
 8000b48:	0692      	lsls	r2, r2, #26
 8000b4a:	d42b      	bmi.n	8000ba4 <_printf_common+0xb0>
 8000b4c:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8000b50:	4649      	mov	r1, r9
 8000b52:	4638      	mov	r0, r7
 8000b54:	47c0      	blx	r8
 8000b56:	3001      	adds	r0, #1
 8000b58:	d01e      	beq.n	8000b98 <_printf_common+0xa4>
 8000b5a:	6823      	ldr	r3, [r4, #0]
 8000b5c:	68e5      	ldr	r5, [r4, #12]
 8000b5e:	6832      	ldr	r2, [r6, #0]
 8000b60:	f003 0306 	and.w	r3, r3, #6
 8000b64:	2b04      	cmp	r3, #4
 8000b66:	bf08      	it	eq
 8000b68:	1aad      	subeq	r5, r5, r2
 8000b6a:	68a3      	ldr	r3, [r4, #8]
 8000b6c:	6922      	ldr	r2, [r4, #16]
 8000b6e:	bf0c      	ite	eq
 8000b70:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8000b74:	2500      	movne	r5, #0
 8000b76:	4293      	cmp	r3, r2
 8000b78:	bfc4      	itt	gt
 8000b7a:	1a9b      	subgt	r3, r3, r2
 8000b7c:	18ed      	addgt	r5, r5, r3
 8000b7e:	2600      	movs	r6, #0
 8000b80:	341a      	adds	r4, #26
 8000b82:	42b5      	cmp	r5, r6
 8000b84:	d11a      	bne.n	8000bbc <_printf_common+0xc8>
 8000b86:	2000      	movs	r0, #0
 8000b88:	e008      	b.n	8000b9c <_printf_common+0xa8>
 8000b8a:	2301      	movs	r3, #1
 8000b8c:	4652      	mov	r2, sl
 8000b8e:	4649      	mov	r1, r9
 8000b90:	4638      	mov	r0, r7
 8000b92:	47c0      	blx	r8
 8000b94:	3001      	adds	r0, #1
 8000b96:	d103      	bne.n	8000ba0 <_printf_common+0xac>
 8000b98:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8000b9c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000ba0:	3501      	adds	r5, #1
 8000ba2:	e7c6      	b.n	8000b32 <_printf_common+0x3e>
 8000ba4:	18e1      	adds	r1, r4, r3
 8000ba6:	1c5a      	adds	r2, r3, #1
 8000ba8:	2030      	movs	r0, #48	; 0x30
 8000baa:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8000bae:	4422      	add	r2, r4
 8000bb0:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8000bb4:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8000bb8:	3302      	adds	r3, #2
 8000bba:	e7c7      	b.n	8000b4c <_printf_common+0x58>
 8000bbc:	2301      	movs	r3, #1
 8000bbe:	4622      	mov	r2, r4
 8000bc0:	4649      	mov	r1, r9
 8000bc2:	4638      	mov	r0, r7
 8000bc4:	47c0      	blx	r8
 8000bc6:	3001      	adds	r0, #1
 8000bc8:	d0e6      	beq.n	8000b98 <_printf_common+0xa4>
 8000bca:	3601      	adds	r6, #1
 8000bcc:	e7d9      	b.n	8000b82 <_printf_common+0x8e>
	...

08000bd0 <_printf_i>:
 8000bd0:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8000bd4:	7e0f      	ldrb	r7, [r1, #24]
 8000bd6:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8000bd8:	2f78      	cmp	r7, #120	; 0x78
 8000bda:	4691      	mov	r9, r2
 8000bdc:	4680      	mov	r8, r0
 8000bde:	460c      	mov	r4, r1
 8000be0:	469a      	mov	sl, r3
 8000be2:	f101 0243 	add.w	r2, r1, #67	; 0x43
 8000be6:	d807      	bhi.n	8000bf8 <_printf_i+0x28>
 8000be8:	2f62      	cmp	r7, #98	; 0x62
 8000bea:	d80a      	bhi.n	8000c02 <_printf_i+0x32>
 8000bec:	2f00      	cmp	r7, #0
 8000bee:	f000 80d8 	beq.w	8000da2 <_printf_i+0x1d2>
 8000bf2:	2f58      	cmp	r7, #88	; 0x58
 8000bf4:	f000 80a3 	beq.w	8000d3e <_printf_i+0x16e>
 8000bf8:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8000bfc:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8000c00:	e03a      	b.n	8000c78 <_printf_i+0xa8>
 8000c02:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8000c06:	2b15      	cmp	r3, #21
 8000c08:	d8f6      	bhi.n	8000bf8 <_printf_i+0x28>
 8000c0a:	a101      	add	r1, pc, #4	; (adr r1, 8000c10 <_printf_i+0x40>)
 8000c0c:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8000c10:	08000c69 	.word	0x08000c69
 8000c14:	08000c7d 	.word	0x08000c7d
 8000c18:	08000bf9 	.word	0x08000bf9
 8000c1c:	08000bf9 	.word	0x08000bf9
 8000c20:	08000bf9 	.word	0x08000bf9
 8000c24:	08000bf9 	.word	0x08000bf9
 8000c28:	08000c7d 	.word	0x08000c7d
 8000c2c:	08000bf9 	.word	0x08000bf9
 8000c30:	08000bf9 	.word	0x08000bf9
 8000c34:	08000bf9 	.word	0x08000bf9
 8000c38:	08000bf9 	.word	0x08000bf9
 8000c3c:	08000d89 	.word	0x08000d89
 8000c40:	08000cad 	.word	0x08000cad
 8000c44:	08000d6b 	.word	0x08000d6b
 8000c48:	08000bf9 	.word	0x08000bf9
 8000c4c:	08000bf9 	.word	0x08000bf9
 8000c50:	08000dab 	.word	0x08000dab
 8000c54:	08000bf9 	.word	0x08000bf9
 8000c58:	08000cad 	.word	0x08000cad
 8000c5c:	08000bf9 	.word	0x08000bf9
 8000c60:	08000bf9 	.word	0x08000bf9
 8000c64:	08000d73 	.word	0x08000d73
 8000c68:	682b      	ldr	r3, [r5, #0]
 8000c6a:	1d1a      	adds	r2, r3, #4
 8000c6c:	681b      	ldr	r3, [r3, #0]
 8000c6e:	602a      	str	r2, [r5, #0]
 8000c70:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8000c74:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8000c78:	2301      	movs	r3, #1
 8000c7a:	e0a3      	b.n	8000dc4 <_printf_i+0x1f4>
 8000c7c:	6820      	ldr	r0, [r4, #0]
 8000c7e:	6829      	ldr	r1, [r5, #0]
 8000c80:	0606      	lsls	r6, r0, #24
 8000c82:	f101 0304 	add.w	r3, r1, #4
 8000c86:	d50a      	bpl.n	8000c9e <_printf_i+0xce>
 8000c88:	680e      	ldr	r6, [r1, #0]
 8000c8a:	602b      	str	r3, [r5, #0]
 8000c8c:	2e00      	cmp	r6, #0
 8000c8e:	da03      	bge.n	8000c98 <_printf_i+0xc8>
 8000c90:	232d      	movs	r3, #45	; 0x2d
 8000c92:	4276      	negs	r6, r6
 8000c94:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8000c98:	485e      	ldr	r0, [pc, #376]	; (8000e14 <_printf_i+0x244>)
 8000c9a:	230a      	movs	r3, #10
 8000c9c:	e019      	b.n	8000cd2 <_printf_i+0x102>
 8000c9e:	680e      	ldr	r6, [r1, #0]
 8000ca0:	602b      	str	r3, [r5, #0]
 8000ca2:	f010 0f40 	tst.w	r0, #64	; 0x40
 8000ca6:	bf18      	it	ne
 8000ca8:	b236      	sxthne	r6, r6
 8000caa:	e7ef      	b.n	8000c8c <_printf_i+0xbc>
 8000cac:	682b      	ldr	r3, [r5, #0]
 8000cae:	6820      	ldr	r0, [r4, #0]
 8000cb0:	1d19      	adds	r1, r3, #4
 8000cb2:	6029      	str	r1, [r5, #0]
 8000cb4:	0601      	lsls	r1, r0, #24
 8000cb6:	d501      	bpl.n	8000cbc <_printf_i+0xec>
 8000cb8:	681e      	ldr	r6, [r3, #0]
 8000cba:	e002      	b.n	8000cc2 <_printf_i+0xf2>
 8000cbc:	0646      	lsls	r6, r0, #25
 8000cbe:	d5fb      	bpl.n	8000cb8 <_printf_i+0xe8>
 8000cc0:	881e      	ldrh	r6, [r3, #0]
 8000cc2:	4854      	ldr	r0, [pc, #336]	; (8000e14 <_printf_i+0x244>)
 8000cc4:	2f6f      	cmp	r7, #111	; 0x6f
 8000cc6:	bf0c      	ite	eq
 8000cc8:	2308      	moveq	r3, #8
 8000cca:	230a      	movne	r3, #10
 8000ccc:	2100      	movs	r1, #0
 8000cce:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8000cd2:	6865      	ldr	r5, [r4, #4]
 8000cd4:	60a5      	str	r5, [r4, #8]
 8000cd6:	2d00      	cmp	r5, #0
 8000cd8:	bfa2      	ittt	ge
 8000cda:	6821      	ldrge	r1, [r4, #0]
 8000cdc:	f021 0104 	bicge.w	r1, r1, #4
 8000ce0:	6021      	strge	r1, [r4, #0]
 8000ce2:	b90e      	cbnz	r6, 8000ce8 <_printf_i+0x118>
 8000ce4:	2d00      	cmp	r5, #0
 8000ce6:	d04d      	beq.n	8000d84 <_printf_i+0x1b4>
 8000ce8:	4615      	mov	r5, r2
 8000cea:	fbb6 f1f3 	udiv	r1, r6, r3
 8000cee:	fb03 6711 	mls	r7, r3, r1, r6
 8000cf2:	5dc7      	ldrb	r7, [r0, r7]
 8000cf4:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8000cf8:	4637      	mov	r7, r6
 8000cfa:	42bb      	cmp	r3, r7
 8000cfc:	460e      	mov	r6, r1
 8000cfe:	d9f4      	bls.n	8000cea <_printf_i+0x11a>
 8000d00:	2b08      	cmp	r3, #8
 8000d02:	d10b      	bne.n	8000d1c <_printf_i+0x14c>
 8000d04:	6823      	ldr	r3, [r4, #0]
 8000d06:	07de      	lsls	r6, r3, #31
 8000d08:	d508      	bpl.n	8000d1c <_printf_i+0x14c>
 8000d0a:	6923      	ldr	r3, [r4, #16]
 8000d0c:	6861      	ldr	r1, [r4, #4]
 8000d0e:	4299      	cmp	r1, r3
 8000d10:	bfde      	ittt	le
 8000d12:	2330      	movle	r3, #48	; 0x30
 8000d14:	f805 3c01 	strble.w	r3, [r5, #-1]
 8000d18:	f105 35ff 	addle.w	r5, r5, #4294967295	; 0xffffffff
 8000d1c:	1b52      	subs	r2, r2, r5
 8000d1e:	6122      	str	r2, [r4, #16]
 8000d20:	f8cd a000 	str.w	sl, [sp]
 8000d24:	464b      	mov	r3, r9
 8000d26:	aa03      	add	r2, sp, #12
 8000d28:	4621      	mov	r1, r4
 8000d2a:	4640      	mov	r0, r8
 8000d2c:	f7ff fee2 	bl	8000af4 <_printf_common>
 8000d30:	3001      	adds	r0, #1
 8000d32:	d14c      	bne.n	8000dce <_printf_i+0x1fe>
 8000d34:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8000d38:	b004      	add	sp, #16
 8000d3a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000d3e:	4835      	ldr	r0, [pc, #212]	; (8000e14 <_printf_i+0x244>)
 8000d40:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 8000d44:	6829      	ldr	r1, [r5, #0]
 8000d46:	6823      	ldr	r3, [r4, #0]
 8000d48:	f851 6b04 	ldr.w	r6, [r1], #4
 8000d4c:	6029      	str	r1, [r5, #0]
 8000d4e:	061d      	lsls	r5, r3, #24
 8000d50:	d514      	bpl.n	8000d7c <_printf_i+0x1ac>
 8000d52:	07df      	lsls	r7, r3, #31
 8000d54:	bf44      	itt	mi
 8000d56:	f043 0320 	orrmi.w	r3, r3, #32
 8000d5a:	6023      	strmi	r3, [r4, #0]
 8000d5c:	b91e      	cbnz	r6, 8000d66 <_printf_i+0x196>
 8000d5e:	6823      	ldr	r3, [r4, #0]
 8000d60:	f023 0320 	bic.w	r3, r3, #32
 8000d64:	6023      	str	r3, [r4, #0]
 8000d66:	2310      	movs	r3, #16
 8000d68:	e7b0      	b.n	8000ccc <_printf_i+0xfc>
 8000d6a:	6823      	ldr	r3, [r4, #0]
 8000d6c:	f043 0320 	orr.w	r3, r3, #32
 8000d70:	6023      	str	r3, [r4, #0]
 8000d72:	2378      	movs	r3, #120	; 0x78
 8000d74:	4828      	ldr	r0, [pc, #160]	; (8000e18 <_printf_i+0x248>)
 8000d76:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8000d7a:	e7e3      	b.n	8000d44 <_printf_i+0x174>
 8000d7c:	0659      	lsls	r1, r3, #25
 8000d7e:	bf48      	it	mi
 8000d80:	b2b6      	uxthmi	r6, r6
 8000d82:	e7e6      	b.n	8000d52 <_printf_i+0x182>
 8000d84:	4615      	mov	r5, r2
 8000d86:	e7bb      	b.n	8000d00 <_printf_i+0x130>
 8000d88:	682b      	ldr	r3, [r5, #0]
 8000d8a:	6826      	ldr	r6, [r4, #0]
 8000d8c:	6961      	ldr	r1, [r4, #20]
 8000d8e:	1d18      	adds	r0, r3, #4
 8000d90:	6028      	str	r0, [r5, #0]
 8000d92:	0635      	lsls	r5, r6, #24
 8000d94:	681b      	ldr	r3, [r3, #0]
 8000d96:	d501      	bpl.n	8000d9c <_printf_i+0x1cc>
 8000d98:	6019      	str	r1, [r3, #0]
 8000d9a:	e002      	b.n	8000da2 <_printf_i+0x1d2>
 8000d9c:	0670      	lsls	r0, r6, #25
 8000d9e:	d5fb      	bpl.n	8000d98 <_printf_i+0x1c8>
 8000da0:	8019      	strh	r1, [r3, #0]
 8000da2:	2300      	movs	r3, #0
 8000da4:	6123      	str	r3, [r4, #16]
 8000da6:	4615      	mov	r5, r2
 8000da8:	e7ba      	b.n	8000d20 <_printf_i+0x150>
 8000daa:	682b      	ldr	r3, [r5, #0]
 8000dac:	1d1a      	adds	r2, r3, #4
 8000dae:	602a      	str	r2, [r5, #0]
 8000db0:	681d      	ldr	r5, [r3, #0]
 8000db2:	6862      	ldr	r2, [r4, #4]
 8000db4:	2100      	movs	r1, #0
 8000db6:	4628      	mov	r0, r5
 8000db8:	f7ff fa12 	bl	80001e0 <memchr>
 8000dbc:	b108      	cbz	r0, 8000dc2 <_printf_i+0x1f2>
 8000dbe:	1b40      	subs	r0, r0, r5
 8000dc0:	6060      	str	r0, [r4, #4]
 8000dc2:	6863      	ldr	r3, [r4, #4]
 8000dc4:	6123      	str	r3, [r4, #16]
 8000dc6:	2300      	movs	r3, #0
 8000dc8:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8000dcc:	e7a8      	b.n	8000d20 <_printf_i+0x150>
 8000dce:	6923      	ldr	r3, [r4, #16]
 8000dd0:	462a      	mov	r2, r5
 8000dd2:	4649      	mov	r1, r9
 8000dd4:	4640      	mov	r0, r8
 8000dd6:	47d0      	blx	sl
 8000dd8:	3001      	adds	r0, #1
 8000dda:	d0ab      	beq.n	8000d34 <_printf_i+0x164>
 8000ddc:	6823      	ldr	r3, [r4, #0]
 8000dde:	079b      	lsls	r3, r3, #30
 8000de0:	d413      	bmi.n	8000e0a <_printf_i+0x23a>
 8000de2:	68e0      	ldr	r0, [r4, #12]
 8000de4:	9b03      	ldr	r3, [sp, #12]
 8000de6:	4298      	cmp	r0, r3
 8000de8:	bfb8      	it	lt
 8000dea:	4618      	movlt	r0, r3
 8000dec:	e7a4      	b.n	8000d38 <_printf_i+0x168>
 8000dee:	2301      	movs	r3, #1
 8000df0:	4632      	mov	r2, r6
 8000df2:	4649      	mov	r1, r9
 8000df4:	4640      	mov	r0, r8
 8000df6:	47d0      	blx	sl
 8000df8:	3001      	adds	r0, #1
 8000dfa:	d09b      	beq.n	8000d34 <_printf_i+0x164>
 8000dfc:	3501      	adds	r5, #1
 8000dfe:	68e3      	ldr	r3, [r4, #12]
 8000e00:	9903      	ldr	r1, [sp, #12]
 8000e02:	1a5b      	subs	r3, r3, r1
 8000e04:	42ab      	cmp	r3, r5
 8000e06:	dcf2      	bgt.n	8000dee <_printf_i+0x21e>
 8000e08:	e7eb      	b.n	8000de2 <_printf_i+0x212>
 8000e0a:	2500      	movs	r5, #0
 8000e0c:	f104 0619 	add.w	r6, r4, #25
 8000e10:	e7f5      	b.n	8000dfe <_printf_i+0x22e>
 8000e12:	bf00      	nop
 8000e14:	080014b1 	.word	0x080014b1
 8000e18:	080014c2 	.word	0x080014c2

08000e1c <_sbrk_r>:
 8000e1c:	b538      	push	{r3, r4, r5, lr}
 8000e1e:	4d06      	ldr	r5, [pc, #24]	; (8000e38 <_sbrk_r+0x1c>)
 8000e20:	2300      	movs	r3, #0
 8000e22:	4604      	mov	r4, r0
 8000e24:	4608      	mov	r0, r1
 8000e26:	602b      	str	r3, [r5, #0]
 8000e28:	f7ff fad4 	bl	80003d4 <_sbrk>
 8000e2c:	1c43      	adds	r3, r0, #1
 8000e2e:	d102      	bne.n	8000e36 <_sbrk_r+0x1a>
 8000e30:	682b      	ldr	r3, [r5, #0]
 8000e32:	b103      	cbz	r3, 8000e36 <_sbrk_r+0x1a>
 8000e34:	6023      	str	r3, [r4, #0]
 8000e36:	bd38      	pop	{r3, r4, r5, pc}
 8000e38:	20000090 	.word	0x20000090

08000e3c <__sread>:
 8000e3c:	b510      	push	{r4, lr}
 8000e3e:	460c      	mov	r4, r1
 8000e40:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000e44:	f000 fab2 	bl	80013ac <_read_r>
 8000e48:	2800      	cmp	r0, #0
 8000e4a:	bfab      	itete	ge
 8000e4c:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8000e4e:	89a3      	ldrhlt	r3, [r4, #12]
 8000e50:	181b      	addge	r3, r3, r0
 8000e52:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8000e56:	bfac      	ite	ge
 8000e58:	6563      	strge	r3, [r4, #84]	; 0x54
 8000e5a:	81a3      	strhlt	r3, [r4, #12]
 8000e5c:	bd10      	pop	{r4, pc}

08000e5e <__swrite>:
 8000e5e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000e62:	461f      	mov	r7, r3
 8000e64:	898b      	ldrh	r3, [r1, #12]
 8000e66:	05db      	lsls	r3, r3, #23
 8000e68:	4605      	mov	r5, r0
 8000e6a:	460c      	mov	r4, r1
 8000e6c:	4616      	mov	r6, r2
 8000e6e:	d505      	bpl.n	8000e7c <__swrite+0x1e>
 8000e70:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000e74:	2302      	movs	r3, #2
 8000e76:	2200      	movs	r2, #0
 8000e78:	f000 f9c8 	bl	800120c <_lseek_r>
 8000e7c:	89a3      	ldrh	r3, [r4, #12]
 8000e7e:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000e82:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8000e86:	81a3      	strh	r3, [r4, #12]
 8000e88:	4632      	mov	r2, r6
 8000e8a:	463b      	mov	r3, r7
 8000e8c:	4628      	mov	r0, r5
 8000e8e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8000e92:	f000 b869 	b.w	8000f68 <_write_r>

08000e96 <__sseek>:
 8000e96:	b510      	push	{r4, lr}
 8000e98:	460c      	mov	r4, r1
 8000e9a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000e9e:	f000 f9b5 	bl	800120c <_lseek_r>
 8000ea2:	1c43      	adds	r3, r0, #1
 8000ea4:	89a3      	ldrh	r3, [r4, #12]
 8000ea6:	bf15      	itete	ne
 8000ea8:	6560      	strne	r0, [r4, #84]	; 0x54
 8000eaa:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8000eae:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8000eb2:	81a3      	strheq	r3, [r4, #12]
 8000eb4:	bf18      	it	ne
 8000eb6:	81a3      	strhne	r3, [r4, #12]
 8000eb8:	bd10      	pop	{r4, pc}

08000eba <__sclose>:
 8000eba:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000ebe:	f000 b8d3 	b.w	8001068 <_close_r>
	...

08000ec4 <__swbuf_r>:
 8000ec4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000ec6:	460e      	mov	r6, r1
 8000ec8:	4614      	mov	r4, r2
 8000eca:	4605      	mov	r5, r0
 8000ecc:	b118      	cbz	r0, 8000ed6 <__swbuf_r+0x12>
 8000ece:	6983      	ldr	r3, [r0, #24]
 8000ed0:	b90b      	cbnz	r3, 8000ed6 <__swbuf_r+0x12>
 8000ed2:	f7ff fb81 	bl	80005d8 <__sinit>
 8000ed6:	4b21      	ldr	r3, [pc, #132]	; (8000f5c <__swbuf_r+0x98>)
 8000ed8:	429c      	cmp	r4, r3
 8000eda:	d12b      	bne.n	8000f34 <__swbuf_r+0x70>
 8000edc:	686c      	ldr	r4, [r5, #4]
 8000ede:	69a3      	ldr	r3, [r4, #24]
 8000ee0:	60a3      	str	r3, [r4, #8]
 8000ee2:	89a3      	ldrh	r3, [r4, #12]
 8000ee4:	071a      	lsls	r2, r3, #28
 8000ee6:	d52f      	bpl.n	8000f48 <__swbuf_r+0x84>
 8000ee8:	6923      	ldr	r3, [r4, #16]
 8000eea:	b36b      	cbz	r3, 8000f48 <__swbuf_r+0x84>
 8000eec:	6923      	ldr	r3, [r4, #16]
 8000eee:	6820      	ldr	r0, [r4, #0]
 8000ef0:	1ac0      	subs	r0, r0, r3
 8000ef2:	6963      	ldr	r3, [r4, #20]
 8000ef4:	b2f6      	uxtb	r6, r6
 8000ef6:	4283      	cmp	r3, r0
 8000ef8:	4637      	mov	r7, r6
 8000efa:	dc04      	bgt.n	8000f06 <__swbuf_r+0x42>
 8000efc:	4621      	mov	r1, r4
 8000efe:	4628      	mov	r0, r5
 8000f00:	f000 f948 	bl	8001194 <_fflush_r>
 8000f04:	bb30      	cbnz	r0, 8000f54 <__swbuf_r+0x90>
 8000f06:	68a3      	ldr	r3, [r4, #8]
 8000f08:	3b01      	subs	r3, #1
 8000f0a:	60a3      	str	r3, [r4, #8]
 8000f0c:	6823      	ldr	r3, [r4, #0]
 8000f0e:	1c5a      	adds	r2, r3, #1
 8000f10:	6022      	str	r2, [r4, #0]
 8000f12:	701e      	strb	r6, [r3, #0]
 8000f14:	6963      	ldr	r3, [r4, #20]
 8000f16:	3001      	adds	r0, #1
 8000f18:	4283      	cmp	r3, r0
 8000f1a:	d004      	beq.n	8000f26 <__swbuf_r+0x62>
 8000f1c:	89a3      	ldrh	r3, [r4, #12]
 8000f1e:	07db      	lsls	r3, r3, #31
 8000f20:	d506      	bpl.n	8000f30 <__swbuf_r+0x6c>
 8000f22:	2e0a      	cmp	r6, #10
 8000f24:	d104      	bne.n	8000f30 <__swbuf_r+0x6c>
 8000f26:	4621      	mov	r1, r4
 8000f28:	4628      	mov	r0, r5
 8000f2a:	f000 f933 	bl	8001194 <_fflush_r>
 8000f2e:	b988      	cbnz	r0, 8000f54 <__swbuf_r+0x90>
 8000f30:	4638      	mov	r0, r7
 8000f32:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000f34:	4b0a      	ldr	r3, [pc, #40]	; (8000f60 <__swbuf_r+0x9c>)
 8000f36:	429c      	cmp	r4, r3
 8000f38:	d101      	bne.n	8000f3e <__swbuf_r+0x7a>
 8000f3a:	68ac      	ldr	r4, [r5, #8]
 8000f3c:	e7cf      	b.n	8000ede <__swbuf_r+0x1a>
 8000f3e:	4b09      	ldr	r3, [pc, #36]	; (8000f64 <__swbuf_r+0xa0>)
 8000f40:	429c      	cmp	r4, r3
 8000f42:	bf08      	it	eq
 8000f44:	68ec      	ldreq	r4, [r5, #12]
 8000f46:	e7ca      	b.n	8000ede <__swbuf_r+0x1a>
 8000f48:	4621      	mov	r1, r4
 8000f4a:	4628      	mov	r0, r5
 8000f4c:	f000 f81e 	bl	8000f8c <__swsetup_r>
 8000f50:	2800      	cmp	r0, #0
 8000f52:	d0cb      	beq.n	8000eec <__swbuf_r+0x28>
 8000f54:	f04f 37ff 	mov.w	r7, #4294967295	; 0xffffffff
 8000f58:	e7ea      	b.n	8000f30 <__swbuf_r+0x6c>
 8000f5a:	bf00      	nop
 8000f5c:	08001460 	.word	0x08001460
 8000f60:	08001480 	.word	0x08001480
 8000f64:	08001440 	.word	0x08001440

08000f68 <_write_r>:
 8000f68:	b538      	push	{r3, r4, r5, lr}
 8000f6a:	4d07      	ldr	r5, [pc, #28]	; (8000f88 <_write_r+0x20>)
 8000f6c:	4604      	mov	r4, r0
 8000f6e:	4608      	mov	r0, r1
 8000f70:	4611      	mov	r1, r2
 8000f72:	2200      	movs	r2, #0
 8000f74:	602a      	str	r2, [r5, #0]
 8000f76:	461a      	mov	r2, r3
 8000f78:	f7ff f9db 	bl	8000332 <_write>
 8000f7c:	1c43      	adds	r3, r0, #1
 8000f7e:	d102      	bne.n	8000f86 <_write_r+0x1e>
 8000f80:	682b      	ldr	r3, [r5, #0]
 8000f82:	b103      	cbz	r3, 8000f86 <_write_r+0x1e>
 8000f84:	6023      	str	r3, [r4, #0]
 8000f86:	bd38      	pop	{r3, r4, r5, pc}
 8000f88:	20000090 	.word	0x20000090

08000f8c <__swsetup_r>:
 8000f8c:	4b32      	ldr	r3, [pc, #200]	; (8001058 <__swsetup_r+0xcc>)
 8000f8e:	b570      	push	{r4, r5, r6, lr}
 8000f90:	681d      	ldr	r5, [r3, #0]
 8000f92:	4606      	mov	r6, r0
 8000f94:	460c      	mov	r4, r1
 8000f96:	b125      	cbz	r5, 8000fa2 <__swsetup_r+0x16>
 8000f98:	69ab      	ldr	r3, [r5, #24]
 8000f9a:	b913      	cbnz	r3, 8000fa2 <__swsetup_r+0x16>
 8000f9c:	4628      	mov	r0, r5
 8000f9e:	f7ff fb1b 	bl	80005d8 <__sinit>
 8000fa2:	4b2e      	ldr	r3, [pc, #184]	; (800105c <__swsetup_r+0xd0>)
 8000fa4:	429c      	cmp	r4, r3
 8000fa6:	d10f      	bne.n	8000fc8 <__swsetup_r+0x3c>
 8000fa8:	686c      	ldr	r4, [r5, #4]
 8000faa:	89a3      	ldrh	r3, [r4, #12]
 8000fac:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8000fb0:	0719      	lsls	r1, r3, #28
 8000fb2:	d42c      	bmi.n	800100e <__swsetup_r+0x82>
 8000fb4:	06dd      	lsls	r5, r3, #27
 8000fb6:	d411      	bmi.n	8000fdc <__swsetup_r+0x50>
 8000fb8:	2309      	movs	r3, #9
 8000fba:	6033      	str	r3, [r6, #0]
 8000fbc:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8000fc0:	81a3      	strh	r3, [r4, #12]
 8000fc2:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8000fc6:	e03e      	b.n	8001046 <__swsetup_r+0xba>
 8000fc8:	4b25      	ldr	r3, [pc, #148]	; (8001060 <__swsetup_r+0xd4>)
 8000fca:	429c      	cmp	r4, r3
 8000fcc:	d101      	bne.n	8000fd2 <__swsetup_r+0x46>
 8000fce:	68ac      	ldr	r4, [r5, #8]
 8000fd0:	e7eb      	b.n	8000faa <__swsetup_r+0x1e>
 8000fd2:	4b24      	ldr	r3, [pc, #144]	; (8001064 <__swsetup_r+0xd8>)
 8000fd4:	429c      	cmp	r4, r3
 8000fd6:	bf08      	it	eq
 8000fd8:	68ec      	ldreq	r4, [r5, #12]
 8000fda:	e7e6      	b.n	8000faa <__swsetup_r+0x1e>
 8000fdc:	0758      	lsls	r0, r3, #29
 8000fde:	d512      	bpl.n	8001006 <__swsetup_r+0x7a>
 8000fe0:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8000fe2:	b141      	cbz	r1, 8000ff6 <__swsetup_r+0x6a>
 8000fe4:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8000fe8:	4299      	cmp	r1, r3
 8000fea:	d002      	beq.n	8000ff2 <__swsetup_r+0x66>
 8000fec:	4630      	mov	r0, r6
 8000fee:	f000 f991 	bl	8001314 <_free_r>
 8000ff2:	2300      	movs	r3, #0
 8000ff4:	6363      	str	r3, [r4, #52]	; 0x34
 8000ff6:	89a3      	ldrh	r3, [r4, #12]
 8000ff8:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8000ffc:	81a3      	strh	r3, [r4, #12]
 8000ffe:	2300      	movs	r3, #0
 8001000:	6063      	str	r3, [r4, #4]
 8001002:	6923      	ldr	r3, [r4, #16]
 8001004:	6023      	str	r3, [r4, #0]
 8001006:	89a3      	ldrh	r3, [r4, #12]
 8001008:	f043 0308 	orr.w	r3, r3, #8
 800100c:	81a3      	strh	r3, [r4, #12]
 800100e:	6923      	ldr	r3, [r4, #16]
 8001010:	b94b      	cbnz	r3, 8001026 <__swsetup_r+0x9a>
 8001012:	89a3      	ldrh	r3, [r4, #12]
 8001014:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8001018:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800101c:	d003      	beq.n	8001026 <__swsetup_r+0x9a>
 800101e:	4621      	mov	r1, r4
 8001020:	4630      	mov	r0, r6
 8001022:	f000 f92b 	bl	800127c <__smakebuf_r>
 8001026:	89a0      	ldrh	r0, [r4, #12]
 8001028:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800102c:	f010 0301 	ands.w	r3, r0, #1
 8001030:	d00a      	beq.n	8001048 <__swsetup_r+0xbc>
 8001032:	2300      	movs	r3, #0
 8001034:	60a3      	str	r3, [r4, #8]
 8001036:	6963      	ldr	r3, [r4, #20]
 8001038:	425b      	negs	r3, r3
 800103a:	61a3      	str	r3, [r4, #24]
 800103c:	6923      	ldr	r3, [r4, #16]
 800103e:	b943      	cbnz	r3, 8001052 <__swsetup_r+0xc6>
 8001040:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8001044:	d1ba      	bne.n	8000fbc <__swsetup_r+0x30>
 8001046:	bd70      	pop	{r4, r5, r6, pc}
 8001048:	0781      	lsls	r1, r0, #30
 800104a:	bf58      	it	pl
 800104c:	6963      	ldrpl	r3, [r4, #20]
 800104e:	60a3      	str	r3, [r4, #8]
 8001050:	e7f4      	b.n	800103c <__swsetup_r+0xb0>
 8001052:	2000      	movs	r0, #0
 8001054:	e7f7      	b.n	8001046 <__swsetup_r+0xba>
 8001056:	bf00      	nop
 8001058:	20000000 	.word	0x20000000
 800105c:	08001460 	.word	0x08001460
 8001060:	08001480 	.word	0x08001480
 8001064:	08001440 	.word	0x08001440

08001068 <_close_r>:
 8001068:	b538      	push	{r3, r4, r5, lr}
 800106a:	4d06      	ldr	r5, [pc, #24]	; (8001084 <_close_r+0x1c>)
 800106c:	2300      	movs	r3, #0
 800106e:	4604      	mov	r4, r0
 8001070:	4608      	mov	r0, r1
 8001072:	602b      	str	r3, [r5, #0]
 8001074:	f7ff f979 	bl	800036a <_close>
 8001078:	1c43      	adds	r3, r0, #1
 800107a:	d102      	bne.n	8001082 <_close_r+0x1a>
 800107c:	682b      	ldr	r3, [r5, #0]
 800107e:	b103      	cbz	r3, 8001082 <_close_r+0x1a>
 8001080:	6023      	str	r3, [r4, #0]
 8001082:	bd38      	pop	{r3, r4, r5, pc}
 8001084:	20000090 	.word	0x20000090

08001088 <__sflush_r>:
 8001088:	898a      	ldrh	r2, [r1, #12]
 800108a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800108e:	4605      	mov	r5, r0
 8001090:	0710      	lsls	r0, r2, #28
 8001092:	460c      	mov	r4, r1
 8001094:	d458      	bmi.n	8001148 <__sflush_r+0xc0>
 8001096:	684b      	ldr	r3, [r1, #4]
 8001098:	2b00      	cmp	r3, #0
 800109a:	dc05      	bgt.n	80010a8 <__sflush_r+0x20>
 800109c:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 800109e:	2b00      	cmp	r3, #0
 80010a0:	dc02      	bgt.n	80010a8 <__sflush_r+0x20>
 80010a2:	2000      	movs	r0, #0
 80010a4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80010a8:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80010aa:	2e00      	cmp	r6, #0
 80010ac:	d0f9      	beq.n	80010a2 <__sflush_r+0x1a>
 80010ae:	2300      	movs	r3, #0
 80010b0:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 80010b4:	682f      	ldr	r7, [r5, #0]
 80010b6:	602b      	str	r3, [r5, #0]
 80010b8:	d032      	beq.n	8001120 <__sflush_r+0x98>
 80010ba:	6d60      	ldr	r0, [r4, #84]	; 0x54
 80010bc:	89a3      	ldrh	r3, [r4, #12]
 80010be:	075a      	lsls	r2, r3, #29
 80010c0:	d505      	bpl.n	80010ce <__sflush_r+0x46>
 80010c2:	6863      	ldr	r3, [r4, #4]
 80010c4:	1ac0      	subs	r0, r0, r3
 80010c6:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80010c8:	b10b      	cbz	r3, 80010ce <__sflush_r+0x46>
 80010ca:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80010cc:	1ac0      	subs	r0, r0, r3
 80010ce:	2300      	movs	r3, #0
 80010d0:	4602      	mov	r2, r0
 80010d2:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80010d4:	6a21      	ldr	r1, [r4, #32]
 80010d6:	4628      	mov	r0, r5
 80010d8:	47b0      	blx	r6
 80010da:	1c43      	adds	r3, r0, #1
 80010dc:	89a3      	ldrh	r3, [r4, #12]
 80010de:	d106      	bne.n	80010ee <__sflush_r+0x66>
 80010e0:	6829      	ldr	r1, [r5, #0]
 80010e2:	291d      	cmp	r1, #29
 80010e4:	d82c      	bhi.n	8001140 <__sflush_r+0xb8>
 80010e6:	4a2a      	ldr	r2, [pc, #168]	; (8001190 <__sflush_r+0x108>)
 80010e8:	40ca      	lsrs	r2, r1
 80010ea:	07d6      	lsls	r6, r2, #31
 80010ec:	d528      	bpl.n	8001140 <__sflush_r+0xb8>
 80010ee:	2200      	movs	r2, #0
 80010f0:	6062      	str	r2, [r4, #4]
 80010f2:	04d9      	lsls	r1, r3, #19
 80010f4:	6922      	ldr	r2, [r4, #16]
 80010f6:	6022      	str	r2, [r4, #0]
 80010f8:	d504      	bpl.n	8001104 <__sflush_r+0x7c>
 80010fa:	1c42      	adds	r2, r0, #1
 80010fc:	d101      	bne.n	8001102 <__sflush_r+0x7a>
 80010fe:	682b      	ldr	r3, [r5, #0]
 8001100:	b903      	cbnz	r3, 8001104 <__sflush_r+0x7c>
 8001102:	6560      	str	r0, [r4, #84]	; 0x54
 8001104:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8001106:	602f      	str	r7, [r5, #0]
 8001108:	2900      	cmp	r1, #0
 800110a:	d0ca      	beq.n	80010a2 <__sflush_r+0x1a>
 800110c:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8001110:	4299      	cmp	r1, r3
 8001112:	d002      	beq.n	800111a <__sflush_r+0x92>
 8001114:	4628      	mov	r0, r5
 8001116:	f000 f8fd 	bl	8001314 <_free_r>
 800111a:	2000      	movs	r0, #0
 800111c:	6360      	str	r0, [r4, #52]	; 0x34
 800111e:	e7c1      	b.n	80010a4 <__sflush_r+0x1c>
 8001120:	6a21      	ldr	r1, [r4, #32]
 8001122:	2301      	movs	r3, #1
 8001124:	4628      	mov	r0, r5
 8001126:	47b0      	blx	r6
 8001128:	1c41      	adds	r1, r0, #1
 800112a:	d1c7      	bne.n	80010bc <__sflush_r+0x34>
 800112c:	682b      	ldr	r3, [r5, #0]
 800112e:	2b00      	cmp	r3, #0
 8001130:	d0c4      	beq.n	80010bc <__sflush_r+0x34>
 8001132:	2b1d      	cmp	r3, #29
 8001134:	d001      	beq.n	800113a <__sflush_r+0xb2>
 8001136:	2b16      	cmp	r3, #22
 8001138:	d101      	bne.n	800113e <__sflush_r+0xb6>
 800113a:	602f      	str	r7, [r5, #0]
 800113c:	e7b1      	b.n	80010a2 <__sflush_r+0x1a>
 800113e:	89a3      	ldrh	r3, [r4, #12]
 8001140:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8001144:	81a3      	strh	r3, [r4, #12]
 8001146:	e7ad      	b.n	80010a4 <__sflush_r+0x1c>
 8001148:	690f      	ldr	r7, [r1, #16]
 800114a:	2f00      	cmp	r7, #0
 800114c:	d0a9      	beq.n	80010a2 <__sflush_r+0x1a>
 800114e:	0793      	lsls	r3, r2, #30
 8001150:	680e      	ldr	r6, [r1, #0]
 8001152:	bf08      	it	eq
 8001154:	694b      	ldreq	r3, [r1, #20]
 8001156:	600f      	str	r7, [r1, #0]
 8001158:	bf18      	it	ne
 800115a:	2300      	movne	r3, #0
 800115c:	eba6 0807 	sub.w	r8, r6, r7
 8001160:	608b      	str	r3, [r1, #8]
 8001162:	f1b8 0f00 	cmp.w	r8, #0
 8001166:	dd9c      	ble.n	80010a2 <__sflush_r+0x1a>
 8001168:	6a21      	ldr	r1, [r4, #32]
 800116a:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 800116c:	4643      	mov	r3, r8
 800116e:	463a      	mov	r2, r7
 8001170:	4628      	mov	r0, r5
 8001172:	47b0      	blx	r6
 8001174:	2800      	cmp	r0, #0
 8001176:	dc06      	bgt.n	8001186 <__sflush_r+0xfe>
 8001178:	89a3      	ldrh	r3, [r4, #12]
 800117a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800117e:	81a3      	strh	r3, [r4, #12]
 8001180:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8001184:	e78e      	b.n	80010a4 <__sflush_r+0x1c>
 8001186:	4407      	add	r7, r0
 8001188:	eba8 0800 	sub.w	r8, r8, r0
 800118c:	e7e9      	b.n	8001162 <__sflush_r+0xda>
 800118e:	bf00      	nop
 8001190:	20400001 	.word	0x20400001

08001194 <_fflush_r>:
 8001194:	b538      	push	{r3, r4, r5, lr}
 8001196:	690b      	ldr	r3, [r1, #16]
 8001198:	4605      	mov	r5, r0
 800119a:	460c      	mov	r4, r1
 800119c:	b913      	cbnz	r3, 80011a4 <_fflush_r+0x10>
 800119e:	2500      	movs	r5, #0
 80011a0:	4628      	mov	r0, r5
 80011a2:	bd38      	pop	{r3, r4, r5, pc}
 80011a4:	b118      	cbz	r0, 80011ae <_fflush_r+0x1a>
 80011a6:	6983      	ldr	r3, [r0, #24]
 80011a8:	b90b      	cbnz	r3, 80011ae <_fflush_r+0x1a>
 80011aa:	f7ff fa15 	bl	80005d8 <__sinit>
 80011ae:	4b14      	ldr	r3, [pc, #80]	; (8001200 <_fflush_r+0x6c>)
 80011b0:	429c      	cmp	r4, r3
 80011b2:	d11b      	bne.n	80011ec <_fflush_r+0x58>
 80011b4:	686c      	ldr	r4, [r5, #4]
 80011b6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80011ba:	2b00      	cmp	r3, #0
 80011bc:	d0ef      	beq.n	800119e <_fflush_r+0xa>
 80011be:	6e62      	ldr	r2, [r4, #100]	; 0x64
 80011c0:	07d0      	lsls	r0, r2, #31
 80011c2:	d404      	bmi.n	80011ce <_fflush_r+0x3a>
 80011c4:	0599      	lsls	r1, r3, #22
 80011c6:	d402      	bmi.n	80011ce <_fflush_r+0x3a>
 80011c8:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80011ca:	f7ff faa3 	bl	8000714 <__retarget_lock_acquire_recursive>
 80011ce:	4628      	mov	r0, r5
 80011d0:	4621      	mov	r1, r4
 80011d2:	f7ff ff59 	bl	8001088 <__sflush_r>
 80011d6:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80011d8:	07da      	lsls	r2, r3, #31
 80011da:	4605      	mov	r5, r0
 80011dc:	d4e0      	bmi.n	80011a0 <_fflush_r+0xc>
 80011de:	89a3      	ldrh	r3, [r4, #12]
 80011e0:	059b      	lsls	r3, r3, #22
 80011e2:	d4dd      	bmi.n	80011a0 <_fflush_r+0xc>
 80011e4:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80011e6:	f7ff fa96 	bl	8000716 <__retarget_lock_release_recursive>
 80011ea:	e7d9      	b.n	80011a0 <_fflush_r+0xc>
 80011ec:	4b05      	ldr	r3, [pc, #20]	; (8001204 <_fflush_r+0x70>)
 80011ee:	429c      	cmp	r4, r3
 80011f0:	d101      	bne.n	80011f6 <_fflush_r+0x62>
 80011f2:	68ac      	ldr	r4, [r5, #8]
 80011f4:	e7df      	b.n	80011b6 <_fflush_r+0x22>
 80011f6:	4b04      	ldr	r3, [pc, #16]	; (8001208 <_fflush_r+0x74>)
 80011f8:	429c      	cmp	r4, r3
 80011fa:	bf08      	it	eq
 80011fc:	68ec      	ldreq	r4, [r5, #12]
 80011fe:	e7da      	b.n	80011b6 <_fflush_r+0x22>
 8001200:	08001460 	.word	0x08001460
 8001204:	08001480 	.word	0x08001480
 8001208:	08001440 	.word	0x08001440

0800120c <_lseek_r>:
 800120c:	b538      	push	{r3, r4, r5, lr}
 800120e:	4d07      	ldr	r5, [pc, #28]	; (800122c <_lseek_r+0x20>)
 8001210:	4604      	mov	r4, r0
 8001212:	4608      	mov	r0, r1
 8001214:	4611      	mov	r1, r2
 8001216:	2200      	movs	r2, #0
 8001218:	602a      	str	r2, [r5, #0]
 800121a:	461a      	mov	r2, r3
 800121c:	f7ff f8cc 	bl	80003b8 <_lseek>
 8001220:	1c43      	adds	r3, r0, #1
 8001222:	d102      	bne.n	800122a <_lseek_r+0x1e>
 8001224:	682b      	ldr	r3, [r5, #0]
 8001226:	b103      	cbz	r3, 800122a <_lseek_r+0x1e>
 8001228:	6023      	str	r3, [r4, #0]
 800122a:	bd38      	pop	{r3, r4, r5, pc}
 800122c:	20000090 	.word	0x20000090

08001230 <__swhatbuf_r>:
 8001230:	b570      	push	{r4, r5, r6, lr}
 8001232:	460e      	mov	r6, r1
 8001234:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001238:	2900      	cmp	r1, #0
 800123a:	b096      	sub	sp, #88	; 0x58
 800123c:	4614      	mov	r4, r2
 800123e:	461d      	mov	r5, r3
 8001240:	da08      	bge.n	8001254 <__swhatbuf_r+0x24>
 8001242:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 8001246:	2200      	movs	r2, #0
 8001248:	602a      	str	r2, [r5, #0]
 800124a:	061a      	lsls	r2, r3, #24
 800124c:	d410      	bmi.n	8001270 <__swhatbuf_r+0x40>
 800124e:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8001252:	e00e      	b.n	8001272 <__swhatbuf_r+0x42>
 8001254:	466a      	mov	r2, sp
 8001256:	f000 f8bb 	bl	80013d0 <_fstat_r>
 800125a:	2800      	cmp	r0, #0
 800125c:	dbf1      	blt.n	8001242 <__swhatbuf_r+0x12>
 800125e:	9a01      	ldr	r2, [sp, #4]
 8001260:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8001264:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8001268:	425a      	negs	r2, r3
 800126a:	415a      	adcs	r2, r3
 800126c:	602a      	str	r2, [r5, #0]
 800126e:	e7ee      	b.n	800124e <__swhatbuf_r+0x1e>
 8001270:	2340      	movs	r3, #64	; 0x40
 8001272:	2000      	movs	r0, #0
 8001274:	6023      	str	r3, [r4, #0]
 8001276:	b016      	add	sp, #88	; 0x58
 8001278:	bd70      	pop	{r4, r5, r6, pc}
	...

0800127c <__smakebuf_r>:
 800127c:	898b      	ldrh	r3, [r1, #12]
 800127e:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8001280:	079d      	lsls	r5, r3, #30
 8001282:	4606      	mov	r6, r0
 8001284:	460c      	mov	r4, r1
 8001286:	d507      	bpl.n	8001298 <__smakebuf_r+0x1c>
 8001288:	f104 0347 	add.w	r3, r4, #71	; 0x47
 800128c:	6023      	str	r3, [r4, #0]
 800128e:	6123      	str	r3, [r4, #16]
 8001290:	2301      	movs	r3, #1
 8001292:	6163      	str	r3, [r4, #20]
 8001294:	b002      	add	sp, #8
 8001296:	bd70      	pop	{r4, r5, r6, pc}
 8001298:	ab01      	add	r3, sp, #4
 800129a:	466a      	mov	r2, sp
 800129c:	f7ff ffc8 	bl	8001230 <__swhatbuf_r>
 80012a0:	9900      	ldr	r1, [sp, #0]
 80012a2:	4605      	mov	r5, r0
 80012a4:	4630      	mov	r0, r6
 80012a6:	f7ff fa57 	bl	8000758 <_malloc_r>
 80012aa:	b948      	cbnz	r0, 80012c0 <__smakebuf_r+0x44>
 80012ac:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80012b0:	059a      	lsls	r2, r3, #22
 80012b2:	d4ef      	bmi.n	8001294 <__smakebuf_r+0x18>
 80012b4:	f023 0303 	bic.w	r3, r3, #3
 80012b8:	f043 0302 	orr.w	r3, r3, #2
 80012bc:	81a3      	strh	r3, [r4, #12]
 80012be:	e7e3      	b.n	8001288 <__smakebuf_r+0xc>
 80012c0:	4b0d      	ldr	r3, [pc, #52]	; (80012f8 <__smakebuf_r+0x7c>)
 80012c2:	62b3      	str	r3, [r6, #40]	; 0x28
 80012c4:	89a3      	ldrh	r3, [r4, #12]
 80012c6:	6020      	str	r0, [r4, #0]
 80012c8:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80012cc:	81a3      	strh	r3, [r4, #12]
 80012ce:	9b00      	ldr	r3, [sp, #0]
 80012d0:	6163      	str	r3, [r4, #20]
 80012d2:	9b01      	ldr	r3, [sp, #4]
 80012d4:	6120      	str	r0, [r4, #16]
 80012d6:	b15b      	cbz	r3, 80012f0 <__smakebuf_r+0x74>
 80012d8:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80012dc:	4630      	mov	r0, r6
 80012de:	f000 f889 	bl	80013f4 <_isatty_r>
 80012e2:	b128      	cbz	r0, 80012f0 <__smakebuf_r+0x74>
 80012e4:	89a3      	ldrh	r3, [r4, #12]
 80012e6:	f023 0303 	bic.w	r3, r3, #3
 80012ea:	f043 0301 	orr.w	r3, r3, #1
 80012ee:	81a3      	strh	r3, [r4, #12]
 80012f0:	89a0      	ldrh	r0, [r4, #12]
 80012f2:	4305      	orrs	r5, r0
 80012f4:	81a5      	strh	r5, [r4, #12]
 80012f6:	e7cd      	b.n	8001294 <__smakebuf_r+0x18>
 80012f8:	08000571 	.word	0x08000571

080012fc <__malloc_lock>:
 80012fc:	4801      	ldr	r0, [pc, #4]	; (8001304 <__malloc_lock+0x8>)
 80012fe:	f7ff ba09 	b.w	8000714 <__retarget_lock_acquire_recursive>
 8001302:	bf00      	nop
 8001304:	20000084 	.word	0x20000084

08001308 <__malloc_unlock>:
 8001308:	4801      	ldr	r0, [pc, #4]	; (8001310 <__malloc_unlock+0x8>)
 800130a:	f7ff ba04 	b.w	8000716 <__retarget_lock_release_recursive>
 800130e:	bf00      	nop
 8001310:	20000084 	.word	0x20000084

08001314 <_free_r>:
 8001314:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8001316:	2900      	cmp	r1, #0
 8001318:	d044      	beq.n	80013a4 <_free_r+0x90>
 800131a:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800131e:	9001      	str	r0, [sp, #4]
 8001320:	2b00      	cmp	r3, #0
 8001322:	f1a1 0404 	sub.w	r4, r1, #4
 8001326:	bfb8      	it	lt
 8001328:	18e4      	addlt	r4, r4, r3
 800132a:	f7ff ffe7 	bl	80012fc <__malloc_lock>
 800132e:	4a1e      	ldr	r2, [pc, #120]	; (80013a8 <_free_r+0x94>)
 8001330:	9801      	ldr	r0, [sp, #4]
 8001332:	6813      	ldr	r3, [r2, #0]
 8001334:	b933      	cbnz	r3, 8001344 <_free_r+0x30>
 8001336:	6063      	str	r3, [r4, #4]
 8001338:	6014      	str	r4, [r2, #0]
 800133a:	b003      	add	sp, #12
 800133c:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8001340:	f7ff bfe2 	b.w	8001308 <__malloc_unlock>
 8001344:	42a3      	cmp	r3, r4
 8001346:	d908      	bls.n	800135a <_free_r+0x46>
 8001348:	6825      	ldr	r5, [r4, #0]
 800134a:	1961      	adds	r1, r4, r5
 800134c:	428b      	cmp	r3, r1
 800134e:	bf01      	itttt	eq
 8001350:	6819      	ldreq	r1, [r3, #0]
 8001352:	685b      	ldreq	r3, [r3, #4]
 8001354:	1949      	addeq	r1, r1, r5
 8001356:	6021      	streq	r1, [r4, #0]
 8001358:	e7ed      	b.n	8001336 <_free_r+0x22>
 800135a:	461a      	mov	r2, r3
 800135c:	685b      	ldr	r3, [r3, #4]
 800135e:	b10b      	cbz	r3, 8001364 <_free_r+0x50>
 8001360:	42a3      	cmp	r3, r4
 8001362:	d9fa      	bls.n	800135a <_free_r+0x46>
 8001364:	6811      	ldr	r1, [r2, #0]
 8001366:	1855      	adds	r5, r2, r1
 8001368:	42a5      	cmp	r5, r4
 800136a:	d10b      	bne.n	8001384 <_free_r+0x70>
 800136c:	6824      	ldr	r4, [r4, #0]
 800136e:	4421      	add	r1, r4
 8001370:	1854      	adds	r4, r2, r1
 8001372:	42a3      	cmp	r3, r4
 8001374:	6011      	str	r1, [r2, #0]
 8001376:	d1e0      	bne.n	800133a <_free_r+0x26>
 8001378:	681c      	ldr	r4, [r3, #0]
 800137a:	685b      	ldr	r3, [r3, #4]
 800137c:	6053      	str	r3, [r2, #4]
 800137e:	4421      	add	r1, r4
 8001380:	6011      	str	r1, [r2, #0]
 8001382:	e7da      	b.n	800133a <_free_r+0x26>
 8001384:	d902      	bls.n	800138c <_free_r+0x78>
 8001386:	230c      	movs	r3, #12
 8001388:	6003      	str	r3, [r0, #0]
 800138a:	e7d6      	b.n	800133a <_free_r+0x26>
 800138c:	6825      	ldr	r5, [r4, #0]
 800138e:	1961      	adds	r1, r4, r5
 8001390:	428b      	cmp	r3, r1
 8001392:	bf04      	itt	eq
 8001394:	6819      	ldreq	r1, [r3, #0]
 8001396:	685b      	ldreq	r3, [r3, #4]
 8001398:	6063      	str	r3, [r4, #4]
 800139a:	bf04      	itt	eq
 800139c:	1949      	addeq	r1, r1, r5
 800139e:	6021      	streq	r1, [r4, #0]
 80013a0:	6054      	str	r4, [r2, #4]
 80013a2:	e7ca      	b.n	800133a <_free_r+0x26>
 80013a4:	b003      	add	sp, #12
 80013a6:	bd30      	pop	{r4, r5, pc}
 80013a8:	20000088 	.word	0x20000088

080013ac <_read_r>:
 80013ac:	b538      	push	{r3, r4, r5, lr}
 80013ae:	4d07      	ldr	r5, [pc, #28]	; (80013cc <_read_r+0x20>)
 80013b0:	4604      	mov	r4, r0
 80013b2:	4608      	mov	r0, r1
 80013b4:	4611      	mov	r1, r2
 80013b6:	2200      	movs	r2, #0
 80013b8:	602a      	str	r2, [r5, #0]
 80013ba:	461a      	mov	r2, r3
 80013bc:	f7fe ff9c 	bl	80002f8 <_read>
 80013c0:	1c43      	adds	r3, r0, #1
 80013c2:	d102      	bne.n	80013ca <_read_r+0x1e>
 80013c4:	682b      	ldr	r3, [r5, #0]
 80013c6:	b103      	cbz	r3, 80013ca <_read_r+0x1e>
 80013c8:	6023      	str	r3, [r4, #0]
 80013ca:	bd38      	pop	{r3, r4, r5, pc}
 80013cc:	20000090 	.word	0x20000090

080013d0 <_fstat_r>:
 80013d0:	b538      	push	{r3, r4, r5, lr}
 80013d2:	4d07      	ldr	r5, [pc, #28]	; (80013f0 <_fstat_r+0x20>)
 80013d4:	2300      	movs	r3, #0
 80013d6:	4604      	mov	r4, r0
 80013d8:	4608      	mov	r0, r1
 80013da:	4611      	mov	r1, r2
 80013dc:	602b      	str	r3, [r5, #0]
 80013de:	f7fe ffd0 	bl	8000382 <_fstat>
 80013e2:	1c43      	adds	r3, r0, #1
 80013e4:	d102      	bne.n	80013ec <_fstat_r+0x1c>
 80013e6:	682b      	ldr	r3, [r5, #0]
 80013e8:	b103      	cbz	r3, 80013ec <_fstat_r+0x1c>
 80013ea:	6023      	str	r3, [r4, #0]
 80013ec:	bd38      	pop	{r3, r4, r5, pc}
 80013ee:	bf00      	nop
 80013f0:	20000090 	.word	0x20000090

080013f4 <_isatty_r>:
 80013f4:	b538      	push	{r3, r4, r5, lr}
 80013f6:	4d06      	ldr	r5, [pc, #24]	; (8001410 <_isatty_r+0x1c>)
 80013f8:	2300      	movs	r3, #0
 80013fa:	4604      	mov	r4, r0
 80013fc:	4608      	mov	r0, r1
 80013fe:	602b      	str	r3, [r5, #0]
 8001400:	f7fe ffcf 	bl	80003a2 <_isatty>
 8001404:	1c43      	adds	r3, r0, #1
 8001406:	d102      	bne.n	800140e <_isatty_r+0x1a>
 8001408:	682b      	ldr	r3, [r5, #0]
 800140a:	b103      	cbz	r3, 800140e <_isatty_r+0x1a>
 800140c:	6023      	str	r3, [r4, #0]
 800140e:	bd38      	pop	{r3, r4, r5, pc}
 8001410:	20000090 	.word	0x20000090

08001414 <_init>:
 8001414:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001416:	bf00      	nop
 8001418:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800141a:	bc08      	pop	{r3}
 800141c:	469e      	mov	lr, r3
 800141e:	4770      	bx	lr

08001420 <_fini>:
 8001420:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001422:	bf00      	nop
 8001424:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001426:	bc08      	pop	{r3}
 8001428:	469e      	mov	lr, r3
 800142a:	4770      	bx	lr
